stages:
  - Tests
  - Build
  - Release
  - Deploy

Go go.mod tidy test:
  stage: Tests
  script:
    - cp go.mod go.mod.orig
    - /usr/local/go/bin/go mod download
    - /usr/local/go/bin/go mod tidy
    - diff go.mod.orig go.mod
  tags:
    - nlx
    - shell-executor

Go tests:
  stage: Tests
  script:
    - /usr/local/go/bin/go mod download
    - /usr/local/go/bin/go test $(/usr/local/go/bin/go list ./...) -v -coverprofile coverage.out
    - cat coverage.out | ./go-coverage-sum.awk
    - /usr/local/go/bin/go tool cover -html=coverage.out -o coverage.html
  coverage: /^coverage percentage of all packages:\s(\d+.\d+%)/
  artifacts:
    expire_in: 1 month
    paths:
      - coverage.html
  tags:
    - nlx
    - shell-executor

Directory-ui tests:
  image: node:10.15.1-alpine
  stage: Tests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  before_script:
    - cd directory-ui/
    - npm install
  script:
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - directory-ui/coverage
  tags:
    - nlx
    - docker-executor

Insight-ui tests:
  image: node:10.15.1-alpine
  stage: Tests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  before_script:
    - cd insight-ui/
    - npm install
  script:
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - insight-ui/coverage
  tags:
    - nlx
    - docker-executor

Txlog-ui tests:
  image: node:10.15.1-alpine
  stage: Tests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  before_script:
    - cd txlog-ui/
    - npm install
  script:
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - txlog-ui/coverage
  tags:
    - nlx
    - docker-executor

Database diff test:
  stage: Tests
  script:
    - ./directory-db/diff.sh ci-once
    - ./txlog-db/diff.sh ci-once
  tags:
    - nlx
    - shell-executor

Build:
  stage: Build
  script:
    - skaffold build
  tags:
    - nlx
    - shell-executor

Release container images:
  stage: Release
  script:
    - skaffold build --profile release
  only:
    - master
    - tags
  tags:
    - nlx-privileged
    - shell-executor

.deploy:
  stage: Deploy
  script:
    - skaffold run --profile release --profile deploy-${CI_ENVIRONMENT_NAME}
  tags:
    - nlx-privileged
    - shell-executor

Deploy test:
  extends: .deploy
  environment:
    name: test
  only:
    - master
    - tags
  tags:
    - nlx-privileged
    - shell-executor

Deploy acceptance:
  extends: .deploy
  environment:
    name: acc
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor

Deploy demo:
  extends: .deploy
  environment:
    name: demo
  when: manual
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor

Docker tag latest:
  stage: Deploy
  script:
    - skaffold build --profile release | ./docker-tag-latest.awk
  when: manual
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor
