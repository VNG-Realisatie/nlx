stages:
  - Tests
  - Build
  - Release
  - Deploy

Go go.mod tidy test:
  stage: Tests
  script:
    - cp go.mod go.mod.orig
    - /usr/local/go/bin/go mod download
    - /usr/local/go/bin/go mod tidy
    - diff go.mod.orig go.mod
  tags:
    - nlx
    - shell-executor

Go tests:
  stage: Tests
  script:
    - /usr/local/go/bin/go mod download
    - /usr/local/go/bin/go test ./... -coverprofile coverage.out
    - /usr/local/go/bin/go tool cover -html=coverage.out -o coverage.html
    - /usr/local/go/bin/go tool cover -func=coverage.out
  coverage: /total:\t+\(statements\)\t+([\d\.]+?%)/
  artifacts:
    expire_in: 1 month
    paths:
      - coverage.html
  tags:
    - nlx
    - shell-executor

Go linter:
  stage: Tests
  before_script:
   - export PATH=$PATH:/usr/local/go/bin
  script: 
    - golangci-lint run --new-from-rev $(git rev-parse origin/master)
  tags:
    - nlx
    - shell-executor
  
Directory-ui tests:
  image: node:10.15.3-alpine
  stage: Tests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  before_script:
    - cd directory-ui/
    - npm install
  script:
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - directory-ui/coverage
  tags:
    - nlx
    - docker-executor

Insight-ui tests:
  image: node:10.15.3-alpine
  stage: Tests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  before_script:
    - cd insight-ui/
    - npm install
  script:
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - insight-ui/coverage
  tags:
    - nlx
    - docker-executor

Txlog-ui tests:
  image: node:10.15.3-alpine
  stage: Tests
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - node_modules/
  before_script:
    - cd txlog-ui/
    - npm install
  script:
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - txlog-ui/coverage
  tags:
    - nlx
    - docker-executor

Database diff test:
  stage: Tests
  script:
    - ./directory-db/diff.sh ci-once
    - ./txlog-db/diff.sh ci-once
  tags:
    - nlx
    - shell-executor

Build:
  stage: Build
  script:
    - skaffold build
  except:
    - master
    - tags
  tags:
    - nlx
    - shell-executor

Run semantic release:
  image: node:10.15.3
  stage: Release
  before_script:
  - npm ci
  script:
    - npx semantic-release
  only:
    - master
  tags:
    - nlx
    - docker-executor  

Release container images:
  stage: Release
  script:
    - skaffold build --profile release
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor

.deploy:
  stage: Deploy
  script:
    - skaffold run --profile release --profile deploy-${CI_ENVIRONMENT_NAME}
  tags:
    - nlx-privileged
    - shell-executor

Deploy test:
  extends: .deploy
  environment:
    name: test
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor

Deploy acceptance:
  extends: .deploy
  environment:
    name: acc
  when: manual
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor

Deploy demo:
  extends: .deploy
  environment:
    name: demo
  when: manual
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor

Deploy preprod:
  extends: .deploy
  environment:
    name: preprod
  when: manual
  only:
    - tags

Deploy prod:
  extends: .deploy
  environment:
    name: prod
  when: manual
  only:
    - tags

Docker tag latest:
  stage: Deploy
  script:
    - skaffold build --profile release | ./docker-tag-latest.awk
  when: manual
  only:
    - tags
  tags:
    - nlx-privileged
    - shell-executor
