Build acceptance:
  stage: Build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - export GIT_COMMIT_HASH=$(git rev-parse HEAD)
    - export GIT_TAG_NAME=$(git describe --tags)
    - export IMAGE_PREFIX="${CI_REGISTRY_IMAGE}/"
    - export IMAGE_TAG="${GIT_TAG_NAME}"
  script:
    - echo -n "${CI_REGISTRY_IMAGE}" > ci_build_image_registry.txt
    - echo -n "${IMAGE_TAG}" > ci_build_image_tag.txt
    - echo -n "${IMAGE_TAG}" > ci_build_image_version.txt
    - docker-compose version
    - time docker-compose build --parallel
    - time docker-compose push
    - export IMAGE_TAG="latest"
    - time docker-compose build --parallel
    - time docker-compose push
  artifacts:
    paths:
      - ci_build_image_registry.txt
      - ci_build_image_tag.txt
      - ci_build_image_version.txt
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PROJECT_PATH == "commonground/nlx/nlx"'
  tags:
    - cg
    - shell
