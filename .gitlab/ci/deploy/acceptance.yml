Deploy acceptance:
  stage: Deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  environment:
    name: acceptance
  variables:
    K8S_NAMESPACE: nlx-acceptance
    HELM_CHARTS_TO_DEPLOY: "shared brp rdw haarlem saas-party-x"
  before_script:
    - source ./.gitlab/ci/functions.sh
  script:
    - |
      export IMAGE_REGISTRY=$(cat ci_build_image_registry.txt)
      export IMAGE_TAG=$(cat ci_build_image_tag.txt)
      export IMAGE_VERSION=$(cat ci_build_image_version.txt)
      echo -e -n "" > ci_environment_url.txt
    - |
      start_section helm_repo "Update Helm repositories"
      helm repo add stable "https://charts.helm.sh/stable"
      helm repo update
      stop_section helm_repo
    - |
      for CHART in ${HELM_CHARTS_TO_DEPLOY}; do
        start_section deploy_${CHART} "Deploying chart '${CHART}'"
        CHART_DIRECTORY="./helm/deploy/${CHART}"

        if [ -f ${CHART_DIRECTORY}/Chart.lock ]; then
          start_section dependency_${CHART} "Installing Chart dependencies"
          helm dependency build ./helm/deploy/${CHART}
          stop_section dependency_${CHART}
        fi

        helm upgrade ${CHART} ${CHART_DIRECTORY} \
          --install \
          --namespace ${K8S_NAMESPACE} \
          --set-string global.imageRegistry=${IMAGE_REGISTRY} \
          --set-string global.imageTag=${IMAGE_TAG} \
          --values ${CHART_DIRECTORY}/values-acceptance.yaml
        stop_section deploy_${CHART}
      done
    - |
      echo "export CYPRESS_INWAY_NAME=rdw-nlx-inway" >> e2e_environment.sh
      echo "export CYPRESS_LOGIN_ORGANIZATION_NAME=RDW" >> e2e_environment.sh
      echo "export CYPRESS_LOGIN_USERNAME=admin@example.com" >> e2e_environment.sh
      echo "export CYPRESS_LOGIN_PASSWORD=password" >> e2e_environment.sh
  dependencies:
    - Build acceptance
  artifacts:
    paths:
      - e2e_environment.sh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PROJECT_PATH == "commonground/nlx/nlx"'
  tags:
    - cg
    - docker
