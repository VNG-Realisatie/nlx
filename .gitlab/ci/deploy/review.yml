Deploy Review App:
  stage: Deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    KUBECONFIG: /secrets/kubeconfig/review.conf
    REVIEW_BASE_DOMAIN: nlx.reviews
    IMAGE_REGISTRY: "${REVIEW_REGISTRY_HOST}/${CI_PROJECT_PATH}"
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA
    NAME: "nlx-${CI_ENVIRONMENT_SLUG}"
  before_script:
    - source ./.gitlab/ci/functions.sh
  script:
    - export DOMAIN_SUFFIX="${NAME}.${REVIEW_BASE_DOMAIN}"
    - echo -e -n "${DOMAIN_SUFFIX}" > ci_environment_url.txt
    - |
      start_section helm_repo "Update Helm repositories"
      helm repo add stable "https://kubernetes-charts.storage.googleapis.com"
      helm repo update
      stop_section helm_repo
    - |
      start_section namespace "Create namespace '${NAME}'"
      kubectl version
      kubectl create namespace "${NAME}" || true
      stop_section namespace
    - |
      start_section deploy_shared "Deploy shared chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/shared/values-review.yaml.tpl > shared-values-review.yaml
      helm upgrade shared ./helm/deploy/shared \
        --install \
        --namespace ${NAME} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values shared-values-review.yaml
      stop_section deploy_shared
    - |
      start_section deploy_brp "Deploy BRP chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/brp/values-review.yaml.tpl > brp-values-review.yaml
      helm upgrade brp ./helm/deploy/brp \
        --install \
        --namespace ${NAME} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values brp-values-review.yaml
      stop_section deploy_brp
    - |
      start_section deploy_rdw "Deploy RDW chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/rdw/values-review.yaml.tpl > rdw-values-review.yaml
      helm dependency build ./helm/deploy/rdw
      helm upgrade rdw ./helm/deploy/rdw \
        --install \
        --namespace ${NAME} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values rdw-values-review.yaml
      stop_section deploy_rdw
    - |
      start_section deploy_haarlem "Deploy Haarlem chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/haarlem/values-review.yaml.tpl > haarlem-values-review.yaml
      helm upgrade haarlem ./helm/deploy/haarlem \
        --install \
        --namespace ${NAME} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values haarlem-values-review.yaml
      stop_section deploy_haarlem
    - |
      start_section deploy_review_page "Deploy review page chart"
      helm upgrade review-page ./helm/charts/review-page \
        --install \
        --namespace ${NAME} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --set-string config.environmentSlugWithDomain=${DOMAIN_SUFFIX} \
        --set ingress.enabled=true \
        --set-string ingress.class=traefik \
        --set-string ingress.hosts[0]=${DOMAIN_SUFFIX}
      stop_section deploy_review_page
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://${NAME}.${REVIEW_BASE_DOMAIN}
    on_stop: Remove Review App
    auto_stop_in: 1 week
  only:
    - /^feature/.*$/@commonground/nlx/nlx
  artifacts:
    paths:
      - ci_environment_url.txt
  tags:
    - cg
    - docker

Remove Review App:
  stage: Deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    KUBECONFIG: /secrets/kubeconfig/review.conf
    NAME: "nlx-${CI_ENVIRONMENT_SLUG}"
  before_script:
    - source ./.gitlab/ci/functions.sh
  script:
    - |
      for RELEASE in $(helm list --all --short --namespace "${NAME}"); do
        start_section "uninstall_${RELEASE}" "Uninstall relasese ${RELEASE}"
        helm uninstall "${RELEASE}" --namespace "${NAME}"
        stop_section "uninstall_${RELEASE}"
      done
    - |
      start_section namespace "Delete namespace '${NAME}'"
      kubectl delete namespace "${NAME}"
      stop_section namespace
  when: manual
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  only:
    - /^feature/.*$/@commonground/nlx/nlx
  tags:
    - cg
    - docker
