Deploy review:
  stage: Deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    KUBECONFIG: /secrets/kubeconfig/review.conf
    REVIEW_BASE_DOMAIN: nlx.reviews
    K8S_NAMESPACE: "nlx-${CI_ENVIRONMENT_SLUG}"
  before_script:
    - source ./.gitlab/ci/functions.sh
  script:
    - |
      export IMAGE_REGISTRY=$(cat ci_build_image_registry.txt)
      export IMAGE_TAG=$(cat ci_build_image_tag.txt)
      export IMAGE_VERSION=$(cat ci_build_image_version.txt)
      export DOMAIN_SUFFIX="${K8S_NAMESPACE}.${REVIEW_BASE_DOMAIN}"
      echo -e -n "${DOMAIN_SUFFIX}" > ci_environment_url.txt
    - |
      start_section helm_repo "Update Helm repositories"
      helm repo add stable "https://kubernetes-charts.storage.googleapis.com"
      helm repo update
      stop_section helm_repo
    - |
      start_section namespace "Create namespace '${K8S_NAMESPACE}'"
      kubectl version
      kubectl create namespace "${K8S_NAMESPACE}" || true
      stop_section namespace
    - |
      start_section deploy_shared "Deploy shared chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/shared/values-review.yaml.tpl > shared-values-review.yaml
      helm upgrade shared ./helm/deploy/shared \
        --install \
        --namespace ${K8S_NAMESPACE} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values shared-values-review.yaml
      stop_section deploy_shared
    - |
      start_section deploy_brp "Deploy BRP chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/brp/values-review.yaml.tpl > brp-values-review.yaml
      helm upgrade brp ./helm/deploy/brp \
        --install \
        --namespace ${K8S_NAMESPACE} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values brp-values-review.yaml
      stop_section deploy_brp
    - |
      start_section deploy_rdw "Deploy RDW chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/rdw/values-review.yaml.tpl > rdw-values-review.yaml
      helm dependency build ./helm/deploy/rdw
      helm upgrade rdw ./helm/deploy/rdw \
        --install \
        --namespace ${K8S_NAMESPACE} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values rdw-values-review.yaml
      stop_section deploy_rdw
    - |
      start_section deploy_haarlem "Deploy Haarlem chart"
      sed -e "s|{{DOMAIN_SUFFIX}}|${DOMAIN_SUFFIX}|g" ./helm/deploy/haarlem/values-review.yaml.tpl > haarlem-values-review.yaml
      helm upgrade haarlem ./helm/deploy/haarlem \
        --install \
        --namespace ${K8S_NAMESPACE} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --values haarlem-values-review.yaml
      stop_section deploy_haarlem
    - |
      start_section deploy_review_page "Deploy review page chart"
      helm upgrade review-page ./helm/charts/review-page \
        --install \
        --namespace ${K8S_NAMESPACE} \
        --set-string global.imageRegistry=${IMAGE_REGISTRY} \
        --set-string global.imageTag=${IMAGE_TAG} \
        --set-string config.environmentSlugWithDomain=${DOMAIN_SUFFIX} \
        --set ingress.enabled=true \
        --set-string ingress.class=traefik \
        --set-string ingress.hosts[0]=${DOMAIN_SUFFIX}
      stop_section deploy_review_page
    - |
      echo "export E2E_MANAGEMENT_UI_INWAY_VERSION=${IMAGE_VERSION}" > e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_INWAY_NAME=rdw-nlx-inway" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_INWAY_SELF_ADDRESS=rdw-nlx-inway:443" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_DIRECTORY_ORGANIZATION_NAME=BRP" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_DIRECTORY_SERVICE_NAME=basisregistratie" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_DIRECTORY_STATUS=Beschikbaar" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_DIRECTORY_API_SPECIFICATION_TYPE=OpenAPI3" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_LOGIN_ORGANIZATION_NAME=RDW" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_LOGIN_USERNAME=admin@example.com" >> e2e_environment.sh
      echo "export E2E_MANAGEMENT_UI_LOGIN_PASSWORD=password" >> e2e_environment.sh
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://nlx-${CI_ENVIRONMENT_SLUG}.${REVIEW_BASE_DOMAIN}
    on_stop: Remove review
    auto_stop_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^review\/.*$/ && $CI_PROJECT_PATH == "commonground/nlx/nlx"'
  dependencies:
    - Build review
  artifacts:
    paths:
      - ci_environment_url.txt
      - e2e_environment.sh
  tags:
    - cg
    - docker

Remove review:
  stage: Deploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  variables:
    KUBECONFIG: /secrets/kubeconfig/review.conf
    K8S_NAMESPACE: "nlx-${CI_ENVIRONMENT_SLUG}"
  before_script:
    - source ./.gitlab/ci/functions.sh
  script:
    - |
      for RELEASE in $(helm list --all --short --namespace "${K8S_NAMESPACE}"); do
        start_section "uninstall_${RELEASE}" "Uninstall relasese ${RELEASE}"
        helm uninstall "${RELEASE}" --namespace "${K8S_NAMESPACE}"
        stop_section "uninstall_${RELEASE}"
      done
    - |
      start_section namespace "Delete namespace '${K8S_NAMESPACE}'"
      kubectl delete namespace "${K8S_NAMESPACE}"
      stop_section namespace
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^review\/.*$/ && $CI_PROJECT_PATH == "commonground/nlx/nlx"'
      when: manual
      allow_failure: true
      # The combination `when: manual` and `allow_failure: true` allow this step to be manual without blocking
      # the pipeline. See https://docs.gitlab.com/ee/ci/yaml/README.html#rulesallow_failure
  tags:
    - cg
    - docker
