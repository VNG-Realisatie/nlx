Reset acc applications:
  stage: Redeploy
  image: registry.gitlab.com/commonground/core/review-app-deployer:latest
  environment:
    name: acceptance
  variables:
    K8S_NAMESPACE: nlx-${CI_ENVIRONMENT_NAME}
    HELM_CHARTS_TO_REINSTALL: "shared rvrd gemeente-stijns gemeente-riemer vergunningsoftware-bv"
  extends: Deploy acceptance
  before_script:
    - source ./.gitlab/ci/functions.sh
  script:
    - kubectl config use-context commonground/nlx/nlx:nlx-prod
    - |
      start_section helm_repo "Update Helm repositories"
      helm repo add stable "https://charts.helm.sh/stable"
      helm repo add commonground "https://charts.commonground.nl"
      helm repo update
      stop_section helm_repo
    - |
      for CHART in ${HELM_CHARTS_TO_REINSTALL}; do
        start_section uninstall_${CHART} "Uninstalling chart '${CHART}'"
        CHART_DIRECTORY="./helm/deploy/${CHART}"

        helm uninstall ${CHART} \
          --namespace ${K8S_NAMESPACE}

        stop_section uninstall_${CHART}
      done
    - |
      for CHART in ${HELM_CHARTS_TO_REINSTALL}; do
        start_section deploy_${CHART} "Deploying chart '${CHART}'"
        CHART_DIRECTORY="./helm/deploy/${CHART}"

        if [ -f ${CHART_DIRECTORY}/Chart.lock ]; then
          start_section dependency_${CHART} "Installing Chart dependencies"
          helm dependency build ${CHART_DIRECTORY}
          stop_section dependency_${CHART}
        fi

        helm upgrade ${CHART} ${CHART_DIRECTORY} \
          --install \
          --namespace ${K8S_NAMESPACE} \
          --values ${CHART_DIRECTORY}/values-${CI_ENVIRONMENT_NAME}.yaml \
          --set-string global.imageRegistry=${CI_REGISTRY_IMAGE} \
          --set-string global.imageTag=${CI_COMMIT_REF_SLUG}

        stop_section deploy_${CHART}
      done
  dependencies:
    - Deploy acceptance
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PROJECT_PATH == "commonground/nlx/nlx"'
      when: manual
      allow_failure: true
  tags:
    - cg
    - docker
