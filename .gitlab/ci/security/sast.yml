# All of the SAST jobs will run at 4AM each day, in a scheduled pipeline.
# To see all scheduled pipelines, see: https://gitlab.com/commonground/nlx/nlx/-/pipeline_schedules

# Workaround for https://gitlab.com/gitlab-org/gitlab/-/issues/213769
# Opt-out of non-DinD solution based on https://gitlab.com/gitlab-org/gitlab/-/issues/37278
variables:
  SAST_DISABLE_DIND: "false"
  SAST_DISABLE_BABEL: "true"

include:
  - template: Container-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

container_scanning:
  stage: Security
  variables:
    IMAGE_REPOSITORY_BASE: nlxio
    IMAGE_SUFFIXES: >
      ca-certportal
      ca-cfssl-unsafe
      directory-api
      directory-monitor
      directory-ui
      docs
      inway
      management-api
      management-ui
      nlxctl
      outway
      txlog-api
      apps-overview
    REPORTS_DIRECTORY: /reports
    GIT_STRATEGY: clone
    CLAIR_DB_IMAGE_TAG: "latest"
    CLAIR_DB_IMAGE: "$SECURE_ANALYZERS_PREFIX/clair-vulnerabilities-db:$CLAIR_DB_IMAGE_TAG"
    CS_PROJECT: "klar"
  before_script:
    - yum install -y jq
    - export IMAGE_REGISTRY=$CI_REGISTRY_IMAGE
    - export CI_APPLICATION_TAG=$(git describe --tags)
  services:
    - name: $CLAIR_DB_IMAGE
      alias: clair-vulnerabilities-db
  script:
    - mkdir ${REPORTS_DIRECTORY}
    - |
      for IMAGE_SUFFIX in ${IMAGE_SUFFIXES}; do
        export CI_APPLICATION_REPOSITORY="${IMAGE_REGISTRY}/${IMAGE_REPOSITORY_BASE}/${IMAGE_SUFFIX}"
        export ANALYZER_ARTIFACT_DIR="${REPORTS_DIRECTORY}/${IMAGE_SUFFIX}"

        SECTION_NAME="section_${IMAGE_SUFFIX}"
        echo -e "start_section:$(date +%s):${SECTION_NAME}\r\e[0KScanning image: ${CI_APPLICATION_REPOSITORY}"

        mkdir ${ANALYZER_ARTIFACT_DIR}
        /analyzer run

        echo -e "section_end:$(date +%s):${SECTION_NAME}\r\e[0K"
      done
    # Merge the per-image reports in to one report
    - jq -s '.[0].version as $version | [.[] | to_entries] | flatten | reduce .[] as $dot ({}; .[$dot.key] += $dot.value) | .version = $version' /reports/*/gl-container-scanning-report.json > gl-container-scanning-report.json
  rules:
    - if: $CONTAINER_SCANNING_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH &&
        $GITLAB_FEATURES =~ /\bcontainer_scanning\b/ &&
        $CS_MAJOR_VERSION =~ /^[0-3]$/

dependency_scanning:
  stage: Security

sast:
  stage: Security
  variables:
    SAST_EXCLUDED_PATHS: "e2e-tests/,management-ui/src/api/"

# Override the template from 'Secret-Detection.gitlab-ci.yml'
.secret-analyzer:
  stage: Security

secret_detection:
  variables:
    SECRET_DETECTION_EXCLUDED_PATHS: "**/*_test.go,helm/deploy/**/values.yaml,helm/deploy/**/values-demo.yaml,helm/deploy/**/values-acceptance.yaml,helm/deploy/**/values-review.yaml.tpl,pki/,testing/,modd.conf,scripts/start-development.sh,technical-docs/nlx-helm-installation-guide/nlx-management-values.yaml"

# this job is added in Security/Dependency-Scanning.gitlab-ci.yml
# but missing a stage, which breaks the CI. Adding the stage here until the template is fixed
bundler-audit-dependency_scanning:
  stage: Security

# this job is added in Security/Dependency-Scanning.gitlab-ci.yml
# but missing a stage, which breaks the CI. Adding the stage here until the template is fixed
retire-js-dependency_scanning:
  stage: Security
