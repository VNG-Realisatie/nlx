include:
  - template: Container-Scanning.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml

container_scanning:
  stage: Security
  variables:
    IMAGE_REPOSITORY_BASE: commonground/nlx/nlx/nlxio
    IMAGE_SUFFIXES: >
      ca-certportal
      ca-cfssl-unsafe
      config-api
      directory-db
      directory-inspection-api
      directory-monitor
      directory-registration-api
      directory-ui
      docs
      insight-api
      insight-ui
      inway
      irma
      management-api
      management-ui
      nlxctl
      outway
      txlog-db
      review-page
    REPORTS_DIRECTORY: /reports
  before_script:
    - apk --no-cache add jq git
    - export IMAGE_REGISTRY=$(cat ci_build_image_registry.txt)
    - export CI_APPLICATION_TAG=$(cat ci_build_image_tag.txt)
  script:
    - mkdir ${REPORTS_DIRECTORY}
    - |
        for IMAGE_SUFFIX in ${IMAGE_SUFFIXES}; do
          export CI_APPLICATION_REPOSITORY="${IMAGE_REGISTRY}/${IMAGE_REPOSITORY_BASE}/${IMAGE_SUFFIX}"
          export ANALYZER_ARTIFACT_DIR="${REPORTS_DIRECTORY}/${IMAGE_SUFFIX}"

          SECTION_NAME="section_${IMAGE_SUFFIX}"
          echo -e "start_section:$(date +%s):${SECTION_NAME}\r\e[0KScanning image: ${CI_APPLICATION_REPOSITORY}"

          mkdir ${ANALYZER_ARTIFACT_DIR}
          /analyzer run

          echo -e "section_end:$(date +%s):${SECTION_NAME}\r\e[0K"
        done
    # Merge the per-image reports in to one report
    - jq -s '.[0].version as $version | [.[] | to_entries] | flatten | reduce .[] as $dot ({}; .[$dot.key] += $dot.value) | .version = $version' /reports/*/gl-container-scanning-report.json > gl-container-scanning-report.json
  dependencies:
    - Build acceptance
    - Build review
  only:
    - master@commonground/nlx/nlx
    - /^feature/.*$/@commonground/nlx/nlx
  except:
    - tags

dependency_scanning:
  stage: Security

sast:
  stage: Security
