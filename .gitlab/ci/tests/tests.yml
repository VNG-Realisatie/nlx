Lint commit messages:
  stage: Tests
  image: node:12.16.1-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  before_script:
    - apk --no-cache add git
    - npm ci --quiet --no-progress --color=false
  script:
    - echo -e "section_start:$(date +%s):lint\r\e[0KLinting commit messages"
    - npx commitlint --from $(git rev-parse origin/master)
    - echo -e "section_end:$(date +%s):lint\r\e[0K"
  tags:
    - docker
    - linux

Go go.mod tidy test:
  stage: Tests
  image: golang:1.14.0
  script:
    - cp go.mod go.mod.orig
    - /usr/local/go/bin/go mod download
    - /usr/local/go/bin/go mod tidy
    - diff go.mod.orig go.mod
  tags:
    - docker
    - linux

Go tests:
  stage: Tests
  image: golang:1.14.0
  before_script:
    - mkdir -p tmp-coverage-reports/
  script:
    - /usr/local/go/bin/go mod download
    - /usr/local/go/bin/go test ./... -coverprofile tmp-coverage-reports/coverage.out.tmp
    - cat tmp-coverage-reports/coverage.out.tmp | grep -v '.pb.go\|.pb.gw.go' > tmp-coverage-reports/coverage.out
    - rm tmp-coverage-reports/coverage.out.tmp
    - /usr/local/go/bin/go tool cover -html=tmp-coverage-reports/coverage.out -o tmp-coverage-reports/coverage.html
    - /usr/local/go/bin/go tool cover -func=tmp-coverage-reports/coverage.out
  coverage: /total:\t+\(statements\)\t+([\d\.]+?%)/
  artifacts:
    expire_in: 1 month
    paths:
      - tmp-coverage-reports/coverage.html
  tags:
    - docker
    - linux

Go linter:
  stage: Tests
  image: golangci/golangci-lint:v1.23
  before_script:
   - export PATH=$PATH:/usr/local/go/bin
  script:
    - golangci-lint version
    - golangci-lint run --timeout=5m --new-from-rev $(git rev-parse origin/master) --out-format code-climate > code-climate.json
  artifacts:
    reports:
      codequality: code-climate.json
  tags:
    - docker
    - linux

Directory-ui linter and tests:
  stage: Tests
  image: node:12.16.1-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - directory-ui/node_modules/
  before_script:
    - cd directory-ui/
    - npm install
  script:
    - npm run lint
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - directory-ui/coverage
  tags:
    - docker
    - linux

Insight-ui tests:
  stage: Tests
  image: node:12.16.1-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - insight-ui/node_modules/
  before_script:
    - cd insight-ui/
    - npm install
  script:
    - npm run lint
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - insight-ui/coverage
  tags:
    - docker
    - linux

Management-ui linter and tests:
  stage: Tests
  image: node:12.16.1-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - management-ui/node_modules/
  before_script:
    - cd management-ui/
    - npm install
  script:
    - npm run lint
    - npm test -- --coverage
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  artifacts:
    expire_in: 1 month
    paths:
      - management-ui/coverage
  tags:
    - docker
    - linux
