// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: directoryapi.proto

package directoryapi

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Inway_State int32

const (
	Inway_UNKNOWN Inway_State = 0
	Inway_UP      Inway_State = 1
	Inway_DOWN    Inway_State = 2
)

// Enum value maps for Inway_State.
var (
	Inway_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "UP",
		2: "DOWN",
	}
	Inway_State_value = map[string]int32{
		"UNKNOWN": 0,
		"UP":      1,
		"DOWN":    2,
	}
)

func (x Inway_State) Enum() *Inway_State {
	p := new(Inway_State)
	*p = x
	return p
}

func (x Inway_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Inway_State) Descriptor() protoreflect.EnumDescriptor {
	return file_directoryapi_proto_enumTypes[0].Descriptor()
}

func (Inway_State) Type() protoreflect.EnumType {
	return &file_directoryapi_proto_enumTypes[0]
}

func (x Inway_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Inway_State.Descriptor instead.
func (Inway_State) EnumDescriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{3, 0}
}

type ListInOutwayStatisticsResponse_Statistics_Type int32

const (
	ListInOutwayStatisticsResponse_Statistics_INWAY  ListInOutwayStatisticsResponse_Statistics_Type = 0
	ListInOutwayStatisticsResponse_Statistics_OUTWAY ListInOutwayStatisticsResponse_Statistics_Type = 1
)

// Enum value maps for ListInOutwayStatisticsResponse_Statistics_Type.
var (
	ListInOutwayStatisticsResponse_Statistics_Type_name = map[int32]string{
		0: "INWAY",
		1: "OUTWAY",
	}
	ListInOutwayStatisticsResponse_Statistics_Type_value = map[string]int32{
		"INWAY":  0,
		"OUTWAY": 1,
	}
)

func (x ListInOutwayStatisticsResponse_Statistics_Type) Enum() *ListInOutwayStatisticsResponse_Statistics_Type {
	p := new(ListInOutwayStatisticsResponse_Statistics_Type)
	*p = x
	return p
}

func (x ListInOutwayStatisticsResponse_Statistics_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListInOutwayStatisticsResponse_Statistics_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_directoryapi_proto_enumTypes[1].Descriptor()
}

func (ListInOutwayStatisticsResponse_Statistics_Type) Type() protoreflect.EnumType {
	return &file_directoryapi_proto_enumTypes[1]
}

func (x ListInOutwayStatisticsResponse_Statistics_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListInOutwayStatisticsResponse_Statistics_Type.Descriptor instead.
func (ListInOutwayStatisticsResponse_Statistics_Type) EnumDescriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{8, 0, 0}
}

type RegisterInwayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InwayAddress        string                                  `protobuf:"bytes,1,opt,name=inway_address,json=inwayAddress,proto3" json:"inway_address,omitempty"`
	Services            []*RegisterInwayRequest_RegisterService `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	InwayName           string                                  `protobuf:"bytes,3,opt,name=inway_name,json=inwayName,proto3" json:"inway_name,omitempty"`
	IsOrganizationInway bool                                    `protobuf:"varint,4,opt,name=is_organization_inway,json=isOrganizationInway,proto3" json:"is_organization_inway,omitempty"`
}

func (x *RegisterInwayRequest) Reset() {
	*x = RegisterInwayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterInwayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterInwayRequest) ProtoMessage() {}

func (x *RegisterInwayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterInwayRequest.ProtoReflect.Descriptor instead.
func (*RegisterInwayRequest) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterInwayRequest) GetInwayAddress() string {
	if x != nil {
		return x.InwayAddress
	}
	return ""
}

func (x *RegisterInwayRequest) GetServices() []*RegisterInwayRequest_RegisterService {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *RegisterInwayRequest) GetInwayName() string {
	if x != nil {
		return x.InwayName
	}
	return ""
}

func (x *RegisterInwayRequest) GetIsOrganizationInway() bool {
	if x != nil {
		return x.IsOrganizationInway
	}
	return false
}

type RegisterInwayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RegisterInwayResponse) Reset() {
	*x = RegisterInwayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterInwayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterInwayResponse) ProtoMessage() {}

func (x *RegisterInwayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterInwayResponse.ProtoReflect.Descriptor instead.
func (*RegisterInwayResponse) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterInwayResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Organization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Organization) Reset() {
	*x = Organization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Organization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Organization) ProtoMessage() {}

func (x *Organization) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Organization.ProtoReflect.Descriptor instead.
func (*Organization) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{2}
}

func (x *Organization) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *Organization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Inway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string      `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	State   Inway_State `protobuf:"varint,2,opt,name=state,proto3,enum=directoryapi.Inway_State" json:"state,omitempty"`
}

func (x *Inway) Reset() {
	*x = Inway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inway) ProtoMessage() {}

func (x *Inway) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inway.ProtoReflect.Descriptor instead.
func (*Inway) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{3}
}

func (x *Inway) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Inway) GetState() Inway_State {
	if x != nil {
		return x.State
	}
	return Inway_UNKNOWN
}

type ListServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services []*ListServicesResponse_Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{4}
}

func (x *ListServicesResponse) GetServices() []*ListServicesResponse_Service {
	if x != nil {
		return x.Services
	}
	return nil
}

type ListOrganizationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
}

func (x *ListOrganizationsResponse) Reset() {
	*x = ListOrganizationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsResponse) ProtoMessage() {}

func (x *ListOrganizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsResponse.ProtoReflect.Descriptor instead.
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{5}
}

func (x *ListOrganizationsResponse) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type GetOrganizationInwayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationSerialNumber string `protobuf:"bytes,1,opt,name=organization_serial_number,json=organizationSerialNumber,proto3" json:"organization_serial_number,omitempty"`
}

func (x *GetOrganizationInwayRequest) Reset() {
	*x = GetOrganizationInwayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationInwayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationInwayRequest) ProtoMessage() {}

func (x *GetOrganizationInwayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationInwayRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationInwayRequest) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrganizationInwayRequest) GetOrganizationSerialNumber() string {
	if x != nil {
		return x.OrganizationSerialNumber
	}
	return ""
}

type GetOrganizationInwayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetOrganizationInwayResponse) Reset() {
	*x = GetOrganizationInwayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrganizationInwayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationInwayResponse) ProtoMessage() {}

func (x *GetOrganizationInwayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationInwayResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationInwayResponse) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrganizationInwayResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListInOutwayStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*ListInOutwayStatisticsResponse_Statistics `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ListInOutwayStatisticsResponse) Reset() {
	*x = ListInOutwayStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInOutwayStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInOutwayStatisticsResponse) ProtoMessage() {}

func (x *ListInOutwayStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInOutwayStatisticsResponse.ProtoReflect.Descriptor instead.
func (*ListInOutwayStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{8}
}

func (x *ListInOutwayStatisticsResponse) GetVersions() []*ListInOutwayStatisticsResponse_Statistics {
	if x != nil {
		return x.Versions
	}
	return nil
}

type RegisterOutwayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RegisterOutwayRequest) Reset() {
	*x = RegisterOutwayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterOutwayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterOutwayRequest) ProtoMessage() {}

func (x *RegisterOutwayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterOutwayRequest.ProtoReflect.Descriptor instead.
func (*RegisterOutwayRequest) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterOutwayRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterOutwayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RegisterOutwayResponse) Reset() {
	*x = RegisterOutwayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterOutwayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterOutwayResponse) ProtoMessage() {}

func (x *RegisterOutwayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterOutwayResponse.ProtoReflect.Descriptor instead.
func (*RegisterOutwayResponse) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterOutwayResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListParticipantsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participants []*ListParticipantsResponse_Participant `protobuf:"bytes,1,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *ListParticipantsResponse) Reset() {
	*x = ListParticipantsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParticipantsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantsResponse) ProtoMessage() {}

func (x *ListParticipantsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantsResponse.ProtoReflect.Descriptor instead.
func (*ListParticipantsResponse) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{11}
}

func (x *ListParticipantsResponse) GetParticipants() []*ListParticipantsResponse_Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type SetOrganizationContactDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailAddress string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
}

func (x *SetOrganizationContactDetailsRequest) Reset() {
	*x = SetOrganizationContactDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrganizationContactDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrganizationContactDetailsRequest) ProtoMessage() {}

func (x *SetOrganizationContactDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrganizationContactDetailsRequest.ProtoReflect.Descriptor instead.
func (*SetOrganizationContactDetailsRequest) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{12}
}

func (x *SetOrganizationContactDetailsRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

type RegisterInwayRequest_RegisterService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DocumentationUrl            string `protobuf:"bytes,2,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	ApiSpecificationType        string `protobuf:"bytes,3,opt,name=api_specification_type,json=apiSpecificationType,proto3" json:"api_specification_type,omitempty"` // Deprecated. Type is deduced from api_specification_document_url
	ApiSpecificationDocumentUrl string `protobuf:"bytes,4,opt,name=api_specification_document_url,json=apiSpecificationDocumentUrl,proto3" json:"api_specification_document_url,omitempty"`
	Internal                    bool   `protobuf:"varint,7,opt,name=internal,proto3" json:"internal,omitempty"`
	PublicSupportContact        string `protobuf:"bytes,8,opt,name=public_support_contact,json=publicSupportContact,proto3" json:"public_support_contact,omitempty"`
	TechSupportContact          string `protobuf:"bytes,9,opt,name=tech_support_contact,json=techSupportContact,proto3" json:"tech_support_contact,omitempty"`
	OneTimeCosts                int32  `protobuf:"varint,10,opt,name=one_time_costs,json=oneTimeCosts,proto3" json:"one_time_costs,omitempty"`
	MonthlyCosts                int32  `protobuf:"varint,11,opt,name=monthly_costs,json=monthlyCosts,proto3" json:"monthly_costs,omitempty"`
	RequestCosts                int32  `protobuf:"varint,12,opt,name=request_costs,json=requestCosts,proto3" json:"request_costs,omitempty"`
}

func (x *RegisterInwayRequest_RegisterService) Reset() {
	*x = RegisterInwayRequest_RegisterService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterInwayRequest_RegisterService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterInwayRequest_RegisterService) ProtoMessage() {}

func (x *RegisterInwayRequest_RegisterService) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterInwayRequest_RegisterService.ProtoReflect.Descriptor instead.
func (*RegisterInwayRequest_RegisterService) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RegisterInwayRequest_RegisterService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterInwayRequest_RegisterService) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *RegisterInwayRequest_RegisterService) GetApiSpecificationType() string {
	if x != nil {
		return x.ApiSpecificationType
	}
	return ""
}

func (x *RegisterInwayRequest_RegisterService) GetApiSpecificationDocumentUrl() string {
	if x != nil {
		return x.ApiSpecificationDocumentUrl
	}
	return ""
}

func (x *RegisterInwayRequest_RegisterService) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *RegisterInwayRequest_RegisterService) GetPublicSupportContact() string {
	if x != nil {
		return x.PublicSupportContact
	}
	return ""
}

func (x *RegisterInwayRequest_RegisterService) GetTechSupportContact() string {
	if x != nil {
		return x.TechSupportContact
	}
	return ""
}

func (x *RegisterInwayRequest_RegisterService) GetOneTimeCosts() int32 {
	if x != nil {
		return x.OneTimeCosts
	}
	return 0
}

func (x *RegisterInwayRequest_RegisterService) GetMonthlyCosts() int32 {
	if x != nil {
		return x.MonthlyCosts
	}
	return 0
}

func (x *RegisterInwayRequest_RegisterService) GetRequestCosts() int32 {
	if x != nil {
		return x.RequestCosts
	}
	return 0
}

type ListServicesResponse_Costs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OneTime int32 `protobuf:"varint,1,opt,name=one_time,json=oneTime,proto3" json:"one_time,omitempty"`
	Monthly int32 `protobuf:"varint,2,opt,name=monthly,proto3" json:"monthly,omitempty"`
	Request int32 `protobuf:"varint,3,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ListServicesResponse_Costs) Reset() {
	*x = ListServicesResponse_Costs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesResponse_Costs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse_Costs) ProtoMessage() {}

func (x *ListServicesResponse_Costs) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse_Costs.ProtoReflect.Descriptor instead.
func (*ListServicesResponse_Costs) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListServicesResponse_Costs) GetOneTime() int32 {
	if x != nil {
		return x.OneTime
	}
	return 0
}

func (x *ListServicesResponse_Costs) GetMonthly() int32 {
	if x != nil {
		return x.Monthly
	}
	return 0
}

func (x *ListServicesResponse_Costs) GetRequest() int32 {
	if x != nil {
		return x.Request
	}
	return 0
}

type ListServicesResponse_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DocumentationUrl     string                      `protobuf:"bytes,2,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	ApiSpecificationType string                      `protobuf:"bytes,3,opt,name=api_specification_type,json=apiSpecificationType,proto3" json:"api_specification_type,omitempty"`
	Internal             bool                        `protobuf:"varint,4,opt,name=internal,proto3" json:"internal,omitempty"`
	PublicSupportContact string                      `protobuf:"bytes,5,opt,name=public_support_contact,json=publicSupportContact,proto3" json:"public_support_contact,omitempty"`
	Inways               []*Inway                    `protobuf:"bytes,6,rep,name=inways,proto3" json:"inways,omitempty"`
	Costs                *ListServicesResponse_Costs `protobuf:"bytes,7,opt,name=costs,proto3" json:"costs,omitempty"`
	Organization         *Organization               `protobuf:"bytes,8,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *ListServicesResponse_Service) Reset() {
	*x = ListServicesResponse_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServicesResponse_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse_Service) ProtoMessage() {}

func (x *ListServicesResponse_Service) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse_Service.ProtoReflect.Descriptor instead.
func (*ListServicesResponse_Service) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ListServicesResponse_Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListServicesResponse_Service) GetDocumentationUrl() string {
	if x != nil {
		return x.DocumentationUrl
	}
	return ""
}

func (x *ListServicesResponse_Service) GetApiSpecificationType() string {
	if x != nil {
		return x.ApiSpecificationType
	}
	return ""
}

func (x *ListServicesResponse_Service) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

func (x *ListServicesResponse_Service) GetPublicSupportContact() string {
	if x != nil {
		return x.PublicSupportContact
	}
	return ""
}

func (x *ListServicesResponse_Service) GetInways() []*Inway {
	if x != nil {
		return x.Inways
	}
	return nil
}

func (x *ListServicesResponse_Service) GetCosts() *ListServicesResponse_Costs {
	if x != nil {
		return x.Costs
	}
	return nil
}

func (x *ListServicesResponse_Service) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type ListInOutwayStatisticsResponse_Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ListInOutwayStatisticsResponse_Statistics_Type `protobuf:"varint,1,opt,name=type,proto3,enum=directoryapi.ListInOutwayStatisticsResponse_Statistics_Type" json:"type,omitempty"`
	Version string                                         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Amount  uint32                                         `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ListInOutwayStatisticsResponse_Statistics) Reset() {
	*x = ListInOutwayStatisticsResponse_Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInOutwayStatisticsResponse_Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInOutwayStatisticsResponse_Statistics) ProtoMessage() {}

func (x *ListInOutwayStatisticsResponse_Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInOutwayStatisticsResponse_Statistics.ProtoReflect.Descriptor instead.
func (*ListInOutwayStatisticsResponse_Statistics) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ListInOutwayStatisticsResponse_Statistics) GetType() ListInOutwayStatisticsResponse_Statistics_Type {
	if x != nil {
		return x.Type
	}
	return ListInOutwayStatisticsResponse_Statistics_INWAY
}

func (x *ListInOutwayStatisticsResponse_Statistics) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListInOutwayStatisticsResponse_Statistics) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ListParticipantsResponse_Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organization *Organization                                    `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	CreatedAt    *timestamppb.Timestamp                           `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Statistics   *ListParticipantsResponse_Participant_Statistics `protobuf:"bytes,3,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *ListParticipantsResponse_Participant) Reset() {
	*x = ListParticipantsResponse_Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParticipantsResponse_Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantsResponse_Participant) ProtoMessage() {}

func (x *ListParticipantsResponse_Participant) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantsResponse_Participant.ProtoReflect.Descriptor instead.
func (*ListParticipantsResponse_Participant) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListParticipantsResponse_Participant) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *ListParticipantsResponse_Participant) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListParticipantsResponse_Participant) GetStatistics() *ListParticipantsResponse_Participant_Statistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type ListParticipantsResponse_Participant_Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inways   uint32 `protobuf:"varint,1,opt,name=inways,proto3" json:"inways,omitempty"`
	Outways  uint32 `protobuf:"varint,2,opt,name=outways,proto3" json:"outways,omitempty"`
	Services uint32 `protobuf:"varint,3,opt,name=services,proto3" json:"services,omitempty"`
}

func (x *ListParticipantsResponse_Participant_Statistics) Reset() {
	*x = ListParticipantsResponse_Participant_Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_directoryapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListParticipantsResponse_Participant_Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListParticipantsResponse_Participant_Statistics) ProtoMessage() {}

func (x *ListParticipantsResponse_Participant_Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_directoryapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListParticipantsResponse_Participant_Statistics.ProtoReflect.Descriptor instead.
func (*ListParticipantsResponse_Participant_Statistics) Descriptor() ([]byte, []int) {
	return file_directoryapi_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *ListParticipantsResponse_Participant_Statistics) GetInways() uint32 {
	if x != nil {
		return x.Inways
	}
	return 0
}

func (x *ListParticipantsResponse_Participant_Statistics) GetOutways() uint32 {
	if x != nil {
		return x.Outways
	}
	return 0
}

func (x *ListParticipantsResponse_Participant_Statistics) GetServices() uint32 {
	if x != nil {
		return x.Services
	}
	return 0
}

var File_directoryapi_proto protoreflect.FileDescriptor

var file_directoryapi_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61,
	0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2,
	0x05, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x77, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x77, 0x61, 0x79,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x77, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4e, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x77, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x77, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x69,
	0x73, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x77, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x1a,
	0xc1, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1b, 0x61, 0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x74, 0x65, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x47, 0x0a, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x05, 0x49,
	0x6e, 0x77, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x77,
	0x61, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x26, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x22, 0xb8, 0x04, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x56, 0x0a, 0x05, 0x43, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0xff, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a,
	0x16, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61,
	0x70, 0x69, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12,
	0x34, 0x0a, 0x16, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x69, 0x6e, 0x77, 0x61, 0x79, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x06, 0x69, 0x6e, 0x77, 0x61,
	0x79, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x05, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x5b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x1a, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x38,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x1e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0xaf, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12,
	0x50, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x49,
	0x4e, 0x57, 0x41, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x55, 0x54, 0x57, 0x41, 0x59,
	0x10, 0x01, 0x22, 0x2b, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75,
	0x74, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x2e, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x77, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xb7, 0x03, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x73, 0x1a, 0xc2, 0x02, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x5d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70,
	0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x5a, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x77, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x77,
	0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x24, 0x53, 0x65, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xca, 0x07, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x77, 0x61, 0x79, 0x12, 0x22, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x77,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x70, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x7f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79,
	0x12, 0x29, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0c, 0x12, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x5b, 0x0a,
	0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x12,
	0x23, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x77,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x32, 0xb4, 0x04, 0x0a, 0x15, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a,
	0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x12, 0x22,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61,
	0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x12,
	0x29, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb2, 0x04, 0x0a, 0x13, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x77, 0x61, 0x79, 0x12, 0x22, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x77, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x16,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22,
	0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x27, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x77, 0x61, 0x79, 0x12, 0x29, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2c, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x10, 0x5a, 0x0e, 0x2e, 0x3b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_directoryapi_proto_rawDescOnce sync.Once
	file_directoryapi_proto_rawDescData = file_directoryapi_proto_rawDesc
)

func file_directoryapi_proto_rawDescGZIP() []byte {
	file_directoryapi_proto_rawDescOnce.Do(func() {
		file_directoryapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_directoryapi_proto_rawDescData)
	})
	return file_directoryapi_proto_rawDescData
}

var file_directoryapi_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_directoryapi_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_directoryapi_proto_goTypes = []interface{}{
	(Inway_State)(0), // 0: directoryapi.Inway.State
	(ListInOutwayStatisticsResponse_Statistics_Type)(0),     // 1: directoryapi.ListInOutwayStatisticsResponse.Statistics.Type
	(*RegisterInwayRequest)(nil),                            // 2: directoryapi.RegisterInwayRequest
	(*RegisterInwayResponse)(nil),                           // 3: directoryapi.RegisterInwayResponse
	(*Organization)(nil),                                    // 4: directoryapi.Organization
	(*Inway)(nil),                                           // 5: directoryapi.Inway
	(*ListServicesResponse)(nil),                            // 6: directoryapi.ListServicesResponse
	(*ListOrganizationsResponse)(nil),                       // 7: directoryapi.ListOrganizationsResponse
	(*GetOrganizationInwayRequest)(nil),                     // 8: directoryapi.GetOrganizationInwayRequest
	(*GetOrganizationInwayResponse)(nil),                    // 9: directoryapi.GetOrganizationInwayResponse
	(*ListInOutwayStatisticsResponse)(nil),                  // 10: directoryapi.ListInOutwayStatisticsResponse
	(*RegisterOutwayRequest)(nil),                           // 11: directoryapi.RegisterOutwayRequest
	(*RegisterOutwayResponse)(nil),                          // 12: directoryapi.RegisterOutwayResponse
	(*ListParticipantsResponse)(nil),                        // 13: directoryapi.ListParticipantsResponse
	(*SetOrganizationContactDetailsRequest)(nil),            // 14: directoryapi.SetOrganizationContactDetailsRequest
	(*RegisterInwayRequest_RegisterService)(nil),            // 15: directoryapi.RegisterInwayRequest.RegisterService
	(*ListServicesResponse_Costs)(nil),                      // 16: directoryapi.ListServicesResponse.Costs
	(*ListServicesResponse_Service)(nil),                    // 17: directoryapi.ListServicesResponse.Service
	(*ListInOutwayStatisticsResponse_Statistics)(nil),       // 18: directoryapi.ListInOutwayStatisticsResponse.Statistics
	(*ListParticipantsResponse_Participant)(nil),            // 19: directoryapi.ListParticipantsResponse.Participant
	(*ListParticipantsResponse_Participant_Statistics)(nil), // 20: directoryapi.ListParticipantsResponse.Participant.Statistics
	(*timestamppb.Timestamp)(nil),                           // 21: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                   // 22: google.protobuf.Empty
}
var file_directoryapi_proto_depIdxs = []int32{
	15, // 0: directoryapi.RegisterInwayRequest.services:type_name -> directoryapi.RegisterInwayRequest.RegisterService
	0,  // 1: directoryapi.Inway.state:type_name -> directoryapi.Inway.State
	17, // 2: directoryapi.ListServicesResponse.services:type_name -> directoryapi.ListServicesResponse.Service
	4,  // 3: directoryapi.ListOrganizationsResponse.organizations:type_name -> directoryapi.Organization
	18, // 4: directoryapi.ListInOutwayStatisticsResponse.versions:type_name -> directoryapi.ListInOutwayStatisticsResponse.Statistics
	19, // 5: directoryapi.ListParticipantsResponse.participants:type_name -> directoryapi.ListParticipantsResponse.Participant
	5,  // 6: directoryapi.ListServicesResponse.Service.inways:type_name -> directoryapi.Inway
	16, // 7: directoryapi.ListServicesResponse.Service.costs:type_name -> directoryapi.ListServicesResponse.Costs
	4,  // 8: directoryapi.ListServicesResponse.Service.organization:type_name -> directoryapi.Organization
	1,  // 9: directoryapi.ListInOutwayStatisticsResponse.Statistics.type:type_name -> directoryapi.ListInOutwayStatisticsResponse.Statistics.Type
	4,  // 10: directoryapi.ListParticipantsResponse.Participant.organization:type_name -> directoryapi.Organization
	21, // 11: directoryapi.ListParticipantsResponse.Participant.createdAt:type_name -> google.protobuf.Timestamp
	20, // 12: directoryapi.ListParticipantsResponse.Participant.statistics:type_name -> directoryapi.ListParticipantsResponse.Participant.Statistics
	2,  // 13: directoryapi.Directory.RegisterInway:input_type -> directoryapi.RegisterInwayRequest
	22, // 14: directoryapi.Directory.ClearOrganizationInway:input_type -> google.protobuf.Empty
	14, // 15: directoryapi.Directory.SetOrganizationContactDetails:input_type -> directoryapi.SetOrganizationContactDetailsRequest
	22, // 16: directoryapi.Directory.ListServices:input_type -> google.protobuf.Empty
	22, // 17: directoryapi.Directory.ListOrganizations:input_type -> google.protobuf.Empty
	8,  // 18: directoryapi.Directory.GetOrganizationInway:input_type -> directoryapi.GetOrganizationInwayRequest
	22, // 19: directoryapi.Directory.ListInOutwayStatistics:input_type -> google.protobuf.Empty
	11, // 20: directoryapi.Directory.RegisterOutway:input_type -> directoryapi.RegisterOutwayRequest
	22, // 21: directoryapi.Directory.ListParticipants:input_type -> google.protobuf.Empty
	2,  // 22: directoryapi.DirectoryRegistration.RegisterInway:input_type -> directoryapi.RegisterInwayRequest
	22, // 23: directoryapi.DirectoryRegistration.ClearOrganizationInway:input_type -> google.protobuf.Empty
	22, // 24: directoryapi.DirectoryRegistration.ListServices:input_type -> google.protobuf.Empty
	22, // 25: directoryapi.DirectoryRegistration.ListOrganizations:input_type -> google.protobuf.Empty
	8,  // 26: directoryapi.DirectoryRegistration.GetOrganizationInway:input_type -> directoryapi.GetOrganizationInwayRequest
	22, // 27: directoryapi.DirectoryRegistration.ListInOutwayStatistics:input_type -> google.protobuf.Empty
	2,  // 28: directoryapi.DirectoryInspection.RegisterInway:input_type -> directoryapi.RegisterInwayRequest
	22, // 29: directoryapi.DirectoryInspection.ClearOrganizationInway:input_type -> google.protobuf.Empty
	22, // 30: directoryapi.DirectoryInspection.ListServices:input_type -> google.protobuf.Empty
	22, // 31: directoryapi.DirectoryInspection.ListOrganizations:input_type -> google.protobuf.Empty
	8,  // 32: directoryapi.DirectoryInspection.GetOrganizationInway:input_type -> directoryapi.GetOrganizationInwayRequest
	22, // 33: directoryapi.DirectoryInspection.ListInOutwayStatistics:input_type -> google.protobuf.Empty
	3,  // 34: directoryapi.Directory.RegisterInway:output_type -> directoryapi.RegisterInwayResponse
	22, // 35: directoryapi.Directory.ClearOrganizationInway:output_type -> google.protobuf.Empty
	22, // 36: directoryapi.Directory.SetOrganizationContactDetails:output_type -> google.protobuf.Empty
	6,  // 37: directoryapi.Directory.ListServices:output_type -> directoryapi.ListServicesResponse
	7,  // 38: directoryapi.Directory.ListOrganizations:output_type -> directoryapi.ListOrganizationsResponse
	9,  // 39: directoryapi.Directory.GetOrganizationInway:output_type -> directoryapi.GetOrganizationInwayResponse
	10, // 40: directoryapi.Directory.ListInOutwayStatistics:output_type -> directoryapi.ListInOutwayStatisticsResponse
	12, // 41: directoryapi.Directory.RegisterOutway:output_type -> directoryapi.RegisterOutwayResponse
	13, // 42: directoryapi.Directory.ListParticipants:output_type -> directoryapi.ListParticipantsResponse
	3,  // 43: directoryapi.DirectoryRegistration.RegisterInway:output_type -> directoryapi.RegisterInwayResponse
	22, // 44: directoryapi.DirectoryRegistration.ClearOrganizationInway:output_type -> google.protobuf.Empty
	6,  // 45: directoryapi.DirectoryRegistration.ListServices:output_type -> directoryapi.ListServicesResponse
	7,  // 46: directoryapi.DirectoryRegistration.ListOrganizations:output_type -> directoryapi.ListOrganizationsResponse
	9,  // 47: directoryapi.DirectoryRegistration.GetOrganizationInway:output_type -> directoryapi.GetOrganizationInwayResponse
	10, // 48: directoryapi.DirectoryRegistration.ListInOutwayStatistics:output_type -> directoryapi.ListInOutwayStatisticsResponse
	3,  // 49: directoryapi.DirectoryInspection.RegisterInway:output_type -> directoryapi.RegisterInwayResponse
	22, // 50: directoryapi.DirectoryInspection.ClearOrganizationInway:output_type -> google.protobuf.Empty
	6,  // 51: directoryapi.DirectoryInspection.ListServices:output_type -> directoryapi.ListServicesResponse
	7,  // 52: directoryapi.DirectoryInspection.ListOrganizations:output_type -> directoryapi.ListOrganizationsResponse
	9,  // 53: directoryapi.DirectoryInspection.GetOrganizationInway:output_type -> directoryapi.GetOrganizationInwayResponse
	10, // 54: directoryapi.DirectoryInspection.ListInOutwayStatistics:output_type -> directoryapi.ListInOutwayStatisticsResponse
	34, // [34:55] is the sub-list for method output_type
	13, // [13:34] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_directoryapi_proto_init() }
func file_directoryapi_proto_init() {
	if File_directoryapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_directoryapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterInwayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterInwayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Organization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationInwayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrganizationInwayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInOutwayStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterOutwayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterOutwayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListParticipantsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrganizationContactDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterInwayRequest_RegisterService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesResponse_Costs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServicesResponse_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInOutwayStatisticsResponse_Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListParticipantsResponse_Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_directoryapi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListParticipantsResponse_Participant_Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_directoryapi_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_directoryapi_proto_goTypes,
		DependencyIndexes: file_directoryapi_proto_depIdxs,
		EnumInfos:         file_directoryapi_proto_enumTypes,
		MessageInfos:      file_directoryapi_proto_msgTypes,
	}.Build()
	File_directoryapi_proto = out.File
	file_directoryapi_proto_rawDesc = nil
	file_directoryapi_proto_goTypes = nil
	file_directoryapi_proto_depIdxs = nil
}
