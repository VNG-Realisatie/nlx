// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: inspectionapi.proto

// Package inspectionapi defines the directory api.

package inspectionapi

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Inway_State int32

const (
	Inway_UNKNOWN Inway_State = 0
	Inway_UP      Inway_State = 1
	Inway_DOWN    Inway_State = 2
)

var Inway_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "UP",
	2: "DOWN",
}

var Inway_State_value = map[string]int32{
	"UNKNOWN": 0,
	"UP":      1,
	"DOWN":    2,
}

func (x Inway_State) String() string {
	return proto.EnumName(Inway_State_name, int32(x))
}

func (Inway_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{0, 0}
}

type Inway struct {
	Address              string      `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	State                Inway_State `protobuf:"varint,2,opt,name=state,proto3,enum=inspectionapi.Inway_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Inway) Reset()         { *m = Inway{} }
func (m *Inway) String() string { return proto.CompactTextString(m) }
func (*Inway) ProtoMessage()    {}
func (*Inway) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{0}
}
func (m *Inway) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Inway) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Inway.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Inway) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inway.Merge(m, src)
}
func (m *Inway) XXX_Size() int {
	return m.Size()
}
func (m *Inway) XXX_DiscardUnknown() {
	xxx_messageInfo_Inway.DiscardUnknown(m)
}

var xxx_messageInfo_Inway proto.InternalMessageInfo

type ListServicesResponse struct {
	Services             []*ListServicesResponse_Service `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ListServicesResponse) Reset()         { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()    {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{1}
}
func (m *ListServicesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListServicesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse.Merge(m, src)
}
func (m *ListServicesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse proto.InternalMessageInfo

type ListServicesResponse_Service struct {
	OrganizationName     string   `protobuf:"bytes,1,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	InwayAddresses       []string `protobuf:"bytes,3,rep,name=inway_addresses,json=inwayAddresses,proto3" json:"inway_addresses,omitempty"`
	DocumentationUrl     string   `protobuf:"bytes,4,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	ApiSpecificationType string   `protobuf:"bytes,5,opt,name=api_specification_type,json=apiSpecificationType,proto3" json:"api_specification_type,omitempty"`
	Internal             bool     `protobuf:"varint,6,opt,name=internal,proto3" json:"internal,omitempty"`
	PublicSupportContact string   `protobuf:"bytes,7,opt,name=public_support_contact,json=publicSupportContact,proto3" json:"public_support_contact,omitempty"`
	HealthyStates        []bool   `protobuf:"varint,8,rep,packed,name=healthy_states,json=healthyStates,proto3" json:"healthy_states,omitempty"`
	Inways               []*Inway `protobuf:"bytes,9,rep,name=inways,proto3" json:"inways,omitempty"`
	OneTimeCosts         int32    `protobuf:"varint,10,opt,name=oneTimeCosts,proto3" json:"oneTimeCosts,omitempty"`
	MonthlyCosts         int32    `protobuf:"varint,11,opt,name=monthlyCosts,proto3" json:"monthlyCosts,omitempty"`
	RequestCosts         int32    `protobuf:"varint,12,opt,name=requestCosts,proto3" json:"requestCosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServicesResponse_Service) Reset()         { *m = ListServicesResponse_Service{} }
func (m *ListServicesResponse_Service) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse_Service) ProtoMessage()    {}
func (*ListServicesResponse_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{1, 0}
}
func (m *ListServicesResponse_Service) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListServicesResponse_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListServicesResponse_Service.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListServicesResponse_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse_Service.Merge(m, src)
}
func (m *ListServicesResponse_Service) XXX_Size() int {
	return m.Size()
}
func (m *ListServicesResponse_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse_Service.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse_Service proto.InternalMessageInfo

type ListOrganizationsResponse struct {
	Organizations        []*ListOrganizationsResponse_Organization `protobuf:"bytes,2,rep,name=organizations,proto3" json:"organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ListOrganizationsResponse) Reset()         { *m = ListOrganizationsResponse{} }
func (m *ListOrganizationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsResponse) ProtoMessage()    {}
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{2}
}
func (m *ListOrganizationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOrganizationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOrganizationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListOrganizationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsResponse.Merge(m, src)
}
func (m *ListOrganizationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListOrganizationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsResponse proto.InternalMessageInfo

type ListOrganizationsResponse_Organization struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InsightIrmaEndpoint  string   `protobuf:"bytes,2,opt,name=insight_irma_endpoint,json=insightIrmaEndpoint,proto3" json:"insight_irma_endpoint,omitempty"`
	InsightLogEndpoint   string   `protobuf:"bytes,3,opt,name=insight_log_endpoint,json=insightLogEndpoint,proto3" json:"insight_log_endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsResponse_Organization) Reset() {
	*m = ListOrganizationsResponse_Organization{}
}
func (m *ListOrganizationsResponse_Organization) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsResponse_Organization) ProtoMessage()    {}
func (*ListOrganizationsResponse_Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{2, 0}
}
func (m *ListOrganizationsResponse_Organization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOrganizationsResponse_Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOrganizationsResponse_Organization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListOrganizationsResponse_Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsResponse_Organization.Merge(m, src)
}
func (m *ListOrganizationsResponse_Organization) XXX_Size() int {
	return m.Size()
}
func (m *ListOrganizationsResponse_Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsResponse_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsResponse_Organization proto.InternalMessageInfo

type GetOrganizationInwayRequest struct {
	OrganizationName     string   `protobuf:"bytes,1,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrganizationInwayRequest) Reset()         { *m = GetOrganizationInwayRequest{} }
func (m *GetOrganizationInwayRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrganizationInwayRequest) ProtoMessage()    {}
func (*GetOrganizationInwayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{3}
}
func (m *GetOrganizationInwayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetOrganizationInwayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetOrganizationInwayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetOrganizationInwayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrganizationInwayRequest.Merge(m, src)
}
func (m *GetOrganizationInwayRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetOrganizationInwayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrganizationInwayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrganizationInwayRequest proto.InternalMessageInfo

type GetOrganizationInwayResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrganizationInwayResponse) Reset()         { *m = GetOrganizationInwayResponse{} }
func (m *GetOrganizationInwayResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrganizationInwayResponse) ProtoMessage()    {}
func (*GetOrganizationInwayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b97e1ce1548632, []int{4}
}
func (m *GetOrganizationInwayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetOrganizationInwayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetOrganizationInwayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetOrganizationInwayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrganizationInwayResponse.Merge(m, src)
}
func (m *GetOrganizationInwayResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetOrganizationInwayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrganizationInwayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrganizationInwayResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("inspectionapi.Inway_State", Inway_State_name, Inway_State_value)
	proto.RegisterType((*Inway)(nil), "inspectionapi.Inway")
	proto.RegisterType((*ListServicesResponse)(nil), "inspectionapi.ListServicesResponse")
	proto.RegisterType((*ListServicesResponse_Service)(nil), "inspectionapi.ListServicesResponse.Service")
	proto.RegisterType((*ListOrganizationsResponse)(nil), "inspectionapi.ListOrganizationsResponse")
	proto.RegisterType((*ListOrganizationsResponse_Organization)(nil), "inspectionapi.ListOrganizationsResponse.Organization")
	proto.RegisterType((*GetOrganizationInwayRequest)(nil), "inspectionapi.GetOrganizationInwayRequest")
	proto.RegisterType((*GetOrganizationInwayResponse)(nil), "inspectionapi.GetOrganizationInwayResponse")
}

func init() { proto.RegisterFile("inspectionapi.proto", fileDescriptor_98b97e1ce1548632) }

var fileDescriptor_98b97e1ce1548632 = []byte{
	// 761 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcd, 0x8f, 0xdb, 0x44,
	0x14, 0x5f, 0x3b, 0x9f, 0xfb, 0x92, 0x5d, 0xd2, 0xd9, 0x50, 0x19, 0x77, 0x15, 0xa5, 0x2e, 0x1f,
	0x86, 0xa5, 0x4e, 0x15, 0x40, 0xe2, 0x0a, 0x6d, 0x55, 0x2d, 0x54, 0x29, 0x72, 0xba, 0xe2, 0xc0,
	0xc1, 0x9a, 0x38, 0x53, 0x67, 0x24, 0x7b, 0xc6, 0xeb, 0x99, 0x80, 0x02, 0x17, 0x04, 0x17, 0xee,
	0xfc, 0x53, 0x3d, 0x22, 0x71, 0xe3, 0x04, 0x2b, 0xfe, 0x08, 0x4e, 0x08, 0x79, 0x66, 0xbc, 0xeb,
	0x94, 0x2c, 0x5a, 0x6e, 0x7e, 0xbf, 0xdf, 0xef, 0xbd, 0xe7, 0xf7, 0x31, 0x0f, 0x8e, 0x28, 0x13,
	0x39, 0x89, 0x25, 0xe5, 0x0c, 0xe7, 0x34, 0xc8, 0x0b, 0x2e, 0x39, 0x3a, 0xd8, 0x02, 0xdd, 0xe3,
	0x84, 0xf3, 0x24, 0x25, 0x13, 0x9c, 0xd3, 0x09, 0x66, 0x8c, 0x4b, 0x5c, 0x32, 0x42, 0x8b, 0xdd,
	0x3b, 0x86, 0x55, 0xd6, 0x62, 0xfd, 0x62, 0x42, 0xb2, 0x5c, 0x6e, 0x0c, 0x79, 0x3f, 0xa1, 0x72,
	0xb5, 0x5e, 0x04, 0x31, 0xcf, 0x26, 0x09, 0x4f, 0xf8, 0x95, 0xaa, 0xb4, 0x94, 0xa1, 0xbe, 0xb4,
	0xdc, 0xfb, 0x0e, 0x5a, 0xa7, 0xec, 0x1b, 0xbc, 0x41, 0x0e, 0x74, 0xf0, 0x72, 0x59, 0x10, 0x21,
	0x1c, 0x6b, 0x6c, 0xf9, 0xfb, 0x61, 0x65, 0xa2, 0x07, 0xd0, 0x12, 0x12, 0x4b, 0xe2, 0xd8, 0x63,
	0xcb, 0x3f, 0x9c, 0xba, 0xc1, 0x76, 0x01, 0xca, 0x3d, 0x98, 0x97, 0x8a, 0x50, 0x0b, 0xbd, 0xb7,
	0xa1, 0xa5, 0x6c, 0xd4, 0x83, 0xce, 0xd9, 0xec, 0xf3, 0xd9, 0xb3, 0x2f, 0x67, 0x83, 0x3d, 0xd4,
	0x06, 0xfb, 0xec, 0x8b, 0x81, 0x85, 0xba, 0xd0, 0x7c, 0x54, 0x22, 0xb6, 0xf7, 0x5b, 0x13, 0x86,
	0x4f, 0xa9, 0x90, 0x73, 0x52, 0x7c, 0x4d, 0x63, 0x22, 0x42, 0x22, 0x72, 0xce, 0x04, 0x41, 0x4f,
	0xa0, 0x2b, 0x0c, 0xe6, 0xd8, 0xe3, 0x86, 0xdf, 0x9b, 0x9e, 0xbc, 0x92, 0x75, 0x97, 0x5b, 0x60,
	0x80, 0xf0, 0xd2, 0xd9, 0xfd, 0xab, 0x01, 0x1d, 0x83, 0xa2, 0x13, 0xb8, 0xc5, 0x8b, 0x04, 0x33,
	0xfa, 0xad, 0xea, 0x66, 0xc4, 0x70, 0x46, 0x4c, 0xad, 0x83, 0x3a, 0x31, 0xc3, 0x19, 0x41, 0x77,
	0xa1, 0x6f, 0x82, 0x68, 0x9d, 0xad, 0x74, 0x3d, 0x83, 0x29, 0xc9, 0x3b, 0xf0, 0x1a, 0x2d, 0x6b,
	0x8f, 0x4c, 0xa3, 0x88, 0x70, 0x1a, 0xe3, 0x86, 0xbf, 0x1f, 0x1e, 0x2a, 0xf8, 0x93, 0x0a, 0x2d,
	0x13, 0x2f, 0x79, 0xbc, 0xce, 0x08, 0xd3, 0x73, 0x8c, 0xd6, 0x45, 0xea, 0x34, 0x75, 0xe2, 0x2d,
	0xe2, 0xac, 0x48, 0xd1, 0x87, 0x70, 0x1b, 0xe7, 0x34, 0x2a, 0x6b, 0xa5, 0x2f, 0x68, 0xac, 0x1d,
	0xe4, 0x26, 0x27, 0x4e, 0x4b, 0x79, 0x0c, 0x71, 0x4e, 0xe7, 0x75, 0xf2, 0xf9, 0x26, 0x27, 0xc8,
	0x85, 0x2e, 0x65, 0x92, 0x14, 0x0c, 0xa7, 0x4e, 0x7b, 0x6c, 0xf9, 0xdd, 0xf0, 0xd2, 0x2e, 0x23,
	0xe6, 0xeb, 0x45, 0x4a, 0xe3, 0x48, 0xac, 0xf3, 0x9c, 0x17, 0x32, 0x8a, 0x39, 0x93, 0x38, 0x96,
	0x4e, 0x47, 0x47, 0xd4, 0xec, 0x5c, 0x93, 0x0f, 0x35, 0x87, 0xde, 0x82, 0xc3, 0x15, 0xc1, 0xa9,
	0x5c, 0x6d, 0x22, 0x35, 0x54, 0xe1, 0x74, 0xc7, 0x0d, 0xbf, 0x1b, 0x1e, 0x18, 0x54, 0x0d, 0x58,
	0xa0, 0xf7, 0xa1, 0xad, 0xaa, 0x15, 0xce, 0xbe, 0x9a, 0xd3, 0x70, 0xd7, 0x76, 0x84, 0x46, 0x83,
	0x3c, 0xe8, 0x73, 0x46, 0x9e, 0xd3, 0x8c, 0x3c, 0xe4, 0x42, 0x0a, 0x07, 0xc6, 0x96, 0xdf, 0x0a,
	0xb7, 0xb0, 0x52, 0x93, 0x71, 0x26, 0x57, 0xe9, 0x46, 0x6b, 0x7a, 0x5a, 0x53, 0xc7, 0x4a, 0x4d,
	0x41, 0xce, 0xd7, 0x44, 0x48, 0xad, 0xe9, 0x6b, 0x4d, 0x1d, 0xf3, 0x7e, 0xb4, 0xe1, 0x8d, 0x72,
	0x4b, 0x9e, 0xd5, 0x46, 0x7b, 0xb5, 0x61, 0x5f, 0xc1, 0x41, 0x7d, 0xe6, 0xd5, 0x9a, 0x7d, 0xb4,
	0x63, 0xcd, 0x76, 0x06, 0x08, 0xea, 0x68, 0xb8, 0x1d, 0xcb, 0xfd, 0xc9, 0x82, 0x7e, 0x9d, 0x47,
	0x08, 0x9a, 0xb5, 0x6d, 0x53, 0xdf, 0x68, 0x0a, 0xaf, 0x53, 0x26, 0x68, 0xb2, 0x92, 0x11, 0x2d,
	0x32, 0x1c, 0x11, 0xb6, 0xcc, 0x39, 0x65, 0xd2, 0xac, 0xda, 0x91, 0x21, 0x4f, 0x8b, 0x0c, 0x3f,
	0x36, 0x14, 0x7a, 0x00, 0xc3, 0xca, 0x27, 0xe5, 0xc9, 0x95, 0x4b, 0x43, 0xb9, 0x20, 0xc3, 0x3d,
	0xe5, 0x49, 0xe5, 0xe1, 0x7d, 0x06, 0x77, 0x9e, 0x90, 0xad, 0x12, 0xf4, 0x44, 0x74, 0xa7, 0xfe,
	0xd7, 0x9b, 0xf0, 0x3e, 0x86, 0xe3, 0xdd, 0xb1, 0x4c, 0x4f, 0xaf, 0x3d, 0x21, 0xd3, 0xbf, 0x6d,
	0x38, 0x7a, 0x44, 0x0b, 0x12, 0x4b, 0x5e, 0x6c, 0x4e, 0x2f, 0x3b, 0x8c, 0xce, 0xa1, 0x5f, 0x7f,
	0xc8, 0xe8, 0x76, 0xa0, 0x4f, 0x5b, 0x50, 0x1d, 0xad, 0xe0, 0x71, 0x79, 0xda, 0xdc, 0x7b, 0x37,
	0x78, 0xfd, 0xde, 0x9b, 0x3f, 0xfc, 0xfa, 0xe7, 0xcf, 0xf6, 0x08, 0x1d, 0xab, 0xb3, 0xb9, 0xac,
	0xd2, 0x4d, 0x52, 0x2a, 0xe4, 0xfd, 0xea, 0x22, 0xa0, 0xef, 0x2d, 0xb8, 0xf5, 0xaf, 0xa9, 0x5e,
	0x9b, 0xd8, 0xbf, 0xe9, 0x3e, 0x78, 0xef, 0xaa, 0xec, 0xf7, 0xd0, 0xdd, 0x5d, 0xd9, 0xb7, 0xd6,
	0x03, 0x9d, 0xc3, 0x70, 0x57, 0x1f, 0xd1, 0x7b, 0xaf, 0x24, 0xfb, 0x8f, 0xc1, 0xb9, 0x27, 0x37,
	0xd2, 0x9a, 0x7f, 0xdb, 0xfb, 0x74, 0xf0, 0xf2, 0x8f, 0xd1, 0xde, 0xcb, 0x8b, 0x91, 0xf5, 0xcb,
	0xc5, 0xc8, 0xfa, 0xfd, 0x62, 0x64, 0x2d, 0xda, 0xaa, 0xd2, 0x0f, 0xfe, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x65, 0xc7, 0x2e, 0x61, 0x8f, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DirectoryInspectionClient is the client API for DirectoryInspection service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirectoryInspectionClient interface {
	// ListServices lists all services and their gateways.
	ListServices(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*ListServicesResponse, error)
	// ListOrganizations lists all organizations and their details.
	ListOrganizations(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*ListOrganizationsResponse, error)
	GetOrganizationInway(ctx context.Context, in *GetOrganizationInwayRequest, opts ...grpc.CallOption) (*GetOrganizationInwayResponse, error)
}

type directoryInspectionClient struct {
	cc *grpc.ClientConn
}

func NewDirectoryInspectionClient(cc *grpc.ClientConn) DirectoryInspectionClient {
	return &directoryInspectionClient{cc}
}

func (c *directoryInspectionClient) ListServices(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := c.cc.Invoke(ctx, "/inspectionapi.DirectoryInspection/ListServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryInspectionClient) ListOrganizations(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*ListOrganizationsResponse, error) {
	out := new(ListOrganizationsResponse)
	err := c.cc.Invoke(ctx, "/inspectionapi.DirectoryInspection/ListOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryInspectionClient) GetOrganizationInway(ctx context.Context, in *GetOrganizationInwayRequest, opts ...grpc.CallOption) (*GetOrganizationInwayResponse, error) {
	out := new(GetOrganizationInwayResponse)
	err := c.cc.Invoke(ctx, "/inspectionapi.DirectoryInspection/GetOrganizationInway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirectoryInspectionServer is the server API for DirectoryInspection service.
type DirectoryInspectionServer interface {
	// ListServices lists all services and their gateways.
	ListServices(context.Context, *types.Empty) (*ListServicesResponse, error)
	// ListOrganizations lists all organizations and their details.
	ListOrganizations(context.Context, *types.Empty) (*ListOrganizationsResponse, error)
	GetOrganizationInway(context.Context, *GetOrganizationInwayRequest) (*GetOrganizationInwayResponse, error)
}

// UnimplementedDirectoryInspectionServer can be embedded to have forward compatible implementations.
type UnimplementedDirectoryInspectionServer struct {
}

func (*UnimplementedDirectoryInspectionServer) ListServices(ctx context.Context, req *types.Empty) (*ListServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServices not implemented")
}
func (*UnimplementedDirectoryInspectionServer) ListOrganizations(ctx context.Context, req *types.Empty) (*ListOrganizationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrganizations not implemented")
}
func (*UnimplementedDirectoryInspectionServer) GetOrganizationInway(ctx context.Context, req *GetOrganizationInwayRequest) (*GetOrganizationInwayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationInway not implemented")
}

func RegisterDirectoryInspectionServer(s *grpc.Server, srv DirectoryInspectionServer) {
	s.RegisterService(&_DirectoryInspection_serviceDesc, srv)
}

func _DirectoryInspection_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryInspectionServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspectionapi.DirectoryInspection/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryInspectionServer).ListServices(ctx, req.(*types.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DirectoryInspection_ListOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryInspectionServer).ListOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspectionapi.DirectoryInspection/ListOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryInspectionServer).ListOrganizations(ctx, req.(*types.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DirectoryInspection_GetOrganizationInway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationInwayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryInspectionServer).GetOrganizationInway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspectionapi.DirectoryInspection/GetOrganizationInway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryInspectionServer).GetOrganizationInway(ctx, req.(*GetOrganizationInwayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DirectoryInspection_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inspectionapi.DirectoryInspection",
	HandlerType: (*DirectoryInspectionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServices",
			Handler:    _DirectoryInspection_ListServices_Handler,
		},
		{
			MethodName: "ListOrganizations",
			Handler:    _DirectoryInspection_ListOrganizations_Handler,
		},
		{
			MethodName: "GetOrganizationInway",
			Handler:    _DirectoryInspection_GetOrganizationInway_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspectionapi.proto",
}

func (m *Inway) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Inway) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Inway) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != 0 {
		i = encodeVarintInspectionapi(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListServicesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListServicesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListServicesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Services) > 0 {
		for iNdEx := len(m.Services) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Services[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintInspectionapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListServicesResponse_Service) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListServicesResponse_Service) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListServicesResponse_Service) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RequestCosts != 0 {
		i = encodeVarintInspectionapi(dAtA, i, uint64(m.RequestCosts))
		i--
		dAtA[i] = 0x60
	}
	if m.MonthlyCosts != 0 {
		i = encodeVarintInspectionapi(dAtA, i, uint64(m.MonthlyCosts))
		i--
		dAtA[i] = 0x58
	}
	if m.OneTimeCosts != 0 {
		i = encodeVarintInspectionapi(dAtA, i, uint64(m.OneTimeCosts))
		i--
		dAtA[i] = 0x50
	}
	if len(m.Inways) > 0 {
		for iNdEx := len(m.Inways) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Inways[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintInspectionapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.HealthyStates) > 0 {
		for iNdEx := len(m.HealthyStates) - 1; iNdEx >= 0; iNdEx-- {
			i--
			if m.HealthyStates[iNdEx] {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
		}
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.HealthyStates)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PublicSupportContact) > 0 {
		i -= len(m.PublicSupportContact)
		copy(dAtA[i:], m.PublicSupportContact)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.PublicSupportContact)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Internal {
		i--
		if m.Internal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.ApiSpecificationType) > 0 {
		i -= len(m.ApiSpecificationType)
		copy(dAtA[i:], m.ApiSpecificationType)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.ApiSpecificationType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DocumentationUrl) > 0 {
		i -= len(m.DocumentationUrl)
		copy(dAtA[i:], m.DocumentationUrl)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.DocumentationUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.InwayAddresses) > 0 {
		for iNdEx := len(m.InwayAddresses) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InwayAddresses[iNdEx])
			copy(dAtA[i:], m.InwayAddresses[iNdEx])
			i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.InwayAddresses[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OrganizationName) > 0 {
		i -= len(m.OrganizationName)
		copy(dAtA[i:], m.OrganizationName)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.OrganizationName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListOrganizationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOrganizationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListOrganizationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Organizations) > 0 {
		for iNdEx := len(m.Organizations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Organizations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintInspectionapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListOrganizationsResponse_Organization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOrganizationsResponse_Organization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListOrganizationsResponse_Organization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InsightLogEndpoint) > 0 {
		i -= len(m.InsightLogEndpoint)
		copy(dAtA[i:], m.InsightLogEndpoint)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.InsightLogEndpoint)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.InsightIrmaEndpoint) > 0 {
		i -= len(m.InsightIrmaEndpoint)
		copy(dAtA[i:], m.InsightIrmaEndpoint)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.InsightIrmaEndpoint)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetOrganizationInwayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOrganizationInwayRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetOrganizationInwayRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OrganizationName) > 0 {
		i -= len(m.OrganizationName)
		copy(dAtA[i:], m.OrganizationName)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.OrganizationName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetOrganizationInwayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOrganizationInwayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetOrganizationInwayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintInspectionapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovInspectionapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Inway) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovInspectionapi(uint64(m.State))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListServicesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListServicesResponse_Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrganizationName)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if len(m.InwayAddresses) > 0 {
		for _, s := range m.InwayAddresses {
			l = len(s)
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	l = len(m.DocumentationUrl)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.ApiSpecificationType)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.Internal {
		n += 2
	}
	l = len(m.PublicSupportContact)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if len(m.HealthyStates) > 0 {
		n += 1 + sovInspectionapi(uint64(len(m.HealthyStates))) + len(m.HealthyStates)*1
	}
	if len(m.Inways) > 0 {
		for _, e := range m.Inways {
			l = e.Size()
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	if m.OneTimeCosts != 0 {
		n += 1 + sovInspectionapi(uint64(m.OneTimeCosts))
	}
	if m.MonthlyCosts != 0 {
		n += 1 + sovInspectionapi(uint64(m.MonthlyCosts))
	}
	if m.RequestCosts != 0 {
		n += 1 + sovInspectionapi(uint64(m.RequestCosts))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOrganizationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Organizations) > 0 {
		for _, e := range m.Organizations {
			l = e.Size()
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOrganizationsResponse_Organization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.InsightIrmaEndpoint)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.InsightLogEndpoint)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetOrganizationInwayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrganizationName)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetOrganizationInwayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovInspectionapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozInspectionapi(x uint64) (n int) {
	return sovInspectionapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Inway) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Inway: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Inway: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= Inway_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListServicesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListServicesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListServicesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &ListServicesResponse_Service{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListServicesResponse_Service) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Service: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Service: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrganizationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrganizationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InwayAddresses", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InwayAddresses = append(m.InwayAddresses, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentationUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentationUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiSpecificationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiSpecificationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Internal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Internal = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicSupportContact", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicSupportContact = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType == 0 {
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowInspectionapi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.HealthyStates = append(m.HealthyStates, bool(v != 0))
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowInspectionapi
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthInspectionapi
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthInspectionapi
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				elementCount = packedLen
				if elementCount != 0 && len(m.HealthyStates) == 0 {
					m.HealthyStates = make([]bool, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowInspectionapi
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.HealthyStates = append(m.HealthyStates, bool(v != 0))
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field HealthyStates", wireType)
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inways", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inways = append(m.Inways, &Inway{})
			if err := m.Inways[len(m.Inways)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OneTimeCosts", wireType)
			}
			m.OneTimeCosts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OneTimeCosts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MonthlyCosts", wireType)
			}
			m.MonthlyCosts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MonthlyCosts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestCosts", wireType)
			}
			m.RequestCosts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestCosts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOrganizationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListOrganizationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListOrganizationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Organizations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Organizations = append(m.Organizations, &ListOrganizationsResponse_Organization{})
			if err := m.Organizations[len(m.Organizations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOrganizationsResponse_Organization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Organization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Organization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsightIrmaEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsightIrmaEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsightLogEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsightLogEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetOrganizationInwayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOrganizationInwayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOrganizationInwayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrganizationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrganizationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetOrganizationInwayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOrganizationInwayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOrganizationInwayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipInspectionapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthInspectionapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupInspectionapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthInspectionapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthInspectionapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowInspectionapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupInspectionapi = fmt.Errorf("proto: unexpected end of group")
)
