// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: inspectionapi.proto

package inspectionapi

/*
	Package inspectionapi defines the directory api.
*/

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RegisterInwayRequest struct {
	InwayAddress         string                                  `protobuf:"bytes,1,opt,name=inway_address,json=inwayAddress,proto3" json:"inway_address,omitempty"`
	Services             []*RegisterInwayRequest_RegisterService `protobuf:"bytes,2,rep,name=services" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *RegisterInwayRequest) Reset()         { *m = RegisterInwayRequest{} }
func (m *RegisterInwayRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterInwayRequest) ProtoMessage()    {}
func (*RegisterInwayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{0}
}
func (m *RegisterInwayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterInwayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterInwayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegisterInwayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInwayRequest.Merge(dst, src)
}
func (m *RegisterInwayRequest) XXX_Size() int {
	return m.Size()
}
func (m *RegisterInwayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInwayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInwayRequest proto.InternalMessageInfo

type RegisterInwayRequest_RegisterService struct {
	Name                        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DocumentationUrl            string   `protobuf:"bytes,2,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	ApiSpecificationType        string   `protobuf:"bytes,3,opt,name=api_specification_type,json=apiSpecificationType,proto3" json:"api_specification_type,omitempty"`
	ApiSpecificationDocumentUrl string   `protobuf:"bytes,4,opt,name=api_specification_document_url,json=apiSpecificationDocumentUrl,proto3" json:"api_specification_document_url,omitempty"`
	InsightApiUrl               string   `protobuf:"bytes,5,opt,name=insight_api_url,json=insightApiUrl,proto3" json:"insight_api_url,omitempty"`
	IrmaApiUrl                  string   `protobuf:"bytes,6,opt,name=irma_api_url,json=irmaApiUrl,proto3" json:"irma_api_url,omitempty"`
	Internal                    bool     `protobuf:"varint,7,opt,name=internal,proto3" json:"internal,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *RegisterInwayRequest_RegisterService) Reset()         { *m = RegisterInwayRequest_RegisterService{} }
func (m *RegisterInwayRequest_RegisterService) String() string { return proto.CompactTextString(m) }
func (*RegisterInwayRequest_RegisterService) ProtoMessage()    {}
func (*RegisterInwayRequest_RegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{0, 0}
}
func (m *RegisterInwayRequest_RegisterService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterInwayRequest_RegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterInwayRequest_RegisterService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegisterInwayRequest_RegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInwayRequest_RegisterService.Merge(dst, src)
}
func (m *RegisterInwayRequest_RegisterService) XXX_Size() int {
	return m.Size()
}
func (m *RegisterInwayRequest_RegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInwayRequest_RegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInwayRequest_RegisterService proto.InternalMessageInfo

type RegisterInwayResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterInwayResponse) Reset()         { *m = RegisterInwayResponse{} }
func (m *RegisterInwayResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterInwayResponse) ProtoMessage()    {}
func (*RegisterInwayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{1}
}
func (m *RegisterInwayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterInwayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterInwayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegisterInwayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInwayResponse.Merge(dst, src)
}
func (m *RegisterInwayResponse) XXX_Size() int {
	return m.Size()
}
func (m *RegisterInwayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInwayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInwayResponse proto.InternalMessageInfo

type ListServicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServicesRequest) Reset()         { *m = ListServicesRequest{} }
func (m *ListServicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListServicesRequest) ProtoMessage()    {}
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{2}
}
func (m *ListServicesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListServicesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesRequest.Merge(dst, src)
}
func (m *ListServicesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesRequest proto.InternalMessageInfo

type ListServicesResponse struct {
	Services             []*ListServicesResponse_Service `protobuf:"bytes,2,rep,name=services" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ListServicesResponse) Reset()         { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()    {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{3}
}
func (m *ListServicesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListServicesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse.Merge(dst, src)
}
func (m *ListServicesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse proto.InternalMessageInfo

type ListServicesResponse_Service struct {
	OrganizationName     string   `protobuf:"bytes,1,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	InwayAddresses       []string `protobuf:"bytes,3,rep,name=inway_addresses,json=inwayAddresses" json:"inway_addresses,omitempty"`
	DocumentationUrl     string   `protobuf:"bytes,4,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	ApiSpecificationType string   `protobuf:"bytes,5,opt,name=api_specification_type,json=apiSpecificationType,proto3" json:"api_specification_type,omitempty"`
	Internal             bool     `protobuf:"varint,6,opt,name=internal,proto3" json:"internal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServicesResponse_Service) Reset()         { *m = ListServicesResponse_Service{} }
func (m *ListServicesResponse_Service) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse_Service) ProtoMessage()    {}
func (*ListServicesResponse_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{3, 0}
}
func (m *ListServicesResponse_Service) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListServicesResponse_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListServicesResponse_Service.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListServicesResponse_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse_Service.Merge(dst, src)
}
func (m *ListServicesResponse_Service) XXX_Size() int {
	return m.Size()
}
func (m *ListServicesResponse_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse_Service.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse_Service proto.InternalMessageInfo

type ListOrganizationsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsRequest) Reset()         { *m = ListOrganizationsRequest{} }
func (m *ListOrganizationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsRequest) ProtoMessage()    {}
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{4}
}
func (m *ListOrganizationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOrganizationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOrganizationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListOrganizationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsRequest.Merge(dst, src)
}
func (m *ListOrganizationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListOrganizationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsRequest proto.InternalMessageInfo

type ListOrganizationsResponse struct {
	Organizations        []*ListOrganizationsResponse_Organization `protobuf:"bytes,2,rep,name=organizations" json:"organizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ListOrganizationsResponse) Reset()         { *m = ListOrganizationsResponse{} }
func (m *ListOrganizationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsResponse) ProtoMessage()    {}
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{5}
}
func (m *ListOrganizationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOrganizationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOrganizationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListOrganizationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsResponse.Merge(dst, src)
}
func (m *ListOrganizationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListOrganizationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsResponse proto.InternalMessageInfo

type ListOrganizationsResponse_Organization struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InsightIrmaEndpoint  string   `protobuf:"bytes,2,opt,name=insight_irma_endpoint,json=insightIrmaEndpoint,proto3" json:"insight_irma_endpoint,omitempty"`
	InsightLogEndpoint   string   `protobuf:"bytes,3,opt,name=insight_log_endpoint,json=insightLogEndpoint,proto3" json:"insight_log_endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationsResponse_Organization) Reset() {
	*m = ListOrganizationsResponse_Organization{}
}
func (m *ListOrganizationsResponse_Organization) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationsResponse_Organization) ProtoMessage()    {}
func (*ListOrganizationsResponse_Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{5, 0}
}
func (m *ListOrganizationsResponse_Organization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListOrganizationsResponse_Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListOrganizationsResponse_Organization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListOrganizationsResponse_Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationsResponse_Organization.Merge(dst, src)
}
func (m *ListOrganizationsResponse_Organization) XXX_Size() int {
	return m.Size()
}
func (m *ListOrganizationsResponse_Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationsResponse_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationsResponse_Organization proto.InternalMessageInfo

type GetServiceAPISpecRequest struct {
	OrganizationName     string   `protobuf:"bytes,1,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceAPISpecRequest) Reset()         { *m = GetServiceAPISpecRequest{} }
func (m *GetServiceAPISpecRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceAPISpecRequest) ProtoMessage()    {}
func (*GetServiceAPISpecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{6}
}
func (m *GetServiceAPISpecRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetServiceAPISpecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetServiceAPISpecRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetServiceAPISpecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceAPISpecRequest.Merge(dst, src)
}
func (m *GetServiceAPISpecRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetServiceAPISpecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceAPISpecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceAPISpecRequest proto.InternalMessageInfo

type GetServiceAPISpecResponse struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Document             []byte   `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceAPISpecResponse) Reset()         { *m = GetServiceAPISpecResponse{} }
func (m *GetServiceAPISpecResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceAPISpecResponse) ProtoMessage()    {}
func (*GetServiceAPISpecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_inspectionapi_81e50570b7167944, []int{7}
}
func (m *GetServiceAPISpecResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetServiceAPISpecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetServiceAPISpecResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetServiceAPISpecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceAPISpecResponse.Merge(dst, src)
}
func (m *GetServiceAPISpecResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetServiceAPISpecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceAPISpecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceAPISpecResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterInwayRequest)(nil), "inspectionapi.RegisterInwayRequest")
	proto.RegisterType((*RegisterInwayRequest_RegisterService)(nil), "inspectionapi.RegisterInwayRequest.RegisterService")
	proto.RegisterType((*RegisterInwayResponse)(nil), "inspectionapi.RegisterInwayResponse")
	proto.RegisterType((*ListServicesRequest)(nil), "inspectionapi.ListServicesRequest")
	proto.RegisterType((*ListServicesResponse)(nil), "inspectionapi.ListServicesResponse")
	proto.RegisterType((*ListServicesResponse_Service)(nil), "inspectionapi.ListServicesResponse.Service")
	proto.RegisterType((*ListOrganizationsRequest)(nil), "inspectionapi.ListOrganizationsRequest")
	proto.RegisterType((*ListOrganizationsResponse)(nil), "inspectionapi.ListOrganizationsResponse")
	proto.RegisterType((*ListOrganizationsResponse_Organization)(nil), "inspectionapi.ListOrganizationsResponse.Organization")
	proto.RegisterType((*GetServiceAPISpecRequest)(nil), "inspectionapi.GetServiceAPISpecRequest")
	proto.RegisterType((*GetServiceAPISpecResponse)(nil), "inspectionapi.GetServiceAPISpecResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DirectoryClient is the client API for Directory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirectoryClient interface {
	// RegisterInway registers an inway for a given service
	RegisterInway(ctx context.Context, in *RegisterInwayRequest, opts ...grpc.CallOption) (*RegisterInwayResponse, error)
	// ListServices lists all services and their gateways.
	ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error)
	// ListOrganizations lists all organizations and their details.
	ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error)
	GetServiceAPISpec(ctx context.Context, in *GetServiceAPISpecRequest, opts ...grpc.CallOption) (*GetServiceAPISpecResponse, error)
}

type directoryClient struct {
	cc *grpc.ClientConn
}

func NewDirectoryClient(cc *grpc.ClientConn) DirectoryClient {
	return &directoryClient{cc}
}

func (c *directoryClient) RegisterInway(ctx context.Context, in *RegisterInwayRequest, opts ...grpc.CallOption) (*RegisterInwayResponse, error) {
	out := new(RegisterInwayResponse)
	err := c.cc.Invoke(ctx, "/inspectionapi.Directory/RegisterInway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := c.cc.Invoke(ctx, "/inspectionapi.Directory/ListServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) ListOrganizations(ctx context.Context, in *ListOrganizationsRequest, opts ...grpc.CallOption) (*ListOrganizationsResponse, error) {
	out := new(ListOrganizationsResponse)
	err := c.cc.Invoke(ctx, "/inspectionapi.Directory/ListOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) GetServiceAPISpec(ctx context.Context, in *GetServiceAPISpecRequest, opts ...grpc.CallOption) (*GetServiceAPISpecResponse, error) {
	out := new(GetServiceAPISpecResponse)
	err := c.cc.Invoke(ctx, "/inspectionapi.Directory/GetServiceAPISpec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirectoryServer is the server API for Directory service.
type DirectoryServer interface {
	// RegisterInway registers an inway for a given service
	RegisterInway(context.Context, *RegisterInwayRequest) (*RegisterInwayResponse, error)
	// ListServices lists all services and their gateways.
	ListServices(context.Context, *ListServicesRequest) (*ListServicesResponse, error)
	// ListOrganizations lists all organizations and their details.
	ListOrganizations(context.Context, *ListOrganizationsRequest) (*ListOrganizationsResponse, error)
	GetServiceAPISpec(context.Context, *GetServiceAPISpecRequest) (*GetServiceAPISpecResponse, error)
}

func RegisterDirectoryServer(s *grpc.Server, srv DirectoryServer) {
	s.RegisterService(&_Directory_serviceDesc, srv)
}

func _Directory_RegisterInway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterInwayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).RegisterInway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspectionapi.Directory/RegisterInway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).RegisterInway(ctx, req.(*RegisterInwayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspectionapi.Directory/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).ListServices(ctx, req.(*ListServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_ListOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrganizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).ListOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspectionapi.Directory/ListOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).ListOrganizations(ctx, req.(*ListOrganizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_GetServiceAPISpec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceAPISpecRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).GetServiceAPISpec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspectionapi.Directory/GetServiceAPISpec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).GetServiceAPISpec(ctx, req.(*GetServiceAPISpecRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Directory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inspectionapi.Directory",
	HandlerType: (*DirectoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterInway",
			Handler:    _Directory_RegisterInway_Handler,
		},
		{
			MethodName: "ListServices",
			Handler:    _Directory_ListServices_Handler,
		},
		{
			MethodName: "ListOrganizations",
			Handler:    _Directory_ListOrganizations_Handler,
		},
		{
			MethodName: "GetServiceAPISpec",
			Handler:    _Directory_GetServiceAPISpec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspectionapi.proto",
}

func (m *RegisterInwayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterInwayRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.InwayAddress) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.InwayAddress)))
		i += copy(dAtA[i:], m.InwayAddress)
	}
	if len(m.Services) > 0 {
		for _, msg := range m.Services {
			dAtA[i] = 0x12
			i++
			i = encodeVarintInspectionapi(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegisterInwayRequest_RegisterService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterInwayRequest_RegisterService) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.DocumentationUrl) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.DocumentationUrl)))
		i += copy(dAtA[i:], m.DocumentationUrl)
	}
	if len(m.ApiSpecificationType) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.ApiSpecificationType)))
		i += copy(dAtA[i:], m.ApiSpecificationType)
	}
	if len(m.ApiSpecificationDocumentUrl) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.ApiSpecificationDocumentUrl)))
		i += copy(dAtA[i:], m.ApiSpecificationDocumentUrl)
	}
	if len(m.InsightApiUrl) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.InsightApiUrl)))
		i += copy(dAtA[i:], m.InsightApiUrl)
	}
	if len(m.IrmaApiUrl) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.IrmaApiUrl)))
		i += copy(dAtA[i:], m.IrmaApiUrl)
	}
	if m.Internal {
		dAtA[i] = 0x38
		i++
		if m.Internal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegisterInwayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterInwayResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Error) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Error)))
		i += copy(dAtA[i:], m.Error)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListServicesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListServicesRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListServicesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListServicesResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Services) > 0 {
		for _, msg := range m.Services {
			dAtA[i] = 0x12
			i++
			i = encodeVarintInspectionapi(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListServicesResponse_Service) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListServicesResponse_Service) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OrganizationName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.OrganizationName)))
		i += copy(dAtA[i:], m.OrganizationName)
	}
	if len(m.ServiceName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.ServiceName)))
		i += copy(dAtA[i:], m.ServiceName)
	}
	if len(m.InwayAddresses) > 0 {
		for _, s := range m.InwayAddresses {
			dAtA[i] = 0x1a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.DocumentationUrl) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.DocumentationUrl)))
		i += copy(dAtA[i:], m.DocumentationUrl)
	}
	if len(m.ApiSpecificationType) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.ApiSpecificationType)))
		i += copy(dAtA[i:], m.ApiSpecificationType)
	}
	if m.Internal {
		dAtA[i] = 0x30
		i++
		if m.Internal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListOrganizationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOrganizationsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListOrganizationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOrganizationsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Organizations) > 0 {
		for _, msg := range m.Organizations {
			dAtA[i] = 0x12
			i++
			i = encodeVarintInspectionapi(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListOrganizationsResponse_Organization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListOrganizationsResponse_Organization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.InsightIrmaEndpoint) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.InsightIrmaEndpoint)))
		i += copy(dAtA[i:], m.InsightIrmaEndpoint)
	}
	if len(m.InsightLogEndpoint) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.InsightLogEndpoint)))
		i += copy(dAtA[i:], m.InsightLogEndpoint)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetServiceAPISpecRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetServiceAPISpecRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OrganizationName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.OrganizationName)))
		i += copy(dAtA[i:], m.OrganizationName)
	}
	if len(m.ServiceName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.ServiceName)))
		i += copy(dAtA[i:], m.ServiceName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetServiceAPISpecResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetServiceAPISpecResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.Document) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintInspectionapi(dAtA, i, uint64(len(m.Document)))
		i += copy(dAtA[i:], m.Document)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintInspectionapi(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *RegisterInwayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.InwayAddress)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterInwayRequest_RegisterService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.DocumentationUrl)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.ApiSpecificationType)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.ApiSpecificationDocumentUrl)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.InsightApiUrl)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.IrmaApiUrl)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.Internal {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterInwayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Error)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListServicesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListServicesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListServicesResponse_Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrganizationName)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if len(m.InwayAddresses) > 0 {
		for _, s := range m.InwayAddresses {
			l = len(s)
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	l = len(m.DocumentationUrl)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.ApiSpecificationType)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.Internal {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOrganizationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOrganizationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Organizations) > 0 {
		for _, e := range m.Organizations {
			l = e.Size()
			n += 1 + l + sovInspectionapi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListOrganizationsResponse_Organization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.InsightIrmaEndpoint)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.InsightLogEndpoint)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetServiceAPISpecRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrganizationName)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetServiceAPISpecResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	l = len(m.Document)
	if l > 0 {
		n += 1 + l + sovInspectionapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovInspectionapi(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozInspectionapi(x uint64) (n int) {
	return sovInspectionapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RegisterInwayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterInwayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterInwayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InwayAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InwayAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &RegisterInwayRequest_RegisterService{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterInwayRequest_RegisterService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentationUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentationUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiSpecificationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiSpecificationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiSpecificationDocumentUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiSpecificationDocumentUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsightApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsightApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IrmaApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IrmaApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Internal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Internal = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterInwayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterInwayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterInwayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Error = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListServicesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListServicesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListServicesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListServicesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListServicesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListServicesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &ListServicesResponse_Service{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListServicesResponse_Service) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Service: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Service: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrganizationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrganizationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InwayAddresses", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InwayAddresses = append(m.InwayAddresses, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentationUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentationUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiSpecificationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiSpecificationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Internal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Internal = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOrganizationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListOrganizationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListOrganizationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOrganizationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListOrganizationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListOrganizationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Organizations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Organizations = append(m.Organizations, &ListOrganizationsResponse_Organization{})
			if err := m.Organizations[len(m.Organizations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListOrganizationsResponse_Organization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Organization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Organization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsightIrmaEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsightIrmaEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsightLogEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsightLogEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetServiceAPISpecRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetServiceAPISpecRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetServiceAPISpecRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrganizationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrganizationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetServiceAPISpecResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetServiceAPISpecResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetServiceAPISpecResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthInspectionapi
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Document = append(m.Document[:0], dAtA[iNdEx:postIndex]...)
			if m.Document == nil {
				m.Document = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInspectionapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInspectionapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipInspectionapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowInspectionapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInspectionapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthInspectionapi
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowInspectionapi
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipInspectionapi(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthInspectionapi = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowInspectionapi   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("inspectionapi.proto", fileDescriptor_inspectionapi_81e50570b7167944) }

var fileDescriptor_inspectionapi_81e50570b7167944 = []byte{
	// 772 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0xae, 0x93, 0xf4, 0xef, 0x34, 0xb9, 0x6d, 0xa6, 0xe9, 0x95, 0xeb, 0x7b, 0x6f, 0x6e, 0x70,
	0x81, 0x46, 0xaa, 0x12, 0xa3, 0x16, 0x1e, 0xa0, 0xa5, 0xa8, 0x2a, 0x54, 0x14, 0xb9, 0xb0, 0x02,
	0x29, 0x72, 0x93, 0xa9, 0x3b, 0x28, 0xf1, 0x98, 0x19, 0x07, 0x14, 0xaa, 0x2e, 0x80, 0x0d, 0x1b,
	0x56, 0x3c, 0x05, 0x5b, 0x78, 0x03, 0x56, 0x5d, 0x22, 0xf1, 0x02, 0x50, 0x78, 0x10, 0xe4, 0x99,
	0x71, 0xb0, 0x63, 0xb7, 0x14, 0x89, 0x5d, 0xe6, 0x9c, 0xf3, 0x9d, 0x39, 0xf3, 0x7d, 0xdf, 0x71,
	0x60, 0x9e, 0x78, 0xdc, 0xc7, 0xed, 0x80, 0x50, 0xcf, 0xf1, 0x49, 0xd3, 0x67, 0x34, 0xa0, 0xa8,
	0x94, 0x08, 0x1a, 0xff, 0xba, 0x94, 0xba, 0x5d, 0x6c, 0x39, 0x3e, 0xb1, 0x1c, 0xcf, 0xa3, 0x81,
	0x13, 0x66, 0xb8, 0x2c, 0x36, 0x1a, 0x2e, 0x09, 0x0e, 0xfb, 0xfb, 0xcd, 0x36, 0xed, 0x59, 0x2e,
	0x75, 0xa9, 0x25, 0xc2, 0xfb, 0xfd, 0x03, 0x71, 0x12, 0x07, 0xf1, 0x4b, 0x96, 0x9b, 0x1f, 0xf3,
	0x50, 0xb1, 0xb1, 0x4b, 0x78, 0x80, 0xd9, 0xb6, 0xf7, 0xcc, 0x19, 0xd8, 0xf8, 0x49, 0x1f, 0xf3,
	0x00, 0x2d, 0x41, 0x89, 0x84, 0xe7, 0x96, 0xd3, 0xe9, 0x30, 0xcc, 0xb9, 0xae, 0xd5, 0xb4, 0xfa,
	0xb4, 0x5d, 0x14, 0xc1, 0x75, 0x19, 0x43, 0xbb, 0x30, 0xc5, 0x31, 0x7b, 0x4a, 0xda, 0x98, 0xeb,
	0xb9, 0x5a, 0xbe, 0x3e, 0xb3, 0xba, 0xd6, 0x4c, 0xbe, 0x20, 0xab, 0xf7, 0x30, 0xb8, 0x27, 0xb1,
	0xf6, 0xb0, 0x89, 0xf1, 0x21, 0x07, 0xb3, 0x23, 0x59, 0x84, 0xa0, 0xe0, 0x39, 0x3d, 0xac, 0x06,
	0x10, 0xbf, 0xd1, 0x0a, 0x94, 0x3b, 0xb4, 0xdd, 0xef, 0x61, 0x4f, 0xbe, 0xbe, 0xd5, 0x67, 0x5d,
	0x3d, 0x27, 0x0a, 0xe6, 0x12, 0x89, 0x07, 0xac, 0x8b, 0xae, 0xc3, 0xdf, 0x8e, 0x4f, 0x5a, 0xe1,
	0x58, 0xe4, 0x80, 0xb4, 0x25, 0x20, 0x18, 0xf8, 0x58, 0xcf, 0x0b, 0x44, 0xc5, 0xf1, 0xc9, 0x5e,
	0x3c, 0x79, 0x7f, 0xe0, 0x63, 0x74, 0x13, 0xaa, 0x69, 0x54, 0xd4, 0x5b, 0xdc, 0x57, 0x10, 0xe8,
	0x7f, 0x46, 0xd1, 0x9b, 0xaa, 0x26, 0xbc, 0xfa, 0x2a, 0xcc, 0x12, 0x8f, 0x13, 0xf7, 0x30, 0x68,
	0x85, 0xcd, 0x42, 0xd4, 0xb8, 0x40, 0x95, 0x54, 0x78, 0xdd, 0x27, 0x61, 0x5d, 0x0d, 0x8a, 0x84,
	0xf5, 0x9c, 0x61, 0xd1, 0x84, 0x28, 0x82, 0x30, 0xa6, 0x2a, 0x0c, 0x98, 0x22, 0x5e, 0x80, 0x99,
	0xe7, 0x74, 0xf5, 0xc9, 0x9a, 0x56, 0x9f, 0xb2, 0x87, 0x67, 0xb3, 0x01, 0x0b, 0x23, 0x3c, 0x73,
	0x9f, 0x7a, 0x1c, 0xa3, 0x0a, 0x8c, 0x63, 0xc6, 0x28, 0x53, 0xdc, 0xc9, 0x83, 0xb9, 0x00, 0xf3,
	0x3b, 0x84, 0x07, 0x8a, 0x5f, 0xae, 0x54, 0x31, 0xbf, 0xe5, 0xa0, 0x92, 0x8c, 0xab, 0x2e, 0x5b,
	0x29, 0x95, 0x57, 0x46, 0x54, 0xce, 0x82, 0x35, 0xd3, 0xea, 0xbe, 0xc8, 0xc1, 0x64, 0xa4, 0xea,
	0x0a, 0x94, 0x29, 0x73, 0x1d, 0x8f, 0x3c, 0x97, 0xcc, 0xc6, 0x24, 0x9e, 0x8b, 0x27, 0xee, 0x86,
	0x72, 0x5f, 0x82, 0xa2, 0x6a, 0x22, 0xeb, 0xa4, 0xd2, 0x33, 0x2a, 0x26, 0x4a, 0x96, 0x43, 0xa6,
	0x63, 0x7e, 0xc5, 0x5c, 0xcf, 0xd7, 0xf2, 0xf5, 0x69, 0xfb, 0xaf, 0xb8, 0x63, 0x31, 0xcf, 0xb6,
	0x4e, 0xe1, 0xb7, 0xad, 0x33, 0x7e, 0x8e, 0x75, 0xe2, 0x5a, 0x4d, 0x8c, 0x68, 0x65, 0x80, 0x1e,
	0xb2, 0xb5, 0x1b, 0x7b, 0xe2, 0x50, 0x81, 0x57, 0x39, 0x58, 0xcc, 0x48, 0x2a, 0x19, 0x1e, 0x42,
	0x29, 0x4e, 0x4c, 0xa4, 0xc5, 0x8d, 0x0c, 0x2d, 0x32, 0x1b, 0x34, 0xe3, 0x51, 0x3b, 0xd9, 0xcb,
	0x78, 0xad, 0x41, 0x31, 0x9e, 0xcf, 0xdc, 0xba, 0x55, 0x58, 0x88, 0xdc, 0x2c, 0xdc, 0x8a, 0xbd,
	0x8e, 0x4f, 0x89, 0x17, 0x28, 0x3d, 0xe6, 0x55, 0x72, 0x9b, 0xf5, 0x9c, 0x5b, 0x2a, 0x85, 0xae,
	0x41, 0x25, 0xc2, 0x74, 0xa9, 0xfb, 0x13, 0x22, 0x57, 0x0f, 0xa9, 0xdc, 0x0e, 0x75, 0x23, 0x84,
	0xf9, 0x18, 0xf4, 0x2d, 0x1c, 0xd9, 0x69, 0xfd, 0xde, 0x76, 0xc8, 0x6f, 0xf4, 0x55, 0xfa, 0xc3,
	0xae, 0x31, 0xef, 0xc0, 0x62, 0xc6, 0x5d, 0x8a, 0x70, 0x04, 0x05, 0x21, 0xb5, 0xa2, 0x20, 0x50,
	0xd2, 0x46, 0x26, 0x11, 0xfd, 0x8a, 0xf6, 0xf0, 0xbc, 0xfa, 0xae, 0x00, 0xd3, 0x9b, 0x84, 0xe1,
	0x76, 0x40, 0xd9, 0x00, 0x3d, 0x82, 0x52, 0x62, 0x29, 0xd1, 0xd2, 0x05, 0x3e, 0x8d, 0xc6, 0xe5,
	0xf3, 0x8b, 0xe4, 0x64, 0xe6, 0x18, 0x1a, 0x40, 0x31, 0xbe, 0x74, 0xc8, 0x3c, 0x77, 0x23, 0x65,
	0xef, 0xa5, 0x0b, 0x6c, 0xad, 0x59, 0x7b, 0xf9, 0xf9, 0xfb, 0xdb, 0x9c, 0x81, 0x74, 0xab, 0x13,
	0x3d, 0xc5, 0xea, 0x12, 0x1e, 0x34, 0xa2, 0x2d, 0x46, 0x6f, 0x34, 0x28, 0xa7, 0x4c, 0x86, 0x96,
	0x7f, 0x6d, 0x43, 0x39, 0x45, 0xfd, 0xa2, 0x7e, 0x35, 0xaf, 0x88, 0x51, 0xfe, 0x47, 0xff, 0x8d,
	0x8e, 0x92, 0xb0, 0x2e, 0x7a, 0xaf, 0x41, 0x39, 0x25, 0x62, 0x6a, 0x9e, 0xb3, 0x2c, 0x95, 0x9a,
	0xe7, 0x4c, 0x3f, 0x98, 0xb7, 0xc5, 0x3c, 0x9b, 0x68, 0x23, 0x36, 0x8f, 0x8b, 0x87, 0xcc, 0x34,
	0x1c, 0x9f, 0x34, 0xc2, 0x4e, 0xd6, 0x51, 0xca, 0xa3, 0xc7, 0xd6, 0x51, 0xdc, 0x8a, 0xc7, 0x1b,
	0x73, 0x27, 0x5f, 0xab, 0x63, 0x27, 0xa7, 0x55, 0xed, 0xd3, 0x69, 0x55, 0xfb, 0x72, 0x5a, 0xd5,
	0xf6, 0x27, 0xc4, 0x1f, 0xf2, 0xda, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x27, 0x56, 0xfd,
	0x03, 0x08, 0x00, 0x00,
}
