// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: registrationapi.proto

// Package directoryapi defines the directory api.

package registrationapi

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RegisterInwayRequest struct {
	InwayAddress         string                                  `protobuf:"bytes,1,opt,name=inway_address,json=inwayAddress,proto3" json:"inway_address,omitempty"`
	Services             []*RegisterInwayRequest_RegisterService `protobuf:"bytes,2,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *RegisterInwayRequest) Reset()         { *m = RegisterInwayRequest{} }
func (m *RegisterInwayRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterInwayRequest) ProtoMessage()    {}
func (*RegisterInwayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac1e362b98b3699, []int{0}
}
func (m *RegisterInwayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterInwayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterInwayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterInwayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInwayRequest.Merge(m, src)
}
func (m *RegisterInwayRequest) XXX_Size() int {
	return m.Size()
}
func (m *RegisterInwayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInwayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInwayRequest proto.InternalMessageInfo

type RegisterInwayRequest_RegisterService struct {
	Name                        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DocumentationUrl            string   `protobuf:"bytes,2,opt,name=documentation_url,json=documentationUrl,proto3" json:"documentation_url,omitempty"`
	ApiSpecificationType        string   `protobuf:"bytes,3,opt,name=api_specification_type,json=apiSpecificationType,proto3" json:"api_specification_type,omitempty"`
	ApiSpecificationDocumentUrl string   `protobuf:"bytes,4,opt,name=api_specification_document_url,json=apiSpecificationDocumentUrl,proto3" json:"api_specification_document_url,omitempty"`
	InsightApiUrl               string   `protobuf:"bytes,5,opt,name=insight_api_url,json=insightApiUrl,proto3" json:"insight_api_url,omitempty"`
	IrmaApiUrl                  string   `protobuf:"bytes,6,opt,name=irma_api_url,json=irmaApiUrl,proto3" json:"irma_api_url,omitempty"`
	Internal                    bool     `protobuf:"varint,7,opt,name=internal,proto3" json:"internal,omitempty"`
	PublicSupportContact        string   `protobuf:"bytes,8,opt,name=public_support_contact,json=publicSupportContact,proto3" json:"public_support_contact,omitempty"`
	TechSupportContact          string   `protobuf:"bytes,9,opt,name=tech_support_contact,json=techSupportContact,proto3" json:"tech_support_contact,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *RegisterInwayRequest_RegisterService) Reset()         { *m = RegisterInwayRequest_RegisterService{} }
func (m *RegisterInwayRequest_RegisterService) String() string { return proto.CompactTextString(m) }
func (*RegisterInwayRequest_RegisterService) ProtoMessage()    {}
func (*RegisterInwayRequest_RegisterService) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac1e362b98b3699, []int{0, 0}
}
func (m *RegisterInwayRequest_RegisterService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterInwayRequest_RegisterService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterInwayRequest_RegisterService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterInwayRequest_RegisterService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInwayRequest_RegisterService.Merge(m, src)
}
func (m *RegisterInwayRequest_RegisterService) XXX_Size() int {
	return m.Size()
}
func (m *RegisterInwayRequest_RegisterService) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInwayRequest_RegisterService.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInwayRequest_RegisterService proto.InternalMessageInfo

type RegisterInwayResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterInwayResponse) Reset()         { *m = RegisterInwayResponse{} }
func (m *RegisterInwayResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterInwayResponse) ProtoMessage()    {}
func (*RegisterInwayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac1e362b98b3699, []int{1}
}
func (m *RegisterInwayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterInwayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterInwayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterInwayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInwayResponse.Merge(m, src)
}
func (m *RegisterInwayResponse) XXX_Size() int {
	return m.Size()
}
func (m *RegisterInwayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInwayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInwayResponse proto.InternalMessageInfo

type SetInsightConfigurationRequest struct {
	IrmaServerURL        string   `protobuf:"bytes,1,opt,name=IrmaServerURL,proto3" json:"IrmaServerURL,omitempty"`
	InsightAPIURL        string   `protobuf:"bytes,2,opt,name=InsightAPIURL,proto3" json:"InsightAPIURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetInsightConfigurationRequest) Reset()         { *m = SetInsightConfigurationRequest{} }
func (m *SetInsightConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*SetInsightConfigurationRequest) ProtoMessage()    {}
func (*SetInsightConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dac1e362b98b3699, []int{2}
}
func (m *SetInsightConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SetInsightConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SetInsightConfigurationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SetInsightConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetInsightConfigurationRequest.Merge(m, src)
}
func (m *SetInsightConfigurationRequest) XXX_Size() int {
	return m.Size()
}
func (m *SetInsightConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetInsightConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetInsightConfigurationRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterInwayRequest)(nil), "registrationapi.RegisterInwayRequest")
	proto.RegisterType((*RegisterInwayRequest_RegisterService)(nil), "registrationapi.RegisterInwayRequest.RegisterService")
	proto.RegisterType((*RegisterInwayResponse)(nil), "registrationapi.RegisterInwayResponse")
	proto.RegisterType((*SetInsightConfigurationRequest)(nil), "registrationapi.SetInsightConfigurationRequest")
}

func init() { proto.RegisterFile("registrationapi.proto", fileDescriptor_dac1e362b98b3699) }

var fileDescriptor_dac1e362b98b3699 = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0x9b, 0xb6, 0x1b, 0x9d, 0x59, 0xd5, 0x61, 0xb5, 0x23, 0xca, 0xa4, 0xa8, 0x2a, 0x30,
	0x55, 0x42, 0x4b, 0xd1, 0x80, 0x07, 0x18, 0x1d, 0x17, 0x95, 0xb8, 0x80, 0x94, 0x5d, 0x07, 0x37,
	0x3d, 0x4d, 0x2d, 0x25, 0xb1, 0xb1, 0x1d, 0x50, 0x9f, 0x85, 0x57, 0xe0, 0x41, 0x76, 0xc9, 0x1b,
	0x00, 0x7d, 0x12, 0x64, 0x3b, 0x2d, 0xfd, 0xe0, 0x63, 0x77, 0x39, 0xff, 0xff, 0xef, 0x7f, 0x9c,
	0xe3, 0x0f, 0xd4, 0x11, 0x90, 0x50, 0xa9, 0x04, 0x51, 0x94, 0xe5, 0x84, 0xd3, 0x80, 0x0b, 0xa6,
	0x18, 0x6e, 0xed, 0xc8, 0xde, 0x59, 0xc2, 0x58, 0x92, 0xc2, 0xc0, 0xd8, 0x93, 0x62, 0x36, 0x80,
	0x8c, 0xab, 0x85, 0xa5, 0xbd, 0x8b, 0x84, 0xaa, 0x79, 0x31, 0x09, 0x62, 0x96, 0x0d, 0x12, 0x96,
	0xb0, 0xdf, 0x94, 0xae, 0x4c, 0x61, 0xbe, 0x2c, 0xde, 0xfb, 0x5a, 0x47, 0xed, 0xd0, 0xf4, 0x07,
	0x31, 0xca, 0x3f, 0x93, 0x45, 0x08, 0x1f, 0x0b, 0x90, 0x0a, 0x3f, 0x42, 0x4d, 0xaa, 0xeb, 0x88,
	0x4c, 0xa7, 0x02, 0xa4, 0x74, 0x9d, 0xae, 0xd3, 0x3f, 0x0a, 0x8f, 0x8d, 0x78, 0x65, 0x35, 0xfc,
	0x0e, 0x35, 0x24, 0x88, 0x4f, 0x34, 0x06, 0xe9, 0x56, 0xbb, 0xb5, 0xfe, 0xfd, 0xcb, 0x97, 0xc1,
	0xee, 0x10, 0x7f, 0xea, 0xbe, 0x16, 0xc7, 0x36, 0x1d, 0xae, 0xdb, 0x78, 0x5f, 0x6a, 0xa8, 0xb5,
	0xe3, 0x62, 0x8c, 0xea, 0x39, 0xc9, 0xa0, 0xfc, 0x05, 0xf3, 0x8d, 0x9f, 0xa2, 0x07, 0x53, 0x16,
	0x17, 0x19, 0xe4, 0xca, 0x2c, 0x15, 0x15, 0x22, 0x75, 0xab, 0x06, 0x38, 0xd9, 0x32, 0x6e, 0x44,
	0x8a, 0x5f, 0xa0, 0x53, 0xc2, 0x69, 0x24, 0x39, 0xc4, 0x74, 0x46, 0x63, 0x1b, 0x50, 0x0b, 0x0e,
	0x6e, 0xcd, 0x24, 0xda, 0x84, 0xd3, 0xf1, 0xa6, 0xf9, 0x7e, 0xc1, 0x01, 0x0f, 0x91, 0xbf, 0x9f,
	0x5a, 0xf5, 0x36, 0xeb, 0xd5, 0x4d, 0xfa, 0x6c, 0x37, 0x7d, 0x5d, 0x32, 0x7a, 0xe9, 0x73, 0xd4,
	0xa2, 0xb9, 0xa4, 0xc9, 0x5c, 0x45, 0xba, 0x99, 0x4e, 0x1d, 0x98, 0x54, 0xb3, 0x94, 0xaf, 0x38,
	0xd5, 0x5c, 0x17, 0x1d, 0x53, 0x91, 0x91, 0x35, 0x74, 0x68, 0x20, 0xa4, 0xb5, 0x92, 0xf0, 0x50,
	0x83, 0xe6, 0x0a, 0x44, 0x4e, 0x52, 0xf7, 0x5e, 0xd7, 0xe9, 0x37, 0xc2, 0x75, 0xad, 0x07, 0xe4,
	0xc5, 0x24, 0xa5, 0x71, 0x24, 0x0b, 0xce, 0x99, 0x50, 0x51, 0xcc, 0x72, 0x45, 0x62, 0xe5, 0x36,
	0xec, 0x80, 0xd6, 0x1d, 0x5b, 0x73, 0x68, 0x3d, 0xfc, 0x0c, 0xb5, 0x15, 0xc4, 0xf3, 0xbd, 0xcc,
	0x91, 0xc9, 0x60, 0xed, 0x6d, 0x27, 0x7a, 0x17, 0xa8, 0xb3, 0x73, 0x9e, 0x92, 0xb3, 0x5c, 0x02,
	0x6e, 0xa3, 0x03, 0x10, 0x82, 0x89, 0xf2, 0x8c, 0x6c, 0xd1, 0x4b, 0x91, 0x3f, 0x06, 0x35, 0xb2,
	0x83, 0x0e, 0x59, 0x3e, 0xa3, 0x49, 0x61, 0x6f, 0xc6, 0xea, 0x9a, 0x3d, 0x46, 0xcd, 0x91, 0xc8,
	0x88, 0x3e, 0x69, 0x10, 0x37, 0xe1, 0x9b, 0x32, 0xbf, 0x2d, 0x1a, 0xaa, 0xdc, 0xad, 0xb7, 0x23,
	0x4d, 0x55, 0x4b, 0x6a, 0x53, 0xbc, 0xfc, 0xee, 0xa0, 0xce, 0x35, 0x15, 0x10, 0x2b, 0x26, 0x16,
	0xe1, 0xc6, 0x35, 0xc4, 0x1f, 0x50, 0x73, 0xeb, 0xb7, 0xf1, 0x93, 0x3b, 0x5d, 0x53, 0xef, 0xfc,
	0x7f, 0x98, 0x9d, 0xbe, 0x57, 0xc1, 0x53, 0xf4, 0xf0, 0x2f, 0x93, 0xe2, 0xc1, 0x5e, 0x93, 0x7f,
	0xef, 0x89, 0x77, 0x1a, 0xd8, 0x07, 0x1e, 0xac, 0x9e, 0x6e, 0xf0, 0x5a, 0x3f, 0xf0, 0x5e, 0xe5,
	0xd5, 0xc9, 0xed, 0x4f, 0xbf, 0x72, 0xbb, 0xf4, 0x9d, 0x6f, 0x4b, 0xdf, 0xf9, 0xb1, 0xf4, 0x9d,
	0xc9, 0xa1, 0x61, 0x9e, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xa6, 0x93, 0x30, 0x3c, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DirectoryRegistrationClient is the client API for DirectoryRegistration service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirectoryRegistrationClient interface {
	// RegisterInway registers an inway for a given service
	RegisterInway(ctx context.Context, in *RegisterInwayRequest, opts ...grpc.CallOption) (*RegisterInwayResponse, error)
	SetInsightConfiguration(ctx context.Context, in *SetInsightConfigurationRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type directoryRegistrationClient struct {
	cc *grpc.ClientConn
}

func NewDirectoryRegistrationClient(cc *grpc.ClientConn) DirectoryRegistrationClient {
	return &directoryRegistrationClient{cc}
}

func (c *directoryRegistrationClient) RegisterInway(ctx context.Context, in *RegisterInwayRequest, opts ...grpc.CallOption) (*RegisterInwayResponse, error) {
	out := new(RegisterInwayResponse)
	err := c.cc.Invoke(ctx, "/registrationapi.DirectoryRegistration/RegisterInway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryRegistrationClient) SetInsightConfiguration(ctx context.Context, in *SetInsightConfigurationRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/registrationapi.DirectoryRegistration/SetInsightConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirectoryRegistrationServer is the server API for DirectoryRegistration service.
type DirectoryRegistrationServer interface {
	// RegisterInway registers an inway for a given service
	RegisterInway(context.Context, *RegisterInwayRequest) (*RegisterInwayResponse, error)
	SetInsightConfiguration(context.Context, *SetInsightConfigurationRequest) (*types.Empty, error)
}

// UnimplementedDirectoryRegistrationServer can be embedded to have forward compatible implementations.
type UnimplementedDirectoryRegistrationServer struct {
}

func (*UnimplementedDirectoryRegistrationServer) RegisterInway(ctx context.Context, req *RegisterInwayRequest) (*RegisterInwayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterInway not implemented")
}
func (*UnimplementedDirectoryRegistrationServer) SetInsightConfiguration(ctx context.Context, req *SetInsightConfigurationRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetInsightConfiguration not implemented")
}

func RegisterDirectoryRegistrationServer(s *grpc.Server, srv DirectoryRegistrationServer) {
	s.RegisterService(&_DirectoryRegistration_serviceDesc, srv)
}

func _DirectoryRegistration_RegisterInway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterInwayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryRegistrationServer).RegisterInway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registrationapi.DirectoryRegistration/RegisterInway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryRegistrationServer).RegisterInway(ctx, req.(*RegisterInwayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DirectoryRegistration_SetInsightConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetInsightConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryRegistrationServer).SetInsightConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/registrationapi.DirectoryRegistration/SetInsightConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryRegistrationServer).SetInsightConfiguration(ctx, req.(*SetInsightConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DirectoryRegistration_serviceDesc = grpc.ServiceDesc{
	ServiceName: "registrationapi.DirectoryRegistration",
	HandlerType: (*DirectoryRegistrationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterInway",
			Handler:    _DirectoryRegistration_RegisterInway_Handler,
		},
		{
			MethodName: "SetInsightConfiguration",
			Handler:    _DirectoryRegistration_SetInsightConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registrationapi.proto",
}

func (m *RegisterInwayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterInwayRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterInwayRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Services) > 0 {
		for iNdEx := len(m.Services) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Services[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRegistrationapi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.InwayAddress) > 0 {
		i -= len(m.InwayAddress)
		copy(dAtA[i:], m.InwayAddress)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.InwayAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RegisterInwayRequest_RegisterService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterInwayRequest_RegisterService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterInwayRequest_RegisterService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TechSupportContact) > 0 {
		i -= len(m.TechSupportContact)
		copy(dAtA[i:], m.TechSupportContact)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.TechSupportContact)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.PublicSupportContact) > 0 {
		i -= len(m.PublicSupportContact)
		copy(dAtA[i:], m.PublicSupportContact)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.PublicSupportContact)))
		i--
		dAtA[i] = 0x42
	}
	if m.Internal {
		i--
		if m.Internal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if len(m.IrmaApiUrl) > 0 {
		i -= len(m.IrmaApiUrl)
		copy(dAtA[i:], m.IrmaApiUrl)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.IrmaApiUrl)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.InsightApiUrl) > 0 {
		i -= len(m.InsightApiUrl)
		copy(dAtA[i:], m.InsightApiUrl)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.InsightApiUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ApiSpecificationDocumentUrl) > 0 {
		i -= len(m.ApiSpecificationDocumentUrl)
		copy(dAtA[i:], m.ApiSpecificationDocumentUrl)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.ApiSpecificationDocumentUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ApiSpecificationType) > 0 {
		i -= len(m.ApiSpecificationType)
		copy(dAtA[i:], m.ApiSpecificationType)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.ApiSpecificationType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.DocumentationUrl) > 0 {
		i -= len(m.DocumentationUrl)
		copy(dAtA[i:], m.DocumentationUrl)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.DocumentationUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RegisterInwayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterInwayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterInwayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Error) > 0 {
		i -= len(m.Error)
		copy(dAtA[i:], m.Error)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.Error)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SetInsightConfigurationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetInsightConfigurationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SetInsightConfigurationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.InsightAPIURL) > 0 {
		i -= len(m.InsightAPIURL)
		copy(dAtA[i:], m.InsightAPIURL)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.InsightAPIURL)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.IrmaServerURL) > 0 {
		i -= len(m.IrmaServerURL)
		copy(dAtA[i:], m.IrmaServerURL)
		i = encodeVarintRegistrationapi(dAtA, i, uint64(len(m.IrmaServerURL)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRegistrationapi(dAtA []byte, offset int, v uint64) int {
	offset -= sovRegistrationapi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RegisterInwayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.InwayAddress)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovRegistrationapi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterInwayRequest_RegisterService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	l = len(m.DocumentationUrl)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	l = len(m.ApiSpecificationType)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	l = len(m.ApiSpecificationDocumentUrl)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	l = len(m.InsightApiUrl)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	l = len(m.IrmaApiUrl)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	if m.Internal {
		n += 2
	}
	l = len(m.PublicSupportContact)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	l = len(m.TechSupportContact)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterInwayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Error)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetInsightConfigurationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.IrmaServerURL)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	l = len(m.InsightAPIURL)
	if l > 0 {
		n += 1 + l + sovRegistrationapi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRegistrationapi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRegistrationapi(x uint64) (n int) {
	return sovRegistrationapi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RegisterInwayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegistrationapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterInwayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterInwayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InwayAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InwayAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &RegisterInwayRequest_RegisterService{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegistrationapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterInwayRequest_RegisterService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegistrationapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentationUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DocumentationUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiSpecificationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiSpecificationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiSpecificationDocumentUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiSpecificationDocumentUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsightApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsightApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IrmaApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IrmaApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Internal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Internal = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicSupportContact", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicSupportContact = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TechSupportContact", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TechSupportContact = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegistrationapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterInwayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegistrationapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterInwayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterInwayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Error = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegistrationapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetInsightConfigurationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRegistrationapi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetInsightConfigurationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetInsightConfigurationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IrmaServerURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IrmaServerURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InsightAPIURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InsightAPIURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRegistrationapi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRegistrationapi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRegistrationapi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRegistrationapi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRegistrationapi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRegistrationapi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRegistrationapi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRegistrationapi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRegistrationapi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRegistrationapi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRegistrationapi = fmt.Errorf("proto: unexpected end of group")
)
