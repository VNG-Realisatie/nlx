version: '3.5'

volumes:
  inway_cert:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  outway_cert:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  monitor_cert:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  directory_cert:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  postgres_data: {}

services:
  docs:
    build:
      context: .
      dockerfile: docs/Dockerfile
      target: build
    volumes:
      - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
    ports:
      - '1313:1313'
    command: hugo server --bind 0.0.0.0

  ca:
    build:
      context: .
      dockerfile: unsafe-ca/Dockerfile
    ports:
      - '8888:8888'
    working_dir: /ca
    command: ./start-ca.sh nlx.local

  postgres:
    image: 'postgres:10'
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  db:
    build:
      context: .
      dockerfile: db/Dockerfile
      target: build
    volumes:
      - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
    working_dir: /go/src/github.com/VNG-Realisatie/nlx/db
    depends_on:
      - postgres

  inway_cert:
    build:
      context: .
      dockerfile: unsafe-ca/Dockerfile
    depends_on:
      - ca
    volumes:
      - inway_cert:/inway_cert
    command: >
      /bin/ash -c "
        cd /inway_cert &&
        /ca/generate-cert.sh inway.nlx.local DemoProviderOrganization ca &&
        touch /inway_cert/.done
      "

  inway:
    build:
      context: .
      dockerfile: inway/Dockerfile
      target: build
    depends_on:
      - inway_cert
    networks:
      default:
        aliases:
          - inway.nlx.local
    environment:
      - LOG_TYPE=development
      - LOG_LEVEL=debug
      - TLS_NLX_ROOT_CERT=/inway_cert/nlx_root.pem
      - TLS_ORG_CERT=/inway_cert/inway_nlx_local.pem
      - TLS_ORG_KEY=/inway_cert/inway_nlx_local-key.pem
      - SELF_ADDRESS=inway.nlx.local:2018
      - DIRECTORY_ADDRESS=directory.nlx.local:1984
    volumes:
      - inway_cert:/inway_cert
      - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
    ports:
      - '2018:2018'
    command: >
      /bin/ash -c "
        while [ ! -f /inway_cert/.done ]; do
          sleep .2
        done
        modd
      "
    depends_on:
      - inway_cert

  outway_cert:
    build:
      context: .
      dockerfile: unsafe-ca/Dockerfile
    depends_on:
      - ca
    volumes:
      - outway_cert:/outway_cert
    command: >
      /bin/ash -c "
        cd /outway_cert &&
        /ca/generate-cert.sh outway.nlx.local DemoRequesterOrganization ca &&
        touch /outway_cert/.done
      "

  outway:
    build:
      context: .
      dockerfile: outway/Dockerfile
      target: build
    depends_on:
      - outway_cert
    networks:
      default:
        aliases:
          - outway.nlx.local
    environment:
      - LOG_TYPE=development
      - LOG_LEVEL=debug
      - TLS_NLX_ROOT_CERT=/outway_cert/nlx_root.pem
      - TLS_ORG_CERT=/outway_cert/outway_nlx_local.pem
      - TLS_ORG_KEY=/outway_cert/outway_nlx_local-key.pem
      - DIRECTORY_ADDRESS=directory.nlx.local:1984
    volumes:
      - outway_cert:/outway_cert
      - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
    ports:
      - '12018:12018'
    command: >
      /bin/ash -c "
        while [ ! -f /outway_cert/.done ]; do
          sleep .2
        done
        modd
      "
    depends_on:
      - outway_cert

  monitor_cert:
    build:
      context: .
      dockerfile: unsafe-ca/Dockerfile
    depends_on:
      - ca
    volumes:
      - monitor_cert:/monitor_cert
    command: >
      /bin/ash -c "
        cd /monitor_cert &&
        /ca/generate-cert.sh monitor.nlx.local NLX ca &&
        touch /monitor_cert/.done
      "

  monitor:
    build:
      context: .
      dockerfile: monitor/Dockerfile
      target: build
    depends_on:
      - monitor_cert
    networks:
      default:
        aliases:
          - monitor.nlx.local
    environment:
      - LOG_TYPE=development
      - LOG_LEVEL=debug
      - TLS_NLX_ROOT_CERT=/monitor_cert/nlx_root.pem
      - TLS_MONITOR_CERT=/monitor_cert/monitor_nlx_local.pem
      - TLS_MONITOR_KEY=/monitor_cert/monitor_nlx_local-key.pem
    volumes:
      - monitor_cert:/monitor_cert
      - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
    command: >
      /bin/ash -c "
        while [ ! -f /monitor_cert/.done ]; do
          sleep .2
        done
        modd
      "
    depends_on:
      - monitor_cert
      - postgres

  certportal:
    build:
      context: .
      dockerfile: certportal/Dockerfile
      target: build
    depends_on:
      - ca
    environment:
      - CA_HOST=ca
    volumes:
      - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
    ports:
      - '12020:12020'
    command: modd

  directory_cert:
    build:
      context: .
      dockerfile: unsafe-ca/Dockerfile
    depends_on:
      - ca
    volumes:
      - directory_cert:/directory_cert
    command: >
      /bin/ash -c "
        cd /directory_cert &&
        /ca/generate-cert.sh directory.nlx.local NLX ca &&
        touch /directory_cert/.done
      "

  directory:
    build:
      context: .
      dockerfile: directory/Dockerfile
      target: build
    depends_on:
      - directory_cert
    networks:
      default:
        aliases:
          - directory.nlx.local
    environment:
      - LOG_TYPE=development
      - LOG_LEVEL=debug
      - TLS_NLX_ROOT_CERT=/directory_cert/nlx_root.pem
      - TLS_DIRECTORY_CERT=/directory_cert/directory_nlx_local.pem
      - TLS_DIRECTORY_KEY=/directory_cert/directory_nlx_local-key.pem
    volumes:
      - directory_cert:/directory_cert
      - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
    ports:
      - '1984:1984'
      - '1985:1985'
    command: >
      /bin/ash -c "
        while [ ! -f /directory_cert/.done ]; do
          sleep .2
        done
        modd
      "
    depends_on:
      - directory_cert
      - postgres

  directory-ui:
      build:
        context: .
        dockerfile: directory-ui/Dockerfile
        target: build
      depends_on:
        - directory
      networks:
        default:
          aliases:
            - directory-ui.nlx.local
      volumes:
        - $GOPATH/src/github.com/VNG-Realisatie/nlx:/go/src/github.com/VNG-Realisatie/nlx
      ports:
        - '12021:8080'
      command: >
        /bin/ash -c "
          npm install
          npm run start
        "
