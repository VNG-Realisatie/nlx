{{- if .Values.config.generateCertificate -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ca-cfssl-unsafe.fullname" . }}-tls
  labels:
    {{- include "ca-cfssl-unsafe.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: "post-install"
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "ca-cfssl-unsafe.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "ca-cfssl-unsafe.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      initContainers:
        - name: cfssl
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "ca-cfssl-unsafe.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /certs
          command: ["/bin/sh"]
          args:
            - "-exc"
            - echo "${CSR}" | cfssl genkey -initca - | cfssljson -bare ca
          env:
            - name: CSR
              value: {{ .Values.config.cfsslCSR | toJson | quote }}
          volumeMounts:
            - name: certificates
              mountPath: /certs
      containers:
        - name: kubectl
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          workingDir: /certs
          command: ["/bin/sh"]
          args:
            - "-exc"
            - |
              kubectl delete secret "${SECRET_NAME}" --namespace "${NAMESPACE}" || true
              kubectl create secret tls "${SECRET_NAME}" --namespace "${NAMESPACE}" --cert=ca.pem --key=ca-key.pem
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SECRET_NAME
              value: {{ include "ca-cfssl-unsafe.fullname" . }}-tls
          volumeMounts:
            - name: certificates
              mountPath: /certs
              readOnly: true
      volumes:
        - name: certificates
          emptyDir: {}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ca-cfssl-unsafe.fullname" . }}-cleanup
  labels:
    {{- include "ca-cfssl-unsafe.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: "pre-delete"
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "ca-cfssl-unsafe.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "ca-cfssl-unsafe.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      containers:
        - name: kubectl
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: {{ .Values.kubectl.image.pullPolicy }}
          workingDir: /certs
          command: ["/bin/sh"]
          args:
            - "-exc"
            - kubectl delete secret "${SECRET_NAME}" --namespace "${NAMESPACE}" || true
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SECRET_NAME
              value: {{ include "ca-cfssl-unsafe.fullname" . }}-tls
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end -}}
