apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nlx-directory.fullname" . }}-monitor
  labels:
    {{- include "nlx-directory.labels" . | nindent 4 }}
    app.kubernetes.io/component: monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "nlx-directory.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: monitor
  template:
    metadata:
      labels:
        {{- include "nlx-directory.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: monitor
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret-postgresql: {{ include (print $.Template.BasePath "/secret-postgresql.yaml") . | sha256sum }}
        checksum/secret-tls: {{ include (print $.Template.BasePath "/secret-tls.yaml") . | sha256sum }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "nlx-directory.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: nlx-directory-monitor
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "nlx-directory.monitorImage" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TTL_OFFLINE_SERVICE
              value: {{ .Values.config.monitorOfflineServiceTTL | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "nlx-directory.postgresql.secret" . }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "nlx-directory.postgresql.secret" . }}
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DSN
              value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@{{ .Values.postgresql.hostname }}/{{ .Values.postgresql.database }}?sslmode=disable&connect_timeout=10
            - name: TLS_NLX_ROOT_CERT
              value: /config/root.pem
            - name: TLS_MONITOR_CERT
              value: /certificate/tls.crt
            - name: TLS_MONITOR_KEY
              value: /certificate/tls.key
            - name: LOG_TYPE
              value: {{ .Values.config.logType }}
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: certificate
              mountPath: /certificate
            - name: config
              mountPath: /config
              readOnly: true
      volumes:
        - name: certificate
          secret:
            secretName: {{ default (printf "%s-tls" (include "nlx-directory.fullname" .)) .Values.tls.existingSecret }}
        - name: config
          configMap:
            name: {{ include "nlx-directory.fullname" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
