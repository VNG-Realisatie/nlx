global:
  imageRegistry: ""
  imageTag: ""
  tls:
    organization:
      rootCertificatePEM: ""
    internal:
      rootCertificatePEM: ""

image:
  registry: docker.io
  repository: nlxio/inway
  tag: ""
  pullPolicy: Always
  pullSecrets: []

replicaCount: 1

nameOverride: ""
fullnameOverride: ""

# Inway specific settings
config:
  logType: live
  logLevel: info
  name: ""
  selfAddress: ""
  managementAPIProxyAddress: ""
  directoryHostname: ""
  directoryRegistrationHostname: ""

  authorizationService:
    enabled: false
    url: ""

  managementAPI:
    address: ""

transactionLog:
  enabled: true
  apiAddress: ""
  hostname: ""
  port: 5432
  database: ""
  username: ""
  password: ""
  connectTimeout: 10
  sslMode: require
  existingSecret:
    name: ""
    usernameKey: "username"
    passwordKey: "password"

tls:
  organization:
    rootCertificatePEM: ""
    certificatePEM: ""
    keyPEM: ""
    existingSecret: ""
  internal:
    rootCertificatePEM: ""
    certificatePEM: ""
    keyPEM: ""
    existingSecret: ""
  serviceCA:
    certificatePEM: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext: {}

podSecurityContext:
  fsGroup: 1001

service:
  type: LoadBalancer
  annotations: {}
  port: 443
  nodePort: 443
  loadBalancerIP: ""
  portManagementAPIProxy: 8443
  nodePortManagementAPIProxy: 8443
  separateServices:
    enabled: false
    inway:
      port: 443
      nodePort: 443
      type: LoadBalancer
      annotations: {}
      loadBalancerIP: ""
    managementAPIProxy:
      port: 8443
      nodePort: 8443
      type: LoadBalancer
      annotations: {}
      loadBalancerIP:

resources: {}

nodeSelector: {}

affinity: {}

tolerations: []
