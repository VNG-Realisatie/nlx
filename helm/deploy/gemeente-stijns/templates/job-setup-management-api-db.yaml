apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "gemeente-stijns.fullname" . }}-setup-management-api-db
  labels:
    {{- include "gemeente-stijns.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "1"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      labels:
        {{- include "gemeente-stijns.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: management-api-db
          image: postgres:alpine
          command: ["/bin/sh"]
          args:
            - "-exc"
            - psql -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = '${DATABASE_TO_CREATE}'" | grep -q 1 || psql -U postgres -c "CREATE DATABASE \"${DATABASE_TO_CREATE}\""
          env:
            - name: DATABASE_TO_CREATE
              value: {{ required "PostgreSQL database name is required" .Values.managementAPI.postgresql.database }}
            - name: PGHOST
              value: {{ required "PostgreSQL hostname is required" .Values.managementAPI.postgresql.hostname }}
            - name: PGPORT
              value: {{ required "PostgreSQL port number is required" .Values.managementAPI.postgresql.port | quote }}
            - name: PGSSLMODE
              value: {{ required "PostgreSQL SSL mode is required" .Values.managementAPI.postgresql.sslMode }}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ required "PostgreSQL existing secret name is required" .Values.managementAPI.postgresql.existingSecret.name }}
                  key: {{ required "PostgreSQL existing secret username key is required" .Values.managementAPI.postgresql.existingSecret.usernameKey }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ required "PostgreSQL existing secret name is required" .Values.managementAPI.postgresql.existingSecret.name }}
                  key: {{ required "PostgreSQL existing secret password key is required" .Values.managementAPI.postgresql.existingSecret.passwordKey }}
            - name: PGCONNECT_TIMEOUT
              value: {{ required "PostgreSQL time-out is required" .Values.managementAPI.postgresql.connectTimeout | quote }}
