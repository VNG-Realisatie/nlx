apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "basisregister-fictieve-personen.fullname" . }}
  labels:
    {{- include "basisregister-fictieve-personen.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "basisregister-fictieve-personen.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "basisregister-fictieve-personen.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "basisregister-fictieve-personen.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: uwsgi
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ template "basisregister-fictieve-personen.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          env:
            - name: POSTGRES_HOST
              value: {{ required "PostgreSQL hostname is required" .Values.postgresql.hostname }}
            - name: POSTGRES_PORT
              value: {{ required "PostgreSQL port number is required" .Values.postgresql.port | quote }}
            - name: POSTGRES_DATABASE
              value: {{ required "PostgreSQL database name is required" .Values.postgresql.database }}
            - name: PGSSLMODE
              value: {{ .Values.postgresql.sslMode }}
            - name: PGCONNECT_TIMEOUT
              value: {{ .Values.postgresql.connectTimeout | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "basisregister-fictieve-personen.postgresql.secret" . }}
                  key: {{ .Values.postgresql.existingSecret.usernameKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "basisregister-fictieve-personen.postgresql.secret" . }}
                  key: {{ .Values.postgresql.existingSecret.passwordKey }}
            - name: POSTGRES_DSN
              value: 'postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)'
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
