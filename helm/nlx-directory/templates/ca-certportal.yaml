{{ if eq .Values.ca.kind "public" }}
{{ with set . "component" "ca-certportal" }}
apiVersion: apps/v1
kind: Deployment
metadata: {{ include "nlx-directory.common.metadata" . | nindent 2 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: {{ include "nlx-directory.common.metadata-labels" . | nindent 6 }}
  template:
    metadata:
      labels: {{ include "nlx-directory.common.metadata-labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{.component}}
          image: {{.Values.imagePrefix}}nlxio/{{.component}}:{{.Values.imageTag}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          env:
            - name: LOG_TYPE
              value: {{ default "live" .Values.logType }}
            - name: LOG_LEVEL
              value: {{ default "debug" .Values.logLevel }}
            - name: CA_HOST
              value: {{.Values.caAddress}}
      restartPolicy: Always
  status: {}
---
apiVersion: v1
kind: Service
metadata: {{ include "nlx-directory.common.metadata" . | nindent 2 }}
spec:
  selector: {{ include "nlx-directory.common.metadata-labels" . | nindent 4 }}
  ports:
    - name: webinterface
      protocol: TCP
      port: 8080
  clusterIP: None
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata: {{ include "nlx-directory.common.metadata" . | nindent 2 }}
  annotations:
    ingress.kubernetes.io/hsts-include-subdomains: 'true'
    ingress.kubernetes.io/hsts-max-age: '315360000'
    ingress.kubernetes.io/hsts-preload: 'true'
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
    - host: certportal{{ if .Values.servicePartOfExternalDomain }}-{{ else }}.{{ end }}{{.Values.externalDomain}}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{.component}}
              servicePort: webinterface
{{ if eq .Values.domain "demo.nlx.io" }}
    - host: certportal.nlx.io
      http:
        paths:
          - path: /
            backend:
              serviceName: {{.component}}
              servicePort: webinterface
{{ end }}
{{ end }}
{{ end }}
