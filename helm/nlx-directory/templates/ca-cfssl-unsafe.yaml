{{ if eq .Values.ca.kind "public" }}
{{ with set . "component" "ca-cfssl-unsafe" }}
{{ if .Values.ca.certPEM }}
apiVersion: v1
kind: Secret
metadata:
  name: ca-root-cert-{{.component}}
  namespace: {{.Release.Namespace}}
  labels: {{ include "nlx-directory.common.metadata-labels" . | nindent 4 }}
type: Opaque
data:
  cert.pem: {{ .Values.ca.certPEM | b64enc }}
  key.pem: {{ .Values.ca.keyPEM | b64enc }}
---
{{ end }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata: {{ include "nlx-directory.common.metadata" . | nindent 2 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ .Chart.Name }}
      component: {{.component}}
  template:
    metadata:
      labels: {{ include "nlx-directory.common.metadata-labels" . | nindent 8 }}
    spec:
      containers:
        - name: ca-cfssl-unsafe
          image: {{.Values.caCfsslUnsafeImage}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          {{- if .Values.ca.certPEM }}
          command: ["cfssl"]
          args: ["serve", "--address=0.0.0.0", "--ca=/ca-root-cert/cert.pem", "--ca-key=/ca-root-cert/key.pem"]
          {{- else }}
          command: ["/ca/start-ca.sh"]
          args: ["nlx.local"]
          {{- end }}
          volumeMounts:
          {{- if .Values.ca.certPEM }}
            - name: ca-root-cert
              mountPath: "/ca-root-cert"
              readOnly: true
          {{- end }}
      volumes:
        {{- if .Values.ca.certPEM }}
        - name: ca-root-cert
          secret:
            secretName: ca-root-cert-{{.component}}
        {{ end }}
      restartPolicy: Always
  status: {}
---
apiVersion: v1
kind: Service
metadata: {{ include "nlx-directory.common.metadata" . | nindent 2 }}
spec:
  selector:
    release: {{ .Release.Name }}
    app: {{ .Chart.Name }}
    component: {{.component}}
  ports:
    - name: api
      protocol: TCP
      port: 8888
  cluserIP: None
{{ end }}
{{ end }}
