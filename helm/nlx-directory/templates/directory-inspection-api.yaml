{{ with set . "component" "directory-inspection-api" }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata: {{ include "nlx-directory.common.metadata" . | nindent 2 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ .Chart.Name }}
      component: {{.component}}
  template:
    metadata:
      labels: {{ include "nlx-directory.common.metadata-labels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 1001
      volumes:
        - name: certs
          {{ if eq .Values.ca.kind "private" }}
          secret:
            secretName: certs-{{ .component }}
          {{ end }}
          {{ if eq .Values.ca.kind "public" }}
          emptyDir: {}

      initContainers:
        - name: directory-certs
          image: {{.Values.caCfsslUnsafeImage}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          volumeMounts:
            - name: certs
              mountPath: /certs
          command: ["/bin/ash"]
          args:
            - "-c"
            - |-
                cd /certs &&
                /ca/generate-cert.sh {{.component}}.{{.Values.domain}} NLX ca-cfssl-unsafe
      {{ end }}

      containers:
        - name: directory
          image: {{.Values.directoryInspectionImage}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          env:
            - name: LOG_TYPE
              value: {{ default "live" .Values.logType }}
            - name: LOG_LEVEL
              value: {{ default "debug" .Values.logLevel }}
            - name: POSTGRES_DSN
              value: postgresql://{{.Values.dbUsernameDirectory}}:{{.Values.dbPasswordDirectory}}@postgres/{{.Values.dbDatabaseDirectory}}?sslmode=disable&connect_timeout=10
            - name: TLS_NLX_ROOT_CERT
              {{ if eq .Values.ca.kind "private" }}
              value: "/certs/ca.pem"
              {{ end }}
              {{ if eq .Values.ca.kind "public" }}
              value: "/certs/nlx_root.pem"
              {{ end }}
            - name: TLS_DIRECTORY_CERT
              value: "/certs/{{.component}}.{{.Values.domain}}.pem"
            - name: TLS_DIRECTORY_KEY
              value: "/certs/{{.component}}.{{.Values.domain}}-key.pem"
            - name: DEMO_ENV
              value: "{{.Values.demoEnv}}"
            - name: DEMO_DOMAIN
              value: "{{.Values.demoDomain}}"
          volumeMounts:
            - name: certs
              mountPath: /certs
      restartPolicy: Always
  status: {}
---
{{ if .Values.disableLoadBalancers }}
apiVersion: v1
kind: Service
metadata:
  name: directory-inspection-api
  namespace: {{ .Release.Namespace }}
  labels: {{- include "nlx-directory.common.metadata-labels" . | nindent 2 }}
spec:
  selector: {{ include "nlx-directory.common.metadata-labels" . | nindent 4 }}
  ports:
    - name: directory-registration
      protocol: TCP
      port: 443
      targetPort: 8443
{{ else }}
apiVersion: v1
kind: Service
metadata: {{ include "nlx-directory.common.metadata" . | nindent 2 }}
spec:
  selector: {{ include "nlx-directory.common.metadata-labels" . | nindent 4 }}
  type: LoadBalancer
  ports:
    - name: grpc
      protocol: TCP
      port: 443
      targetPort: 8443
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: directory-inspection-api-internal
  namespace: {{ .Release.Namespace }}
  labels: {{- include "nlx-directory.common.metadata-labels" . | nindent 2 }}
spec:
  selector: {{ include "nlx-directory.common.metadata-labels" . | nindent 4 }}
  ports:
    - name: webapi
      protocol: TCP
      port: 80
      targetPort: 8080
{{ end }}
