{{ if .Values.inway.enable }}
{{ with set . "component" "inway" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: inway-service-config
  namespace: {{.Release.Namespace}}
  labels: {{ include "nlx-organization.common.metadata-labels" . | nindent 4 }}
data:
  service-config.toml: |
    {{- .Values.inway.config | nindent 4 }}
---
{{ end }}
{{ if .Values.inway.rootca }}  
apiVersion: v1
kind: ConfigMap
metadata:
  name: inway-service-rootca
  namespace: {{.Release.Namespace}}
  labels: {{ include "nlx-organization.common.metadata-labels" . | nindent 4 }}
data:
  {{- range $key, $val := .Values.inway.rootca }}
  {{- $key | nindent 2}}: |
    {{- $val | nindent 4}}
{{- end}}
---
{{ end}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata: {{ include "nlx-organization.common.metadata" . | nindent 2 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ .Chart.Name }}
      component: {{.component}}
  template:
    metadata:
      labels: {{ include "nlx-organization.common.metadata-labels" . | nindent 8 }}
    spec:
      volumes:
        - name: certs
          emptyDir: {}
        - name: inway-service-config
          configMap:
            name: inway-service-config
        {{ if .Values.inway.rootca }}
        - name: ca-certs  
          configMap:
            name: inway-service-rootca
        {{ end }} 
        

      initContainers:
        - name: inway-certs
          image: {{.Values.caCfsslUnsafeImage}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          volumeMounts:
            - name: certs
              mountPath: /certs
          command: ["/bin/ash"]
          args:
            - "-c"
            - |-
                cd /certs &&
                /ca/generate-cert.sh {{.component}}.{{.Values.domain}} {{.Values.organizationName}} {{.Values.caAddress}}

      containers:
        - name: inway
          image: {{.Values.inwayImage}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          command: ["/usr/local/bin/nlx-inway"]
          env:
            - name: LOG_TYPE
              value: development
            - name: LOG_LEVEL
              value: {{ default "debug" .Values.logLevel }}
            - name: TLS_NLX_ROOT_CERT
              value: "/certs/nlx_root.pem"
            - name: TLS_ORG_CERT
              value: "/certs/{{.component}}.{{.Values.domain}}.pem"
            - name: TLS_ORG_KEY
              value: "/certs/{{.component}}.{{.Values.domain}}-key.pem"
            - name: POSTGRES_DSN
              value: postgresql://{{.Values.dbUsernameTxlogWriter}}:{{.Values.dbPasswordTxlogWriter}}@postgres/{{.Values.dbDatabaseTxlog}}?sslmode=disable&connect_timeout=10
            - name: SELF_ADDRESS
              value: "{{.component}}.{{.Values.domain}}"
            - name: DIRECTORY_REGISTRATION_ADDRESS
              value: "{{.Values.directoryRegistrationHostname}}:443"
            - name: SERVICE_CONFIG
              value: /inway-service-config/service-config.toml
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: inway-service-config
              mountPath: /inway-service-config
            {{ if .Values.inway.rootca }}  
            - name: ca-certs
              mountPath: /ca-certs
            {{ end }}
      # NOTE: workarround because .minikube doesn't resolve via DNS
      {{ if .Values.externalIP }}
      hostAliases:
        - ip: "{{.Values.externalIP}}"
          hostnames:
            - "{{.Values.directoryRegistrationHostname}}"
      {{ end }}

      restartPolicy: Always
  status: {}
---
apiVersion: v1
kind: Service
metadata: {{ include "nlx-organization.common.metadata" . | nindent 2 }}
spec:
  selector: {{ include "nlx-organization.common.metadata-labels" . | nindent 4 }}
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8443
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata: {{ include "nlx-organization.common.metadata" . | nindent 2 }}
#   annotations:
#     kubernetes.io/ingress.class: nginx-ingress
#     nginx.ingress.kubernetes.io/ssl-passthrough: "true"
# spec:
#   rules:
#   - host: inway.{{.Values.domain}}
#     http:
#       paths:
#         - backend:
#             serviceName: {{.component}}
#             servicePort: gateway
{{ end }}
