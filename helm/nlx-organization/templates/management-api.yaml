{{ if .Values.management.enable }}
{{ with set . "component" "management-api" }}
apiVersion: apps/v1
kind: Deployment
metadata: {{ include "nlx-organization.common.metadata" . | nindent 2 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ .Chart.Name }}
      component: {{ .component }}
  template:
    metadata:
      labels: {{ include "nlx-organization.common.metadata-labels" . | nindent 8 }}
    spec:
      volumes:
        - name: certs
          emptyDir: {}
      initContainers:
        - name: management-api-certs
          image: {{.Values.imagePrefix}}nlxio/ca-cfssl-unsafe:{{.Values.imageTag}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          volumeMounts:
            - name: certs
              mountPath: /certs
          command: ["/bin/ash"]
          args:
            - "-c"
            - |-
                cd /certs &&
                /ca/generate-cert.sh {{.component}} {{.Values.organizationName}} {{.Values.caAddress}}
      containers:
        - name: {{ .component }}
          image: {{.Values.imagePrefix}}nlxio/{{.component}}:{{.Values.imageTag}}
          imagePullPolicy: {{.Values.imagePullPolicy}}
          env:
            - name: LOG_TYPE
              value: {{ default "live" .Values.logType }}
            - name: LOG_LEVEL
              value: {{ default "debug" .Values.logLevel }}
            - name: TLS_NLX_ROOT_CERT
              value: "/certs/nlx_root.pem"
            - name: TLS_ORG_CERT
              value: "/certs/{{.component}}.pem"
            - name: TLS_ORG_KEY
              value: "/certs/{{.component}}-key.pem"
            - name: CONFIG_API_ADDRESS
              value: "config-api:443"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .component }}
                  key: secretKey
            - name: SESSION_COOKIE_SECURE
              value: {{ if .Values.management.sessionCookieSecure }}"1"{{ else }}"0"{{ end }}
            - name: OIDC_CLIENT_ID
              value: {{ .Values.management.oidcClientId }}
            - name: OIDC_CLIENT_SECRET
              value: {{ .Values.management.oidcClientSecret }}
            - name: OIDC_DISCOVERY_URL
              value: {{ .Values.management.oidcDiscoveryUrl }}
            - name: OIDC_REDIRECT_URL
              value: {{ .Values.management.oidcRedirectUrl }}
          volumeMounts:
            - name: certs
              mountPath: /certs
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata: {{ include "nlx-organization.common.metadata" . | nindent 2 }}
spec:
  selector: {{ include "nlx-organization.common.metadata-labels" . | nindent 4 }}
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .component }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "nlx-organization.common.metadata-labels" . | nindent 4 }}
data:
  secretKey: {{ randAlphaNum 32 | b64enc }}
{{ end }}
{{ end }}
