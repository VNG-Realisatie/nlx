syntax = "proto3";

package directory;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";


option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;


service Directory {
    rpc ListServices (Empty) returns (ListServicesResponse) {
        option (google.api.http) = { get: "/api/v1/directory/services" };
    }
    rpc GetOrganizationService (GetOrganizationServiceRequest) returns (DirectoryService) {
        option (google.api.http) = { get: "/api/v1/directory/organizations/{organizationName}/services/{serviceName}" };
    }
    rpc RequestAccessToService (RequestAccessToServiceRequest) returns (Empty) {
        option (google.api.http) = { post: "/api/v1/directory/organizations/{organizationName}/services/{serviceName}/access-requests" };
    }
}

message Empty {
}

message ListServicesResponse {
    repeated DirectoryService services = 1;
}

message GetOrganizationServiceRequest {
    string organizationName = 1;
    string serviceName = 2;
}
message DirectoryService {
    message AccessRequest {
        enum Status {
            FAILED = 0;
            CREATED = 1;
            SEND = 2;
        }

        string id = 1;
        Status status = 2;
        google.protobuf.Timestamp createdAt = 3;
        google.protobuf.Timestamp updatedAt = 4;
    }

    enum Status {
        unknown = 0;
        up = 1;
        down = 2;
        degraded = 3;
    }

    string serviceName = 1;
    string organizationName = 2;
    string apiSpecificationType = 3 [(gogoproto.customname)="APISpecificationType"];
    Status status = 4;
    AccessRequest latestAccessRequest = 5;

}

message RequestAccessToServiceRequest {
    string organizationName = 1;
    string serviceName = 2;
}
