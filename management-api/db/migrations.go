// Code generated for package db by go-bindata DO NOT EDIT. (@generated)
// sources:
// db/migrations/001_initial_schema.down.sql
// db/migrations/001_initial_schema.up.sql
// db/migrations/002_authorization.down.sql
// db/migrations/002_authorization.up.sql
// db/migrations/003_audit_log.down.sql
// db/migrations/003_audit_log.up.sql
// db/migrations/004_finance.down.sql
// db/migrations/004_finance.up.sql
// db/migrations/005_public_key.down.sql
// db/migrations/005_public_key.up.sql
// db/migrations/006_order.down.sql
// db/migrations/006_order.up.sql
// db/migrations/007_audit_log_services_delegator.down.sql
// db/migrations/007_audit_log_services_delegator.up.sql
package db

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __001_initial_schemaDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xdd\x4e\xc4\x20\x10\x85\xef\x79\x0a\x9e\xc0\x17\xe0\xaa\x5b\x1b\x6d\xb2\x6d\x4d\x97\x7b\x32\x21\x2c\x21\xda\x41\x19\xd6\xbf\xa7\x37\x2e\x41\xa3\xd9\x22\x4d\xbc\x24\xf9\xe6\x9c\xe1\xcc\xd9\x75\x37\xfd\xc8\x63\x00\x24\xd0\xd1\x79\x14\x8c\x35\x7b\xd9\xcd\x5c\x36\xbb\x7d\xc7\xf1\xe1\x55\x2d\x80\x60\xcd\x62\x30\x5e\x81\xd6\x86\x48\x05\xf3\x74\x32\x14\x49\x39\xd4\x7e\x71\x68\xf9\xf5\x3c\xdd\xf1\x76\x1a\x0f\x72\x6e\xfa\x51\xf2\xe3\xbd\x5a\x63\x15\x99\xf0\xec\xb4\x11\x15\x46\x36\x00\x46\x2a\xa8\x27\xe0\x5b\xfb\xa7\x69\x8d\xc5\x63\xf0\xfe\x58\xb2\x48\x80\xf2\xa7\x68\xfd\x46\x0b\x87\x2f\xf0\x46\xf9\xc3\x17\x4d\xce\xc8\x17\x91\x9e\xff\xac\x59\x93\x37\x99\x18\x1d\xda\x8b\x72\x3e\x58\x40\xf7\x0e\x9f\xf5\x50\x19\xcc\x9b\xb2\xf3\xc0\x8a\x66\x5a\x40\x14\x98\xb5\x92\x6c\x99\xc9\x97\xa9\x98\x49\x75\xa9\x00\xd3\xd1\x4b\x60\xba\xc3\xdf\x84\xaa\x89\x21\xa7\x9a\xf3\x3c\xb4\xb7\xdd\xd0\xfc\xa2\x04\x63\xed\x34\x0c\xbd\x14\xec\x23\x00\x00\xff\xff\x08\x17\x6e\x73\xb7\x03\x00\x00")

func _001_initial_schemaDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__001_initial_schemaDownSql,
		"001_initial_schema.down.sql",
	)
}

func _001_initial_schemaDownSql() (*asset, error) {
	bytes, err := _001_initial_schemaDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "001_initial_schema.down.sql", size: 951, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __001_initial_schemaUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x5d\x73\xab\x36\x10\x7d\xe7\x57\xec\x5b\xec\x19\x4f\x27\xed\xe4\x3e\xe5\x89\x38\xca\x0d\x73\x1d\xdc\x62\xd2\x69\x9e\x34\xba\x62\xed\xa8\xc6\x12\x95\x44\x3e\xee\xaf\xef\x00\xc6\x80\x6d\x61\x3c\xb7\xe9\x84\x27\xe3\x3d\x2c\xab\x3d\x67\x8f\xd0\x0d\xf9\x1a\x84\x60\x35\x93\x86\x71\x2b\x94\xbc\x06\xcf\x9b\x46\xc4\x8f\x09\x2c\xa6\xf7\xe4\xc1\x07\x99\xbe\xd1\x0d\x93\x6c\x85\x1b\x94\xf6\x7a\x17\x8e\xfd\x9b\x19\xd9\x8b\xfe\x62\x50\xbf\x08\x8e\x06\x46\x1e\xc0\xf6\x86\x8a\x04\x16\x24\x0a\xfc\x19\xfc\x1e\x05\x0f\x7e\xf4\x04\xdf\xc8\xd3\xc4\x03\x90\x6c\x83\xf0\xa7\x1f\x4d\xef\xfd\x68\xf4\xdb\x97\xcb\x31\x84\xf3\x18\xc2\xc7\xd9\x0c\x1e\xc3\xe0\x8f\x47\x52\x80\x50\x26\x99\x12\xd2\xd2\x5c\xa7\xc7\xc1\x05\x2a\x51\x3c\x2f\x2a\x60\xc5\x22\xfa\xa1\x2c\x13\xd4\x64\xc8\xc5\x52\xf0\x01\x70\x21\x2d\x6a\xc9\x52\xf8\xae\x54\x8a\x4c\x36\x35\xde\x92\x3b\xff\x71\x16\xc3\x92\xa5\x06\x0b\xa8\x45\xfe\x4c\x4d\x9e\x65\x4a\x5b\xca\x95\xb4\x8c\x5b\x77\xe2\x2c\xff\x9e\x0a\x3e\x1c\xcf\x35\x32\x8b\x09\x65\x16\xac\xd8\xa0\xb1\x6c\x93\xc1\xab\xb0\xcf\xe5\x2d\xfc\x50\x12\x3b\xf8\x3c\x4b\x06\xe3\xc7\xd7\x5e\x3f\xb1\x8c\x73\x34\x86\x6a\xfc\x27\x47\x63\x0d\x15\x92\xab\x8d\x90\xab\x92\xe8\x6e\x70\x17\x73\x13\xdf\x52\x46\x10\xc6\x9d\xaa\x95\x5e\x31\x29\x7e\x54\xc4\xb8\x05\xd2\x6a\xe0\x1a\xdf\xe9\x52\xc8\x15\xea\x4c\x0b\xd9\x34\xf0\xea\xaa\x0b\x37\x96\xd9\x26\x5b\x91\x6c\x7a\x4f\xa6\xdf\x60\x54\x05\x82\x10\x46\x17\x1a\x39\x8a\x17\x4c\x2e\x26\x70\xc1\xb2\x4c\xab\xed\x6f\x8d\x7f\x23\xb7\xf5\xef\x17\xb5\xc6\xe4\x62\x3c\x3e\x94\x42\x2b\xc1\x07\x33\x56\xe0\xa7\xf3\x70\x11\x47\x7e\xd1\xc2\xe5\x9a\xba\x28\xa2\xdb\x6e\x7b\x00\x00\x77\xf3\x88\x04\x5f\xc3\x82\x08\x18\x35\x34\x8c\xcb\x60\x44\xee\x48\x44\xc2\x29\x59\xb8\xe7\xba\xf5\x0c\x94\x0f\xcd\x43\xb8\x25\x33\x12\x13\x88\xc8\x22\x8e\x82\x69\xec\x8d\x1b\x97\x08\xc2\x5b\xf2\xd7\x90\xea\x8a\x3c\x83\x35\xd7\x2a\x62\xa0\x70\x57\x9a\x49\x6b\xda\x6a\x2d\xff\x71\x4b\xb4\x47\xd3\xfb\x92\x3d\x97\xe6\xad\x80\xfa\xf1\x6d\x55\xf5\xf2\x5d\xad\xac\x29\xb0\x5b\xf8\x21\xe9\xee\x85\x9d\x12\x81\x9b\x8f\x53\x39\xcf\xd3\x48\xff\x8a\xdc\x42\xa9\x39\xee\xa9\xe6\x5c\x9b\x53\xb9\x5d\x29\x87\xcd\xd5\x31\xb7\x86\xdc\x5e\xf6\xeb\xe5\x9e\x97\xd5\x8a\xee\x77\xbc\x21\x16\xb6\x55\x63\xe1\x54\x4b\x26\xd2\xda\xb3\x7e\xd2\xd7\x76\x59\xcf\xf7\x5d\x8d\x4b\xd4\x28\x2b\xbb\x6f\xae\xf6\x14\xed\xde\x73\x59\xee\xf8\x5a\x2b\x4d\xb9\x4a\x10\xe0\x9c\x07\x58\x6e\x3a\x4f\x34\x7d\xba\x1c\x37\x30\x63\x19\x5f\x53\xab\x19\xdf\x82\x6f\x9e\x62\xe2\x17\xf1\x54\xf1\x75\xb7\xc6\xf2\xca\x73\x91\xb4\xbe\x47\x4a\x14\xbe\x65\x42\xa3\x29\x46\x78\x7b\xb9\x26\x79\x02\xf0\xc1\x3b\x81\x07\x70\x30\x4c\x22\x79\xa3\x1d\xf5\x0d\x77\xd9\x46\xf2\x07\xf2\x9d\x74\x64\x3a\x74\x98\x32\xad\xd4\xb2\x63\xbd\xe5\x3f\x83\xad\xb7\x3d\x67\x85\x06\x3e\x91\xf7\x56\x4b\x6b\x2a\x3c\xd3\x7b\x5b\x2b\x3b\xd7\x7b\x1b\x96\x4e\xe5\x3c\xcf\x7b\xfb\x57\xe4\x96\x4f\x4d\x72\x4f\x35\xa7\xe4\x22\xe4\x2b\x7b\x37\x30\x82\xf2\xa3\xfb\x95\xbd\xff\xe4\xc1\xc1\x60\xba\xa4\x2c\x49\x34\x1a\xe3\x36\xde\x17\xd4\x46\x28\xe9\x06\x3c\x2b\x63\xfb\x5d\x59\x64\x07\xaf\xb9\xfa\xf2\x89\xbe\xdd\xab\xc6\xd2\xce\xd9\x6c\xbf\xc1\xc7\xf6\xa2\xe3\xd1\x16\x15\x30\xaa\xd3\x4c\x5a\x0f\x8d\x0f\xc7\xa5\x82\xd5\x05\x54\xb7\x87\xd3\x51\x27\x3b\x35\x0b\xb5\x50\xba\xf8\x43\x9d\x9f\xac\xe3\xa3\x3e\x8c\xfb\xe6\xee\xc4\xf1\xd9\x5a\x21\x57\xf5\xf1\xb9\xba\x71\x8f\xc1\x8e\xc4\x72\x6b\x3c\xe6\x5a\x42\x1a\xb1\x7a\xb6\xb4\x38\xf3\xf6\x9f\x72\xf5\x86\x95\xfd\x40\xdd\x0f\xfc\x7f\xcf\x34\x7b\x7b\x58\xdd\x90\xff\x5a\x3f\xc7\x0c\xb1\xe7\xd5\x47\x6c\xb0\x61\x6e\x97\xb5\x24\x7b\xfe\xf0\x10\xc4\xd7\xde\xbf\x01\x00\x00\xff\xff\x28\x2e\x3c\x2a\x68\x11\x00\x00")

func _001_initial_schemaUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__001_initial_schemaUpSql,
		"001_initial_schema.up.sql",
	)
}

func _001_initial_schemaUpSql() (*asset, error) {
	bytes, err := _001_initial_schemaUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "001_initial_schema.up.sql", size: 4456, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __002_authorizationDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\x53\x28\x29\x4a\xcc\x2b\x4e\x4c\x2e\xc9\xcc\xcf\xb3\x56\xe0\xe2\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\xcb\xa9\x88\xcf\x4d\xcc\x4b\x4c\x4f\xcd\x4d\xcd\x2b\xd1\x2b\x48\x2d\xca\xcd\x2c\x2e\xce\xcc\xcf\x2b\x8e\x2f\xca\xcf\x49\x2d\xb6\xc6\xa3\xb8\xb4\x38\xb5\x88\x08\x65\x48\x66\x12\x34\x0d\x9f\x02\xa8\x45\x5c\xce\xfe\xbe\xbe\x9e\x21\xd6\x5c\x80\x00\x00\x00\xff\xff\x08\xc2\x5e\x93\xdb\x00\x00\x00")

func _002_authorizationDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__002_authorizationDownSql,
		"002_authorization.down.sql",
	)
}

func _002_authorizationDownSql() (*asset, error) {
	bytes, err := _002_authorizationDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "002_authorization.down.sql", size: 219, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __002_authorizationUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\xcf\x6f\x9b\x30\x14\xbe\xf3\x57\x7c\xb7\x80\x64\x4d\xd3\xa4\x9d\x72\x72\xe9\x4b\x67\x0d\x4c\x67\x4c\xa7\x9e\x90\x55\xbc\x0d\x2d\x40\x04\xae\x36\xed\xaf\x9f\xa0\x99\x6a\x46\x92\xa6\x87\x48\xd3\x4e\xd8\xbc\x9f\xdf\xfb\x3e\xbf\x2b\xba\x11\x12\xae\x37\xed\x60\x1e\x5c\xdd\xb5\x6b\x04\x41\xac\x88\x6b\x82\xe6\x57\x09\xa1\xdd\xfe\x2c\x1b\xd3\x9a\xaf\xb6\xb1\xad\x7b\xb3\xb3\x7d\x53\x0f\x43\xdd\xb5\x03\xc2\x00\x78\xbe\x97\x75\x85\x9c\x94\xe0\x09\x6e\x95\x48\xb9\xba\xc7\x47\xba\x67\x01\xd0\x9a\xc6\xe2\x8e\xab\xf8\x03\x57\xe1\xbb\xf7\x6f\x23\xc8\x4c\x43\x16\x49\x32\x5a\x1f\xba\xea\x88\x15\x85\x14\x9f\x0a\x9a\x9c\x7a\x6b\x9c\xad\x4a\xe3\xe0\xea\xc6\x0e\xce\x34\x3b\xfc\xa8\xdd\xb7\xe9\x8a\x5f\x5d\x6b\x67\x49\x1f\x77\xd5\xd9\xfe\x41\xb4\x3e\x8d\xf9\x71\xb0\xfd\x13\xda\xf1\x74\x1c\xa7\x6d\x4c\xbd\xfd\xb7\xa1\xf4\xdd\xd6\x3e\x41\x19\x4f\xff\x2f\x65\x9e\x4c\xcb\xa3\x98\xfd\xea\x07\x75\xec\x3b\x78\x03\x42\xb8\x4f\xc4\xe6\x61\xd1\xa5\x61\xb3\x20\x00\xe2\x4c\xe6\x5a\x71\x21\x35\xbe\x7c\x9f\xc0\x05\x00\xb0\xc9\x14\x89\x1b\x39\xeb\x2f\x9a\x2c\x8a\x36\xa4\x48\xc6\x94\x1f\x54\xc3\xdc\x39\x93\xb8\xa6\x84\x34\x41\x51\xae\x95\x88\x35\x5b\xd4\x7c\x06\xbd\xac\x3c\x1f\xc8\x0b\xf5\x3d\x96\x0e\x05\x2e\x7b\x39\xef\xa9\x7a\x8c\xff\xf5\x60\xfd\xc1\x9f\x10\xc3\x8c\xeb\x7d\x0a\xf6\x27\xe0\xd5\x2c\xe3\x9a\x36\xbc\x48\x34\xe2\x42\x29\x92\xba\xd4\x22\xa5\x5c\xf3\xf4\xf6\xb5\xfc\x9f\xca\xb4\x60\x69\xec\x7b\xc9\xcf\x1e\xcd\x4b\xcc\x4c\x73\x9c\x3b\x9f\xa3\x8c\xcb\xab\x71\x52\x80\x90\x39\x29\x0d\x21\x75\x76\x64\xc1\x8d\xfb\x8b\x4d\x7b\x8a\x79\x5c\x31\x6f\xda\x11\xee\x78\x52\x50\x8e\x70\xc5\xab\xa6\x6e\xeb\xc1\xf5\xc6\x75\xfd\x8a\x61\x65\xc6\x1f\x2b\x06\x99\x7d\x0e\xa3\xfd\x67\x52\x5e\x96\xa6\x42\xaf\x83\xdf\x01\x00\x00\xff\xff\x7d\x69\x12\xb3\x36\x07\x00\x00")

func _002_authorizationUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__002_authorizationUpSql,
		"002_authorization.up.sql",
	)
}

func _002_authorizationUpSql() (*asset, error) {
	bytes, err := _002_authorizationUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "002_authorization.up.sql", size: 1846, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __003_audit_logDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\xcb\xa9\x88\xcf\x4d\xcc\x4b\x4c\x4f\xcd\x4d\xcd\x2b\xd1\x4b\x2c\x4d\xc9\x2c\x89\xcf\xc9\x4f\xb7\xe6\xe2\x02\x04\x00\x00\xff\xff\xd8\x89\xd4\x22\x26\x00\x00\x00")

func _003_audit_logDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__003_audit_logDownSql,
		"003_audit_log.down.sql",
	)
}

func _003_audit_logDownSql() (*asset, error) {
	bytes, err := _003_audit_logDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "003_audit_log.down.sql", size: 38, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __003_audit_logUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x6f\xd3\x40\x10\x85\xcf\xdd\x5f\x31\xb7\x26\x12\x42\x08\x89\x53\xc4\x61\xeb\x58\xd4\xd4\xd8\x68\x63\x10\x3d\xad\x46\xeb\xe9\x76\xa9\xbd\x1b\xbc\xe3\x52\xfa\xeb\x91\xd3\x34\x8a\x55\xc7\x85\xe3\x78\xbe\xf7\x66\x3d\x6f\x12\x95\xca\x2a\x85\x4a\x5e\xe4\x29\xf8\xe6\x41\xb7\xe8\xd1\x52\x4b\x9e\xdf\x62\x5f\x3b\xd6\x4d\xb0\x71\x21\x00\x0e\x95\x76\x35\x5c\x64\x9f\x36\xa9\xca\x64\x0e\x5f\x55\xf6\x45\xaa\x6b\xb8\x4a\xaf\xdf\x08\x80\x3e\x52\xa7\x3d\xb6\x04\xdf\xa5\x4a\x2e\xa5\x5a\xbc\xff\xf0\x6e\x39\x74\xd0\xb0\x0b\x5e\xf3\x9f\xed\xb8\x07\x45\x59\x41\xf1\x2d\xcf\x0f\x72\xb4\xe4\xf9\x34\x13\x3a\x8b\xde\x3d\xe2\x60\xf7\x62\x4a\xa4\xee\xde\x99\x97\xd3\x6b\x64\x84\xcf\x9b\xb2\x18\x0a\xd3\x11\x32\xd5\x1a\x19\xd8\xb5\x14\x19\xdb\x2d\xfc\x76\x7c\xbb\x2b\xe1\x31\x78\x3a\x4c\x14\xcb\x95\x10\xfb\x2d\x65\xc5\x3a\xfd\x31\x5a\xc4\x83\x1e\xbd\xa6\x2c\x4e\xef\x10\x16\xc7\xe8\x72\x35\x67\xfa\xfc\x17\xf3\x7e\x7b\x6a\x78\xa0\xcc\xab\x54\xbd\x96\x22\x08\xb9\x5e\x43\x52\x16\x9b\x4a\xc9\xac\xa8\x8e\x86\x9a\x3b\x7d\x94\x8f\x48\x2e\xd3\xe4\x0a\x16\xe2\x6c\x94\xda\x47\x38\x6f\x82\x75\x5e\xc7\xde\x18\x8a\xf1\x5c\x9c\x95\x6a\x9a\xb8\x41\xd7\x9c\x6a\x87\x9e\x67\x1d\x9c\x37\xa1\x75\xde\x6a\xdc\x31\xba\xa3\x5f\x3d\x45\xde\x95\x5b\xfe\x2f\x49\x47\x3f\xc9\x4c\x4b\xf6\xa4\xed\xd0\x0f\xdc\x7d\xb8\xa3\x49\x2e\xf4\x6c\xc3\x84\xf5\xd3\x0d\x4d\x4a\xf6\xb9\xfc\x0b\xd2\x6f\xeb\xd7\x90\x9a\x1a\x3a\x81\x1c\x1f\x94\x8e\xc4\xec\xbc\x8d\x73\x9e\x23\x81\xf3\xd1\xd9\x5b\xd6\x26\xf8\x1b\x67\xfb\xee\xe9\xeb\xb3\x7a\xb9\x12\x7f\x03\x00\x00\xff\xff\xde\x89\x14\x8c\x1c\x04\x00\x00")

func _003_audit_logUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__003_audit_logUpSql,
		"003_audit_log.up.sql",
	)
}

func _003_audit_logUpSql() (*asset, error) {
	bytes, err := _003_audit_logUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "003_audit_log.up.sql", size: 1052, mode: os.FileMode(420), modTime: time.Unix(1617967319, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __004_financeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcb\x51\x0a\x02\x21\x10\x00\xd0\x7f\x4f\x31\x27\xe8\x02\x7e\xed\x6e\x12\x0b\xba\xc6\x62\xdf\x22\x32\x94\xa0\x23\x39\x53\xd4\xed\xfb\xea\x00\x75\x80\x37\x9b\xd3\xba\x81\x8c\x44\x9c\xb2\x94\x4e\x5a\xa9\xc9\x06\xb3\x43\x98\x66\x6b\x80\xea\x2b\xb6\x44\xe9\x8a\x0d\x49\x0e\x8c\xe3\x59\x32\x32\x1c\x77\x7f\x86\xc5\xdb\x8b\xdb\xa0\x13\x46\x29\x0d\x63\xee\x2c\xac\x7f\xf6\xad\x93\xdc\xea\xfb\x5f\x3e\xf0\xfe\x40\x96\x2f\x57\x8b\x77\x6e\x0d\x5a\x7d\x02\x00\x00\xff\xff\xf4\x75\x1f\x5c\xdb\x00\x00\x00")

func _004_financeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__004_financeDownSql,
		"004_finance.down.sql",
	)
}

func _004_financeDownSql() (*asset, error) {
	bytes, err := _004_financeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "004_finance.down.sql", size: 219, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __004_financeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcc\x51\x0a\xc2\x30\x0c\x00\xd0\xff\x9e\x22\x27\x10\xff\xf7\xd5\x6d\x55\x06\x59\x07\x92\x7d\x8f\x32\x82\x0e\xd6\x14\x9b\x28\x7a\x7b\x8f\x20\x82\x17\x78\x6d\x38\x0f\x11\xac\x26\xd1\xb4\xda\x56\xa4\x71\xce\x23\x85\x0b\x90\x6f\x31\x80\xec\xaf\x25\x27\x49\x57\xce\x2c\x76\x50\xae\xcf\x6d\x65\x05\xdf\xf7\xd0\x4d\x38\x8f\x11\x8a\xf0\x62\x5b\xe6\x65\x2d\x6a\x0a\x43\x24\x88\x13\x41\x9c\x11\xa1\x0f\x27\x3f\x23\xc1\xb1\xf9\x55\xcd\x45\xec\xb6\xbf\xff\x8b\x56\xbe\x3f\x58\xed\x0b\xea\xba\x69\x1c\x07\x6a\xdc\x27\x00\x00\xff\xff\x73\x3b\x4a\xc9\x1d\x01\x00\x00")

func _004_financeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__004_financeUpSql,
		"004_finance.up.sql",
	)
}

func _004_financeUpSql() (*asset, error) {
	bytes, err := _004_financeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "004_finance.up.sql", size: 285, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __005_public_keyDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcc\xd1\x09\xc3\x20\x10\x00\xd0\x7f\xa7\xb8\x09\xba\x80\x5f\x49\x2a\x25\xa0\xb1\x04\xfb\x2d\x56\x0e\x91\xc6\x33\x8d\x27\xb4\xdb\x77\x84\x92\x05\xde\xa8\x6e\xf3\x02\x7c\x04\x6a\x21\x72\xae\x24\x85\x18\xb4\x53\x2b\xb8\x61\xd4\x0a\x68\xfb\xf8\x12\x28\x24\x2c\x48\x7c\x09\x31\x62\x6b\xfe\xc0\x77\xc7\xc6\xcd\x67\x8a\xb5\x64\x4a\x70\x5d\xed\x1d\x26\xab\x1f\x66\x81\xbd\x3f\xb7\x1c\xfd\x0b\xbf\x7e\xc7\x22\xcf\x78\xb5\x73\xaa\xff\x3c\x31\x59\x63\x66\x27\xc5\x2f\x00\x00\xff\xff\xf6\xef\xf9\x22\xbd\x00\x00\x00")

func _005_public_keyDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__005_public_keyDownSql,
		"005_public_key.down.sql",
	)
}

func _005_public_keyDownSql() (*asset, error) {
	bytes, err := _005_public_keyDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "005_public_key.down.sql", size: 189, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __005_public_keyUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcd\x31\x0a\xc2\x30\x14\x00\xd0\x3d\xa7\xf8\xa3\x2e\xe2\x20\x82\x74\x4a\xdb\xa8\x85\xb4\x85\x92\xba\x86\x18\x3e\x25\xd8\xfc\xd4\x26\x01\xbd\xbd\xe0\x0d\xc4\xf1\x4d\xaf\x14\x97\xa6\x83\xb4\x1a\x8a\xc6\x26\x17\xa8\x60\x8c\x4b\x25\x06\x50\xbc\x94\x02\x68\x7e\x69\x6f\xc8\x4c\xe8\x91\xd2\xce\x58\x8b\x31\xea\x15\x9f\x19\x63\x8a\xda\x91\x0d\xde\xd1\x04\xbc\xae\xa1\xea\xe5\xd8\x76\xb0\xe4\xfb\xec\xac\x7e\xe0\x5b\x2f\xe8\xe1\xc6\x87\xea\xca\x87\xcd\x61\x7f\x3a\x6e\xa1\x1b\xa5\x84\x5a\x9c\xf9\x28\xd5\x17\xc5\x2f\x5d\xc8\x69\x0a\x7f\x76\xac\xea\xdb\xb6\x51\x05\xfb\x04\x00\x00\xff\xff\x59\xbf\x82\x84\xfb\x00\x00\x00")

func _005_public_keyUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__005_public_keyUpSql,
		"005_public_key.up.sql",
	)
}

func _005_public_keyUpSql() (*asset, error) {
	bytes, err := _005_public_keyUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "005_public_key.up.sql", size: 251, mode: os.FileMode(420), modTime: time.Unix(1615797944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __006_orderDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\x53\x28\x29\x4a\xcc\x2b\x4e\x4c\x2e\xc9\xcc\xcf\xb3\xe6\xe2\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\xcb\xa9\x88\xcf\x4d\xcc\x4b\x4c\x4f\xcd\x4d\xcd\x2b\xd1\xcb\x2f\x4a\x49\x2d\x2a\xb6\x26\xa8\x22\xbe\x38\xb5\xa8\x2c\x33\x39\xb5\xd8\x9a\x8b\xcb\xd9\xdf\xd7\xd7\x33\xc4\x9a\x0b\x10\x00\x00\xff\xff\xfa\xe2\x2f\xcf\x6a\x00\x00\x00")

func _006_orderDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__006_orderDownSql,
		"006_order.down.sql",
	)
}

func _006_orderDownSql() (*asset, error) {
	bytes, err := _006_orderDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "006_order.down.sql", size: 106, mode: os.FileMode(436), modTime: time.Unix(1617885998, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __006_orderUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xd1\x6e\xda\x30\x14\x86\xef\xfd\x14\xe7\x32\x41\xd5\x4a\xab\x69\xd2\xc4\x55\x48\x5d\x66\x2d\x38\x9d\x09\xd5\x7a\x65\x79\xf1\x01\xac\x26\x4e\xe4\x98\xae\xdd\x1b\xed\x35\xf6\x64\x13\x29\x10\xda\x85\x09\x7c\x67\xf9\xff\xfe\x5f\x3e\xff\xb9\x1c\x10\x18\x40\x5c\xd5\x2f\xce\x2c\x57\x1e\xfe\xfc\x86\x7b\x3e\x01\x81\xaa\x30\x8d\xf2\x06\xe1\x7a\x78\x7d\xb5\xd1\x24\x26\x47\xdb\xa0\x86\xb5\xd5\xe8\xc0\xaf\x10\xe8\xfc\x2e\x21\x30\xb8\x24\x64\x4c\x27\x8c\x83\x77\xca\x36\x2a\xf7\xa6\xb2\x23\x42\x62\x41\xa3\x8c\x42\x16\x8d\x13\x0a\xb6\x78\x96\xa5\xb2\x6a\x89\x25\x5a\xff\xa1\x72\x1a\x5d\x43\x02\x02\x00\xd0\x5e\xa4\xd1\xb0\x3d\x63\x36\x99\x51\xc1\xa2\x04\xee\x04\x9b\x46\xe2\x01\xbe\xd2\x87\x8b\x56\xaa\xb1\xc9\x9d\xa9\x37\x09\xad\xf4\x3e\x12\xf1\x97\x48\x04\x57\xc3\x61\x08\x87\x87\xa7\x19\xf0\x79\x92\xbc\x62\xf5\xfa\x47\x61\x72\xf9\x88\x2f\xb2\xc6\xb2\xc3\x3e\x0e\x3f\x7f\x0a\x8f\x63\x1a\x0b\x5c\x2a\x8f\xb8\x7d\x3d\x31\xcd\xe1\x02\x1d\xda\xfc\x4c\xec\x49\x15\x46\xcb\x85\xab\xca\xd7\x57\x6f\x4a\x6c\xbc\x2a\x6b\xf8\x69\xfc\xaa\xbd\xc2\xaf\xca\x62\x2f\xb6\xb6\xde\x14\xe7\x60\xb9\x43\xe5\x51\x4b\xe5\x4f\x4c\x23\x61\xd7\x29\xe3\x37\xf4\x3b\x18\xfd\x2c\xbb\x11\xa5\xbc\xbf\x64\x08\xf6\x9a\x70\xb4\x33\x98\x73\xf6\x6d\x7e\xe8\xd3\xcd\xec\xb8\xcf\x5e\x13\x9e\xb4\x5d\xb2\x41\xf7\x64\x72\xec\x5d\xb3\x6e\xc7\xfe\xe9\x61\x8b\x49\xab\x4a\x7c\xdb\x5d\xa7\x6b\x85\x71\xca\x67\x99\x88\x18\xcf\x60\xf1\x28\x5b\x7b\xb2\xab\xf6\x36\x15\x94\x4d\xf8\x66\x73\x21\xd8\x25\x87\xe4\xb0\x7d\x41\x6f\xa9\xa0\x3c\xa6\xb3\x63\x1f\xee\xe7\x52\x0e\x37\x34\xa1\x19\x05\x41\x67\x99\x60\x71\xd6\x5f\xcd\x9b\x7f\x1c\x9b\xea\x7e\x48\x10\x1c\xea\xff\xd3\xd4\x7b\xee\x04\xe7\xdd\x3f\x2e\xe0\x5d\x06\x89\xd3\xe9\x94\x65\x23\xf2\x37\x00\x00\xff\xff\x5d\xda\x08\xe5\x87\x04\x00\x00")

func _006_orderUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__006_orderUpSql,
		"006_order.up.sql",
	)
}

func _006_orderUpSql() (*asset, error) {
	bytes, err := _006_orderUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "006_order.up.sql", size: 1159, mode: os.FileMode(436), modTime: time.Unix(1617889305, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __007_audit_log_services_delegatorDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x6f\xe2\x30\x10\x85\xcf\xeb\x5f\x31\x37\x40\x5a\xad\x56\x95\x7a\xca\xc9\x24\x69\x89\x1a\x9c\x2a\x98\x5e\x2d\xcb\x0c\xae\x4b\xb0\x69\xec\xa0\xb6\xbf\xbe\x4a\x4a\x21\xb4\x54\x94\xdc\xe6\x7b\xef\x4d\x46\xf2\x1b\xa7\xb7\x19\x03\x5e\x52\x36\xa3\x31\xcf\x0a\x16\x11\x42\x73\x9e\x96\xc0\xe9\x38\x4f\xc1\x56\x2f\x62\x2d\xad\xd4\xb8\x46\x1b\xfe\xc9\x66\x61\x82\xa8\x9c\xf6\x90\x94\xc5\x3d\xc4\x45\x3e\x9f\x32\x58\x60\x85\x5a\x06\xc4\xe8\x97\x61\x9a\x24\x9f\x59\x57\x6b\x69\xcd\x9b\x0c\xc6\x59\x78\xa0\x65\x3c\xa1\xe5\xf0\xea\xfa\xff\x08\xd8\x3c\xcf\x21\x49\x6f\xe8\x3c\xe7\xdd\x70\xe9\x6d\x6c\xc6\x4b\x9a\x31\x0e\x7b\x49\xa8\x95\x90\xaa\xfd\x95\x08\xaf\x9b\x0b\xcf\x3d\xbb\x8e\xc4\x93\x34\xbe\x83\x21\xf9\x03\x3d\x0a\x19\x83\x21\x81\xf6\x1b\x54\x4e\x1b\x2b\x7c\xa3\x14\x7a\x3f\xf8\x7b\x44\x97\xd2\x54\x7d\xe4\x9a\xf0\xcd\x69\xac\x72\x6b\x63\xb5\x90\x1d\x17\x35\x3e\x37\xe8\x43\x37\x6e\xc2\x59\x5b\x8d\x4f\xa8\x0e\xb6\x9d\xaa\x6b\x69\x5b\x6d\xeb\x56\xb8\xd7\x5c\x13\xb4\x3b\xb1\x42\xd5\x28\xc3\xc1\xe6\xb1\xde\x1a\x85\x3f\xe1\x66\xb3\x38\x85\xdb\xbe\xf4\x70\xbf\x02\xc2\x63\x08\xc6\x6a\xff\x35\x7b\x64\x32\xd6\x1b\xfd\x18\x84\x72\x76\x69\x74\x53\x7f\xd0\x5e\x62\x44\x46\x11\x21\x5d\x0f\xce\x3c\xae\xd8\x1d\xe5\x23\x42\xe2\x62\x3a\xcd\x78\x44\xde\x03\x00\x00\xff\xff\xaa\x0a\x59\x42\x16\x03\x00\x00")

func _007_audit_log_services_delegatorDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__007_audit_log_services_delegatorDownSql,
		"007_audit_log_services_delegator.down.sql",
	)
}

func _007_audit_log_services_delegatorDownSql() (*asset, error) {
	bytes, err := _007_audit_log_services_delegatorDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "007_audit_log_services_delegator.down.sql", size: 790, mode: os.FileMode(436), modTime: time.Unix(1617970033, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __007_audit_log_services_delegatorUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5d\x6f\xda\x30\x14\x7d\x9e\x7f\xc5\x7d\x2b\x48\xd5\x34\x4d\xda\x13\x4f\x26\x18\x6a\x35\x38\x95\x31\x93\xfa\x64\x59\xc9\xc5\xf5\x00\x9b\xc5\x4e\xb7\xf5\xd7\x4f\x09\xb4\x84\x96\x95\x2e\x6f\xf7\x9c\x73\x4f\xee\x87\xef\x98\xcd\xb8\x00\x25\xa9\x58\xd0\x4c\xf1\x42\x8c\x08\xa1\xb9\x62\x12\x14\x1d\xe7\x0c\xfc\xe6\xb7\xde\x1a\x6f\x2c\x6e\xd1\xa7\xcf\xa6\xa9\x5c\xd2\x9b\x60\x23\xd0\xc9\x04\xb2\x22\x5f\xce\x05\x54\xb8\x41\x6b\x12\x22\x7c\xa7\x32\xbb\xa1\x72\xf0\xf5\xdb\x97\x21\x88\x65\x9e\xc3\x84\x4d\xe9\x32\x57\x5d\x30\xfa\xa0\xf5\x44\x16\x77\xcf\xde\xa1\xb6\xc6\xbb\x27\x93\x5c\xf0\xff\x99\x2f\x16\x4a\x52\x2e\x14\xbc\x50\xba\x5c\x6b\x53\xb6\x56\x3a\xfd\xd9\xe1\x47\xfd\xf6\xad\x5e\xb4\x23\xd9\x0d\xcb\x6e\x61\x40\x3e\x41\x0f\x05\x2e\x60\x40\xa0\xfd\xae\x36\xc1\x3a\xaf\x63\x53\x96\x18\xe3\xd5\xf5\x09\xba\x32\x6e\xd3\x87\x42\x93\xde\x28\x9d\x2f\xc3\xd6\x79\xab\x4d\x87\xeb\x1a\x7f\x36\x18\x53\x17\xee\xd2\x45\x59\x8d\x3f\xb0\x3c\xca\x0e\xac\xad\x8d\x6f\xb9\xc7\xb0\xc6\x17\x2e\x34\xc9\x86\x33\x16\x65\x8d\x26\x1d\x65\x11\xeb\x47\x57\xe2\xbf\xe0\x66\x57\x9d\x83\xdb\xf7\xd2\x83\x43\x5d\x61\xfd\xda\xa2\xbf\x77\x1d\x31\x25\xe7\x6d\x7c\x6d\x78\x22\x72\x3e\x3a\xfb\x90\x74\x19\xfc\xca\xd9\xa6\xde\xa3\xbd\x8c\x21\x19\x8e\x08\xc9\x24\xa3\x8a\x5d\xda\xb9\x3e\xd4\x1a\xdb\xd5\x1d\x17\xfe\xdc\x81\xab\x60\xcc\x67\x0b\x26\x39\xcd\xe1\x4e\xf2\x39\x95\xf7\x70\xcb\xee\xaf\x4f\xd4\xef\xa9\xfa\xa5\x9f\x9c\x4d\x4b\x1e\x7e\xf3\x06\xdf\xcf\xa8\xd2\x26\x41\x72\x5b\x8c\xc9\x6c\x77\xf0\xcb\xa5\x87\x2e\x84\xa7\xe0\x11\x44\xb1\x3f\xb6\x6b\x42\xa0\xff\x6a\x57\x6b\x7d\x6c\xaf\x9b\xdf\xb4\x90\x8c\xcf\x44\x5b\x11\x0c\xfa\x55\x0f\x3b\x5a\xb2\x29\x93\x4c\x64\x6c\xf1\xce\x69\x9c\xc9\x2b\x04\x4c\x58\xce\x14\x03\xc9\x16\x4a\xf2\x4c\xed\xe7\x5e\xcc\xe7\x5c\x8d\xc8\xdf\x00\x00\x00\xff\xff\xb4\x6b\xf8\x90\x72\x04\x00\x00")

func _007_audit_log_services_delegatorUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__007_audit_log_services_delegatorUpSql,
		"007_audit_log_services_delegator.up.sql",
	)
}

func _007_audit_log_services_delegatorUpSql() (*asset, error) {
	bytes, err := _007_audit_log_services_delegatorUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "007_audit_log_services_delegator.up.sql", size: 1138, mode: os.FileMode(436), modTime: time.Unix(1617970021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"001_initial_schema.down.sql":               _001_initial_schemaDownSql,
	"001_initial_schema.up.sql":                 _001_initial_schemaUpSql,
	"002_authorization.down.sql":                _002_authorizationDownSql,
	"002_authorization.up.sql":                  _002_authorizationUpSql,
	"003_audit_log.down.sql":                    _003_audit_logDownSql,
	"003_audit_log.up.sql":                      _003_audit_logUpSql,
	"004_finance.down.sql":                      _004_financeDownSql,
	"004_finance.up.sql":                        _004_financeUpSql,
	"005_public_key.down.sql":                   _005_public_keyDownSql,
	"005_public_key.up.sql":                     _005_public_keyUpSql,
	"006_order.down.sql":                        _006_orderDownSql,
	"006_order.up.sql":                          _006_orderUpSql,
	"007_audit_log_services_delegator.down.sql": _007_audit_log_services_delegatorDownSql,
	"007_audit_log_services_delegator.up.sql":   _007_audit_log_services_delegatorUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"001_initial_schema.down.sql":               &bintree{_001_initial_schemaDownSql, map[string]*bintree{}},
	"001_initial_schema.up.sql":                 &bintree{_001_initial_schemaUpSql, map[string]*bintree{}},
	"002_authorization.down.sql":                &bintree{_002_authorizationDownSql, map[string]*bintree{}},
	"002_authorization.up.sql":                  &bintree{_002_authorizationUpSql, map[string]*bintree{}},
	"003_audit_log.down.sql":                    &bintree{_003_audit_logDownSql, map[string]*bintree{}},
	"003_audit_log.up.sql":                      &bintree{_003_audit_logUpSql, map[string]*bintree{}},
	"004_finance.down.sql":                      &bintree{_004_financeDownSql, map[string]*bintree{}},
	"004_finance.up.sql":                        &bintree{_004_financeUpSql, map[string]*bintree{}},
	"005_public_key.down.sql":                   &bintree{_005_public_keyDownSql, map[string]*bintree{}},
	"005_public_key.up.sql":                     &bintree{_005_public_keyUpSql, map[string]*bintree{}},
	"006_order.down.sql":                        &bintree{_006_orderDownSql, map[string]*bintree{}},
	"006_order.up.sql":                          &bintree{_006_orderUpSql, map[string]*bintree{}},
	"007_audit_log_services_delegator.down.sql": &bintree{_007_audit_log_services_delegatorDownSql, map[string]*bintree{}},
	"007_audit_log_services_delegator.up.sql":   &bintree{_007_audit_log_services_delegatorUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
