// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: directory.proto

package directory

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DirectoryService_Status int32

const (
	DirectoryService_unknown  DirectoryService_Status = 0
	DirectoryService_up       DirectoryService_Status = 1
	DirectoryService_down     DirectoryService_Status = 2
	DirectoryService_degraded DirectoryService_Status = 3
)

var DirectoryService_Status_name = map[int32]string{
	0: "unknown",
	1: "up",
	2: "down",
	3: "degraded",
}

var DirectoryService_Status_value = map[string]int32{
	"unknown":  0,
	"up":       1,
	"down":     2,
	"degraded": 3,
}

func (x DirectoryService_Status) String() string {
	return proto.EnumName(DirectoryService_Status_name, int32(x))
}

func (DirectoryService_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{3, 0}
}

type DirectoryService_AccessRequest_Status int32

const (
	DirectoryService_AccessRequest_FAILED  DirectoryService_AccessRequest_Status = 0
	DirectoryService_AccessRequest_CREATED DirectoryService_AccessRequest_Status = 1
	DirectoryService_AccessRequest_SEND    DirectoryService_AccessRequest_Status = 2
)

var DirectoryService_AccessRequest_Status_name = map[int32]string{
	0: "FAILED",
	1: "CREATED",
	2: "SEND",
}

var DirectoryService_AccessRequest_Status_value = map[string]int32{
	"FAILED":  0,
	"CREATED": 1,
	"SEND":    2,
}

func (x DirectoryService_AccessRequest_Status) String() string {
	return proto.EnumName(DirectoryService_AccessRequest_Status_name, int32(x))
}

func (DirectoryService_AccessRequest_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{3, 0, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return m.Size()
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ListServicesResponse struct {
	Services             []*DirectoryService `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListServicesResponse) Reset()         { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()    {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{1}
}
func (m *ListServicesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListServicesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse.Merge(m, src)
}
func (m *ListServicesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse proto.InternalMessageInfo

type GetOrganizationServiceRequest struct {
	OrganizationName     string   `protobuf:"bytes,1,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrganizationServiceRequest) Reset()         { *m = GetOrganizationServiceRequest{} }
func (m *GetOrganizationServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrganizationServiceRequest) ProtoMessage()    {}
func (*GetOrganizationServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{2}
}
func (m *GetOrganizationServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetOrganizationServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetOrganizationServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetOrganizationServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrganizationServiceRequest.Merge(m, src)
}
func (m *GetOrganizationServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetOrganizationServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrganizationServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrganizationServiceRequest proto.InternalMessageInfo

type DirectoryService struct {
	ServiceName          string                          `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	OrganizationName     string                          `protobuf:"bytes,2,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	APISpecificationType string                          `protobuf:"bytes,3,opt,name=apiSpecificationType,proto3" json:"apiSpecificationType,omitempty"`
	Status               DirectoryService_Status         `protobuf:"varint,4,opt,name=status,proto3,enum=directory.DirectoryService_Status" json:"status,omitempty"`
	LatestAccessRequest  *DirectoryService_AccessRequest `protobuf:"bytes,5,opt,name=latestAccessRequest,proto3" json:"latestAccessRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DirectoryService) Reset()         { *m = DirectoryService{} }
func (m *DirectoryService) String() string { return proto.CompactTextString(m) }
func (*DirectoryService) ProtoMessage()    {}
func (*DirectoryService) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{3}
}
func (m *DirectoryService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DirectoryService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DirectoryService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DirectoryService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectoryService.Merge(m, src)
}
func (m *DirectoryService) XXX_Size() int {
	return m.Size()
}
func (m *DirectoryService) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectoryService.DiscardUnknown(m)
}

var xxx_messageInfo_DirectoryService proto.InternalMessageInfo

type DirectoryService_AccessRequest struct {
	Id                   string                                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               DirectoryService_AccessRequest_Status `protobuf:"varint,2,opt,name=status,proto3,enum=directory.DirectoryService_AccessRequest_Status" json:"status,omitempty"`
	CreatedAt            *types.Timestamp                      `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *types.Timestamp                      `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *DirectoryService_AccessRequest) Reset()         { *m = DirectoryService_AccessRequest{} }
func (m *DirectoryService_AccessRequest) String() string { return proto.CompactTextString(m) }
func (*DirectoryService_AccessRequest) ProtoMessage()    {}
func (*DirectoryService_AccessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{3, 0}
}
func (m *DirectoryService_AccessRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DirectoryService_AccessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DirectoryService_AccessRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DirectoryService_AccessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectoryService_AccessRequest.Merge(m, src)
}
func (m *DirectoryService_AccessRequest) XXX_Size() int {
	return m.Size()
}
func (m *DirectoryService_AccessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectoryService_AccessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DirectoryService_AccessRequest proto.InternalMessageInfo

type RequestAccessToServiceRequest struct {
	OrganizationName     string   `protobuf:"bytes,1,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestAccessToServiceRequest) Reset()         { *m = RequestAccessToServiceRequest{} }
func (m *RequestAccessToServiceRequest) String() string { return proto.CompactTextString(m) }
func (*RequestAccessToServiceRequest) ProtoMessage()    {}
func (*RequestAccessToServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_988c26833273fd2e, []int{4}
}
func (m *RequestAccessToServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestAccessToServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestAccessToServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestAccessToServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAccessToServiceRequest.Merge(m, src)
}
func (m *RequestAccessToServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *RequestAccessToServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAccessToServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAccessToServiceRequest proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("directory.DirectoryService_Status", DirectoryService_Status_name, DirectoryService_Status_value)
	proto.RegisterEnum("directory.DirectoryService_AccessRequest_Status", DirectoryService_AccessRequest_Status_name, DirectoryService_AccessRequest_Status_value)
	proto.RegisterType((*Empty)(nil), "directory.Empty")
	proto.RegisterType((*ListServicesResponse)(nil), "directory.ListServicesResponse")
	proto.RegisterType((*GetOrganizationServiceRequest)(nil), "directory.GetOrganizationServiceRequest")
	proto.RegisterType((*DirectoryService)(nil), "directory.DirectoryService")
	proto.RegisterType((*DirectoryService_AccessRequest)(nil), "directory.DirectoryService.AccessRequest")
	proto.RegisterType((*RequestAccessToServiceRequest)(nil), "directory.RequestAccessToServiceRequest")
}

func init() { proto.RegisterFile("directory.proto", fileDescriptor_988c26833273fd2e) }

var fileDescriptor_988c26833273fd2e = []byte{
	// 641 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6f, 0xd3, 0x3e,
	0x18, 0x5e, 0xd2, 0xad, 0x5b, 0xdf, 0xee, 0xb7, 0x5f, 0x64, 0xa6, 0xa9, 0x0a, 0xa3, 0xab, 0x7c,
	0x2a, 0xa0, 0x25, 0x50, 0x84, 0x40, 0xdc, 0x3a, 0x5a, 0x60, 0x62, 0xda, 0x20, 0xed, 0x05, 0xed,
	0xe4, 0x25, 0x5e, 0xb0, 0x58, 0xe3, 0x10, 0x3b, 0x43, 0x63, 0xda, 0x85, 0x23, 0x1c, 0xf9, 0x26,
	0x5c, 0xf8, 0x0a, 0x3b, 0x22, 0x71, 0x47, 0xac, 0xe2, 0x83, 0xa0, 0x3a, 0x69, 0x96, 0xfe, 0xa1,
	0x70, 0x80, 0x9b, 0xfd, 0xf8, 0x79, 0xec, 0xc7, 0x8f, 0xdf, 0xd7, 0xf0, 0xbf, 0xc7, 0x22, 0xea,
	0x4a, 0x1e, 0x9d, 0x58, 0x61, 0xc4, 0x25, 0x47, 0xa5, 0x0c, 0x30, 0xd7, 0x7d, 0xce, 0xfd, 0x23,
	0x6a, 0x93, 0x90, 0xd9, 0x24, 0x08, 0xb8, 0x24, 0x92, 0xf1, 0x40, 0x24, 0x44, 0x73, 0x23, 0x5d,
	0x55, 0xb3, 0x83, 0xf8, 0xd0, 0x96, 0xac, 0x47, 0x85, 0x24, 0xbd, 0x30, 0x25, 0x6c, 0xfa, 0x4c,
	0xbe, 0x8c, 0x0f, 0x2c, 0x97, 0xf7, 0x6c, 0x9f, 0xfb, 0xfc, 0x92, 0x39, 0x98, 0xa9, 0x89, 0x1a,
	0x25, 0x74, 0xbc, 0x08, 0x0b, 0xed, 0x5e, 0x28, 0x4f, 0xf0, 0x1e, 0xac, 0xee, 0x30, 0x21, 0x3b,
	0x34, 0x3a, 0x66, 0x2e, 0x15, 0x0e, 0x15, 0x21, 0x0f, 0x04, 0x45, 0xf7, 0x60, 0x49, 0xa4, 0x58,
	0x45, 0xab, 0x15, 0xea, 0xe5, 0xc6, 0x55, 0xeb, 0xd2, 0x7d, 0x6b, 0x38, 0x4a, 0x75, 0x4e, 0x46,
	0xc6, 0x3d, 0xb8, 0xf6, 0x98, 0xca, 0xbd, 0xc8, 0x27, 0x01, 0x7b, 0xab, 0xee, 0x30, 0xe4, 0xd0,
	0xd7, 0x31, 0x15, 0x12, 0xdd, 0x00, 0x83, 0xe7, 0x56, 0x77, 0x49, 0x8f, 0x56, 0xb4, 0x9a, 0x56,
	0x2f, 0x39, 0x13, 0x38, 0xaa, 0x41, 0x39, 0xdd, 0x58, 0xd1, 0x74, 0x45, 0xcb, 0x43, 0xf8, 0xc3,
	0x02, 0x18, 0xe3, 0x6e, 0xc6, 0x65, 0xda, 0x84, 0x6c, 0xaa, 0x09, 0xfd, 0x17, 0x26, 0x76, 0x60,
	0x95, 0x84, 0xac, 0x13, 0x52, 0x97, 0x1d, 0x32, 0x57, 0xe1, 0xdd, 0x93, 0x90, 0x56, 0x0a, 0x03,
	0xfe, 0x56, 0xa5, 0xff, 0x6d, 0x63, 0xb5, 0xf9, 0x6c, 0x7b, 0x62, 0xdd, 0x99, 0xaa, 0x42, 0x0f,
	0xa0, 0x28, 0x24, 0x91, 0xb1, 0xa8, 0xcc, 0xd7, 0xb4, 0xfa, 0x4a, 0x03, 0xcf, 0x88, 0xd5, 0xea,
	0x28, 0xa6, 0x93, 0x2a, 0xd0, 0x3e, 0x5c, 0x39, 0x22, 0x92, 0x0a, 0xd9, 0x74, 0x5d, 0x2a, 0x44,
	0x9a, 0x68, 0x65, 0xa1, 0xa6, 0xd5, 0xcb, 0x8d, 0xeb, 0xb3, 0x36, 0x1a, 0x11, 0x38, 0xd3, 0x76,
	0x31, 0xdf, 0xeb, 0xf0, 0xdf, 0x08, 0x82, 0x56, 0x40, 0x67, 0x5e, 0x9a, 0x9e, 0xce, 0x3c, 0xf4,
	0x24, 0xb3, 0xae, 0x2b, 0xeb, 0xb7, 0xfe, 0xf8, 0xc4, 0xf1, 0x8b, 0xdc, 0x87, 0x92, 0x1b, 0x51,
	0x22, 0xa9, 0xd7, 0x94, 0x2a, 0xc7, 0x72, 0xc3, 0xb4, 0x92, 0x12, 0xb7, 0x86, 0x85, 0x6b, 0x75,
	0x87, 0x25, 0xee, 0x5c, 0x92, 0x07, 0xca, 0x38, 0xf4, 0x52, 0xe5, 0xfc, 0xef, 0x95, 0x19, 0x19,
	0xdf, 0x84, 0x62, 0xe2, 0x02, 0x01, 0x14, 0x1f, 0x35, 0xb7, 0x77, 0xda, 0x2d, 0x63, 0x0e, 0x95,
	0x61, 0xf1, 0xa1, 0xd3, 0x6e, 0x76, 0xdb, 0x2d, 0x43, 0x43, 0x4b, 0x30, 0xdf, 0x69, 0xef, 0xb6,
	0x0c, 0x1d, 0xdf, 0xcd, 0xc8, 0x65, 0x58, 0x8c, 0x83, 0x57, 0x01, 0x7f, 0x13, 0x18, 0x73, 0xa8,
	0x08, 0x7a, 0x1c, 0x26, 0x44, 0x6f, 0x80, 0xe8, 0x68, 0x19, 0x96, 0x3c, 0xea, 0x47, 0xc4, 0xa3,
	0x9e, 0x51, 0x18, 0x14, 0x7f, 0x7a, 0xe3, 0xe4, 0xfa, 0x5d, 0xfe, 0x2f, 0x8b, 0xbf, 0x71, 0x51,
	0x80, 0x52, 0x16, 0x3c, 0xa2, 0xb0, 0x9c, 0x6f, 0x65, 0x64, 0xe4, 0x9e, 0x47, 0x35, 0xbb, 0xb9,
	0x91, 0x43, 0xa6, 0x75, 0x3d, 0xc6, 0xef, 0xbe, 0xfe, 0xf8, 0xa8, 0xaf, 0x23, 0x53, 0x7d, 0x43,
	0xc7, 0xb7, 0xed, 0x8c, 0x6f, 0x0f, 0x1b, 0x1c, 0x7d, 0xd2, 0x60, 0x6d, 0x7a, 0x87, 0xa3, 0x7a,
	0x6e, 0xff, 0x99, 0x9f, 0x80, 0x39, 0xeb, 0x33, 0xc1, 0xcf, 0x95, 0x8b, 0xa7, 0x68, 0x7b, 0xd2,
	0x45, 0x3e, 0x24, 0x61, 0x9f, 0x8e, 0x67, 0x76, 0x96, 0xd9, 0xb4, 0x4f, 0x73, 0x41, 0x9d, 0xa1,
	0xcf, 0x1a, 0xac, 0x4d, 0x7f, 0x99, 0x11, 0xd3, 0x33, 0x1f, 0xcf, 0x9c, 0x08, 0x14, 0x13, 0xe5,
	0x74, 0x1f, 0xbf, 0xf8, 0x6b, 0x4e, 0x6d, 0xa2, 0xce, 0xde, 0x8c, 0x92, 0x33, 0xc5, 0x96, 0x71,
	0x7e, 0x51, 0x9d, 0x3b, 0xef, 0x57, 0xb5, 0x2f, 0xfd, 0xaa, 0xf6, 0xbd, 0x5f, 0xd5, 0x0e, 0x8a,
	0xaa, 0xce, 0xef, 0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xd4, 0xf4, 0x8d, 0x4e, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DirectoryClient is the client API for Directory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirectoryClient interface {
	ListServices(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListServicesResponse, error)
	GetOrganizationService(ctx context.Context, in *GetOrganizationServiceRequest, opts ...grpc.CallOption) (*DirectoryService, error)
	RequestAccessToService(ctx context.Context, in *RequestAccessToServiceRequest, opts ...grpc.CallOption) (*Empty, error)
}

type directoryClient struct {
	cc *grpc.ClientConn
}

func NewDirectoryClient(cc *grpc.ClientConn) DirectoryClient {
	return &directoryClient{cc}
}

func (c *directoryClient) ListServices(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := c.cc.Invoke(ctx, "/directory.Directory/ListServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) GetOrganizationService(ctx context.Context, in *GetOrganizationServiceRequest, opts ...grpc.CallOption) (*DirectoryService, error) {
	out := new(DirectoryService)
	err := c.cc.Invoke(ctx, "/directory.Directory/GetOrganizationService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) RequestAccessToService(ctx context.Context, in *RequestAccessToServiceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/directory.Directory/RequestAccessToService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirectoryServer is the server API for Directory service.
type DirectoryServer interface {
	ListServices(context.Context, *Empty) (*ListServicesResponse, error)
	GetOrganizationService(context.Context, *GetOrganizationServiceRequest) (*DirectoryService, error)
	RequestAccessToService(context.Context, *RequestAccessToServiceRequest) (*Empty, error)
}

// UnimplementedDirectoryServer can be embedded to have forward compatible implementations.
type UnimplementedDirectoryServer struct {
}

func (*UnimplementedDirectoryServer) ListServices(ctx context.Context, req *Empty) (*ListServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServices not implemented")
}
func (*UnimplementedDirectoryServer) GetOrganizationService(ctx context.Context, req *GetOrganizationServiceRequest) (*DirectoryService, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationService not implemented")
}
func (*UnimplementedDirectoryServer) RequestAccessToService(ctx context.Context, req *RequestAccessToServiceRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestAccessToService not implemented")
}

func RegisterDirectoryServer(s *grpc.Server, srv DirectoryServer) {
	s.RegisterService(&_Directory_serviceDesc, srv)
}

func _Directory_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directory.Directory/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).ListServices(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_GetOrganizationService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrganizationServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).GetOrganizationService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directory.Directory/GetOrganizationService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).GetOrganizationService(ctx, req.(*GetOrganizationServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_RequestAccessToService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAccessToServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).RequestAccessToService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directory.Directory/RequestAccessToService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).RequestAccessToService(ctx, req.(*RequestAccessToServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Directory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "directory.Directory",
	HandlerType: (*DirectoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServices",
			Handler:    _Directory_ListServices_Handler,
		},
		{
			MethodName: "GetOrganizationService",
			Handler:    _Directory_GetOrganizationService_Handler,
		},
		{
			MethodName: "RequestAccessToService",
			Handler:    _Directory_RequestAccessToService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "directory.proto",
}

func (m *Empty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Empty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Empty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListServicesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListServicesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListServicesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Services) > 0 {
		for iNdEx := len(m.Services) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Services[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDirectory(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetOrganizationServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetOrganizationServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetOrganizationServiceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OrganizationName) > 0 {
		i -= len(m.OrganizationName)
		copy(dAtA[i:], m.OrganizationName)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.OrganizationName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DirectoryService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DirectoryService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DirectoryService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LatestAccessRequest != nil {
		{
			size, err := m.LatestAccessRequest.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDirectory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Status != 0 {
		i = encodeVarintDirectory(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if len(m.APISpecificationType) > 0 {
		i -= len(m.APISpecificationType)
		copy(dAtA[i:], m.APISpecificationType)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.APISpecificationType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OrganizationName) > 0 {
		i -= len(m.OrganizationName)
		copy(dAtA[i:], m.OrganizationName)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.OrganizationName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DirectoryService_AccessRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DirectoryService_AccessRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DirectoryService_AccessRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UpdatedAt != nil {
		{
			size, err := m.UpdatedAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDirectory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		{
			size, err := m.CreatedAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDirectory(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Status != 0 {
		i = encodeVarintDirectory(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RequestAccessToServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestAccessToServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestAccessToServiceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServiceName) > 0 {
		i -= len(m.ServiceName)
		copy(dAtA[i:], m.ServiceName)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.ServiceName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.OrganizationName) > 0 {
		i -= len(m.OrganizationName)
		copy(dAtA[i:], m.OrganizationName)
		i = encodeVarintDirectory(dAtA, i, uint64(len(m.OrganizationName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDirectory(dAtA []byte, offset int, v uint64) int {
	offset -= sovDirectory(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Empty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListServicesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovDirectory(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetOrganizationServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrganizationName)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DirectoryService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	l = len(m.OrganizationName)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	l = len(m.APISpecificationType)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovDirectory(uint64(m.Status))
	}
	if m.LatestAccessRequest != nil {
		l = m.LatestAccessRequest.Size()
		n += 1 + l + sovDirectory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DirectoryService_AccessRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovDirectory(uint64(m.Status))
	}
	if m.CreatedAt != nil {
		l = m.CreatedAt.Size()
		n += 1 + l + sovDirectory(uint64(l))
	}
	if m.UpdatedAt != nil {
		l = m.UpdatedAt.Size()
		n += 1 + l + sovDirectory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RequestAccessToServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OrganizationName)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	l = len(m.ServiceName)
	if l > 0 {
		n += 1 + l + sovDirectory(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDirectory(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDirectory(x uint64) (n int) {
	return sovDirectory(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Empty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDirectory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Empty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Empty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDirectory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListServicesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDirectory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListServicesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListServicesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &DirectoryService{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDirectory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetOrganizationServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDirectory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetOrganizationServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetOrganizationServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrganizationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrganizationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDirectory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DirectoryService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDirectory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DirectoryService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DirectoryService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrganizationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrganizationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APISpecificationType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APISpecificationType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= DirectoryService_Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestAccessRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LatestAccessRequest == nil {
				m.LatestAccessRequest = &DirectoryService_AccessRequest{}
			}
			if err := m.LatestAccessRequest.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDirectory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DirectoryService_AccessRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDirectory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccessRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccessRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= DirectoryService_AccessRequest_Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = &types.Timestamp{}
			}
			if err := m.CreatedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedAt == nil {
				m.UpdatedAt = &types.Timestamp{}
			}
			if err := m.UpdatedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDirectory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestAccessToServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDirectory
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestAccessToServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestAccessToServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrganizationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrganizationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDirectory
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDirectory
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDirectory(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDirectory
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDirectory(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDirectory
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDirectory
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDirectory
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDirectory
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDirectory
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDirectory        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDirectory          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDirectory = fmt.Errorf("proto: unexpected end of group")
)
