// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/txlogdb/database.go

// Package mock_txlogdb is a generated GoMock package.
package mock_txlogdb

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	txlogdb "go.nlx.io/nlx/management-api/pkg/txlogdb"
	reflect "reflect"
)

// MockTxlogDatabase is a mock of TxlogDatabase interface
type MockTxlogDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockTxlogDatabaseMockRecorder
}

// MockTxlogDatabaseMockRecorder is the mock recorder for MockTxlogDatabase
type MockTxlogDatabaseMockRecorder struct {
	mock *MockTxlogDatabase
}

// NewMockTxlogDatabase creates a new mock instance
func NewMockTxlogDatabase(ctrl *gomock.Controller) *MockTxlogDatabase {
	mock := &MockTxlogDatabase{ctrl: ctrl}
	mock.recorder = &MockTxlogDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTxlogDatabase) EXPECT() *MockTxlogDatabaseMockRecorder {
	return m.recorder
}

// FilterRecords mocks base method
func (m *MockTxlogDatabase) FilterRecords(ctx context.Context, filters *txlogdb.Filters) ([]txlogdb.Record, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FilterRecords", ctx, filters)
	ret0, _ := ret[0].([]txlogdb.Record)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FilterRecords indicates an expected call of FilterRecords
func (mr *MockTxlogDatabaseMockRecorder) FilterRecords(ctx, filters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FilterRecords", reflect.TypeOf((*MockTxlogDatabase)(nil).FilterRecords), ctx, filters)
}
