// Code generated by MockGen. DO NOT EDIT.
// Source: account.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	go_uuid "github.com/satori/go.uuid"

	models "go.nlx.io/nlx/management-api/models"
)

// MockAccount is a mock of Account interface
type MockAccount struct {
	ctrl     *gomock.Controller
	recorder *MockAccountMockRecorder
}

// MockAccountMockRecorder is the mock recorder for MockAccount
type MockAccountMockRecorder struct {
	mock *MockAccount
}

// NewMockAccount creates a new mock instance
func NewMockAccount(ctrl *gomock.Controller) *MockAccount {
	mock := &MockAccount{ctrl: ctrl}
	mock.recorder = &MockAccountMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccount) EXPECT() *MockAccountMockRecorder {
	return m.recorder
}

// GetByID mocks base method
func (m *MockAccount) GetByID(id go_uuid.UUID) (*models.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", id)
	ret0, _ := ret[0].(*models.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockAccountMockRecorder) GetByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockAccount)(nil).GetByID), id)
}

// GetByExternalID mocks base method
func (m *MockAccount) GetByExternalID(externalID string) (*models.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByExternalID", externalID)
	ret0, _ := ret[0].(*models.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByExternalID indicates an expected call of GetByExternalID
func (mr *MockAccountMockRecorder) GetByExternalID(externalID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByExternalID", reflect.TypeOf((*MockAccount)(nil).GetByExternalID), externalID)
}

// CreateOrUpdateByExternalID mocks base method
func (m *MockAccount) CreateOrUpdateByExternalID(account *models.Account) (*go_uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateByExternalID", account)
	ret0, _ := ret[0].(*go_uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrUpdateByExternalID indicates an expected call of CreateOrUpdateByExternalID
func (mr *MockAccountMockRecorder) CreateOrUpdateByExternalID(account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateByExternalID", reflect.TypeOf((*MockAccount)(nil).CreateOrUpdateByExternalID), account)
}
