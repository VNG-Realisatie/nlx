/* tslint:disable */
/* eslint-disable */
/**
 * management.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcStatus,
} from '../models';
import {
    RpcStatusFromJSON,
    RpcStatusToJSON,
} from '../models';

export interface ManagementCancelOutgoingAccessRequestRequest {
    organizationSerialNumber: string;
    serviceName: string;
    publicKeyFingerprint?: string;
}

export interface ManagementTerminateOutgoingAccessRequestRequest {
    organizationSerialNumber: string;
    serviceName: string;
    publicKeyFingerprint?: string;
}

/**
 * 
 */
export class ManagementApi extends runtime.BaseAPI {

    /**
     */
    async managementCancelOutgoingAccessRequestRaw(requestParameters: ManagementCancelOutgoingAccessRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.organizationSerialNumber === null || requestParameters.organizationSerialNumber === undefined) {
            throw new runtime.RequiredError('organizationSerialNumber','Required parameter requestParameters.organizationSerialNumber was null or undefined when calling managementCancelOutgoingAccessRequest.');
        }

        if (requestParameters.serviceName === null || requestParameters.serviceName === undefined) {
            throw new runtime.RequiredError('serviceName','Required parameter requestParameters.serviceName was null or undefined when calling managementCancelOutgoingAccessRequest.');
        }

        const queryParameters: any = {};

        if (requestParameters.publicKeyFingerprint !== undefined) {
            queryParameters['public_key_fingerprint'] = requestParameters.publicKeyFingerprint;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/access-requests/outgoing/{organization_serial_number}/services/{service_name}/cancel`.replace(`{${"organization_serial_number"}}`, encodeURIComponent(String(requestParameters.organizationSerialNumber))).replace(`{${"service_name"}}`, encodeURIComponent(String(requestParameters.serviceName))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async managementCancelOutgoingAccessRequest(requestParameters: ManagementCancelOutgoingAccessRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.managementCancelOutgoingAccessRequestRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async managementTerminateOutgoingAccessRequestRaw(requestParameters: ManagementTerminateOutgoingAccessRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.organizationSerialNumber === null || requestParameters.organizationSerialNumber === undefined) {
            throw new runtime.RequiredError('organizationSerialNumber','Required parameter requestParameters.organizationSerialNumber was null or undefined when calling managementTerminateOutgoingAccessRequest.');
        }

        if (requestParameters.serviceName === null || requestParameters.serviceName === undefined) {
            throw new runtime.RequiredError('serviceName','Required parameter requestParameters.serviceName was null or undefined when calling managementTerminateOutgoingAccessRequest.');
        }

        const queryParameters: any = {};

        if (requestParameters.publicKeyFingerprint !== undefined) {
            queryParameters['public_key_fingerprint'] = requestParameters.publicKeyFingerprint;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/access-requests/outgoing/{organization_serial_number}/services/{service_name}/terminate`.replace(`{${"organization_serial_number"}}`, encodeURIComponent(String(requestParameters.organizationSerialNumber))).replace(`{${"service_name"}}`, encodeURIComponent(String(requestParameters.serviceName))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async managementTerminateOutgoingAccessRequest(requestParameters: ManagementTerminateOutgoingAccessRequestRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.managementTerminateOutgoingAccessRequestRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
