/* tslint:disable */
/* eslint-disable */
/**
 * management.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ManagementOrganization } from './ManagementOrganization';
import {
    ManagementOrganizationFromJSON,
    ManagementOrganizationFromJSONTyped,
    ManagementOrganizationToJSON,
} from './ManagementOrganization';

/**
 * 
 * @export
 * @interface ManagementAuditLogRecordMetadata
 */
export interface ManagementAuditLogRecordMetadata {
    /**
     * 
     * @type {ManagementOrganization}
     * @memberof ManagementAuditLogRecordMetadata
     */
    delegatee?: ManagementOrganization;
    /**
     * 
     * @type {ManagementOrganization}
     * @memberof ManagementAuditLogRecordMetadata
     */
    delegator?: ManagementOrganization;
    /**
     * 
     * @type {string}
     * @memberof ManagementAuditLogRecordMetadata
     */
    reference?: string;
    /**
     * 
     * @type {string}
     * @memberof ManagementAuditLogRecordMetadata
     */
    inwayName?: string;
}

/**
 * Check if a given object implements the ManagementAuditLogRecordMetadata interface.
 */
export function instanceOfManagementAuditLogRecordMetadata(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ManagementAuditLogRecordMetadataFromJSON(json: any): ManagementAuditLogRecordMetadata {
    return ManagementAuditLogRecordMetadataFromJSONTyped(json, false);
}

export function ManagementAuditLogRecordMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManagementAuditLogRecordMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'delegatee': !exists(json, 'delegatee') ? undefined : ManagementOrganizationFromJSON(json['delegatee']),
        'delegator': !exists(json, 'delegator') ? undefined : ManagementOrganizationFromJSON(json['delegator']),
        'reference': !exists(json, 'reference') ? undefined : json['reference'],
        'inwayName': !exists(json, 'inwayName') ? undefined : json['inwayName'],
    };
}

export function ManagementAuditLogRecordMetadataToJSON(value?: ManagementAuditLogRecordMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'delegatee': ManagementOrganizationToJSON(value.delegatee),
        'delegator': ManagementOrganizationToJSON(value.delegator),
        'reference': value.reference,
        'inwayName': value.inwayName,
    };
}

