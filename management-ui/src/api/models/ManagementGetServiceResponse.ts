/* tslint:disable */
/* eslint-disable */
/**
 * management.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ManagementGetServiceResponse
 */
export interface ManagementGetServiceResponse {
    /**
     * 
     * @type {string}
     * @memberof ManagementGetServiceResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ManagementGetServiceResponse
     */
    endpointUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ManagementGetServiceResponse
     */
    documentationUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ManagementGetServiceResponse
     */
    apiSpecificationUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ManagementGetServiceResponse
     */
    internal?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ManagementGetServiceResponse
     */
    techSupportContact?: string;
    /**
     * 
     * @type {string}
     * @memberof ManagementGetServiceResponse
     */
    publicSupportContact?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ManagementGetServiceResponse
     */
    inways?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof ManagementGetServiceResponse
     */
    oneTimeCosts?: number;
    /**
     * 
     * @type {number}
     * @memberof ManagementGetServiceResponse
     */
    monthlyCosts?: number;
    /**
     * 
     * @type {number}
     * @memberof ManagementGetServiceResponse
     */
    requestCosts?: number;
}

export function ManagementGetServiceResponseFromJSON(json: any): ManagementGetServiceResponse {
    return ManagementGetServiceResponseFromJSONTyped(json, false);
}

export function ManagementGetServiceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManagementGetServiceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'endpointUrl': !exists(json, 'endpoint_url') ? undefined : json['endpoint_url'],
        'documentationUrl': !exists(json, 'documentation_url') ? undefined : json['documentation_url'],
        'apiSpecificationUrl': !exists(json, 'api_specification_url') ? undefined : json['api_specification_url'],
        'internal': !exists(json, 'internal') ? undefined : json['internal'],
        'techSupportContact': !exists(json, 'tech_support_contact') ? undefined : json['tech_support_contact'],
        'publicSupportContact': !exists(json, 'public_support_contact') ? undefined : json['public_support_contact'],
        'inways': !exists(json, 'inways') ? undefined : json['inways'],
        'oneTimeCosts': !exists(json, 'one_time_costs') ? undefined : json['one_time_costs'],
        'monthlyCosts': !exists(json, 'monthly_costs') ? undefined : json['monthly_costs'],
        'requestCosts': !exists(json, 'request_costs') ? undefined : json['request_costs'],
    };
}

export function ManagementGetServiceResponseToJSON(value?: ManagementGetServiceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'endpoint_url': value.endpointUrl,
        'documentation_url': value.documentationUrl,
        'api_specification_url': value.apiSpecificationUrl,
        'internal': value.internal,
        'tech_support_contact': value.techSupportContact,
        'public_support_contact': value.publicSupportContact,
        'inways': value.inways,
        'one_time_costs': value.oneTimeCosts,
        'monthly_costs': value.monthlyCosts,
        'request_costs': value.requestCosts,
    };
}

