/* tslint:disable */
/* eslint-disable */
/**
 * management.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ManagementTXLogDirection,
    ManagementTXLogDirectionFromJSON,
    ManagementTXLogDirectionFromJSONTyped,
    ManagementTXLogDirectionToJSON,
    ManagementTXLogOrder,
    ManagementTXLogOrderFromJSON,
    ManagementTXLogOrderFromJSONTyped,
    ManagementTXLogOrderToJSON,
    ManagementTXLogOrganization,
    ManagementTXLogOrganizationFromJSON,
    ManagementTXLogOrganizationFromJSONTyped,
    ManagementTXLogOrganizationToJSON,
    ManagementTXLogService,
    ManagementTXLogServiceFromJSON,
    ManagementTXLogServiceFromJSONTyped,
    ManagementTXLogServiceToJSON,
} from './';

/**
 * 
 * @export
 * @interface ManagementTXLogRecord
 */
export interface ManagementTXLogRecord {
    /**
     * 
     * @type {ManagementTXLogOrganization}
     * @memberof ManagementTXLogRecord
     */
    source?: ManagementTXLogOrganization;
    /**
     * 
     * @type {ManagementTXLogOrganization}
     * @memberof ManagementTXLogRecord
     */
    destination?: ManagementTXLogOrganization;
    /**
     * 
     * @type {ManagementTXLogDirection}
     * @memberof ManagementTXLogRecord
     */
    direction?: ManagementTXLogDirection;
    /**
     * 
     * @type {ManagementTXLogService}
     * @memberof ManagementTXLogRecord
     */
    service?: ManagementTXLogService;
    /**
     * 
     * @type {string}
     * @memberof ManagementTXLogRecord
     */
    data?: string;
    /**
     * 
     * @type {ManagementTXLogOrder}
     * @memberof ManagementTXLogRecord
     */
    order?: ManagementTXLogOrder;
    /**
     * 
     * @type {string}
     * @memberof ManagementTXLogRecord
     */
    transactionID?: string;
    /**
     * 
     * @type {Date}
     * @memberof ManagementTXLogRecord
     */
    createdAt?: Date;
}

export function ManagementTXLogRecordFromJSON(json: any): ManagementTXLogRecord {
    return ManagementTXLogRecordFromJSONTyped(json, false);
}

export function ManagementTXLogRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManagementTXLogRecord {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': !exists(json, 'source') ? undefined : ManagementTXLogOrganizationFromJSON(json['source']),
        'destination': !exists(json, 'destination') ? undefined : ManagementTXLogOrganizationFromJSON(json['destination']),
        'direction': !exists(json, 'direction') ? undefined : ManagementTXLogDirectionFromJSON(json['direction']),
        'service': !exists(json, 'service') ? undefined : ManagementTXLogServiceFromJSON(json['service']),
        'data': !exists(json, 'data') ? undefined : json['data'],
        'order': !exists(json, 'order') ? undefined : ManagementTXLogOrderFromJSON(json['order']),
        'transactionID': !exists(json, 'TransactionID') ? undefined : json['TransactionID'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
    };
}

export function ManagementTXLogRecordToJSON(value?: ManagementTXLogRecord | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': ManagementTXLogOrganizationToJSON(value.source),
        'destination': ManagementTXLogOrganizationToJSON(value.destination),
        'direction': ManagementTXLogDirectionToJSON(value.direction),
        'service': ManagementTXLogServiceToJSON(value.service),
        'data': value.data,
        'order': ManagementTXLogOrderToJSON(value.order),
        'TransactionID': value.transactionID,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
    };
}


