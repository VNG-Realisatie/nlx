// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: outway.proto

package api

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignOrderClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegatee                     string                 `protobuf:"bytes,1,opt,name=delegatee,proto3" json:"delegatee,omitempty"`
	DelegateePublicKeyFingerprint string                 `protobuf:"bytes,2,opt,name=delegateePublicKeyFingerprint,proto3" json:"delegateePublicKeyFingerprint,omitempty"`
	OrderReference                string                 `protobuf:"bytes,3,opt,name=orderReference,proto3" json:"orderReference,omitempty"`
	AccessProof                   *AccessProof           `protobuf:"bytes,4,opt,name=accessProof,proto3" json:"accessProof,omitempty"`
	ExpiresAt                     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
}

func (x *SignOrderClaimRequest) Reset() {
	*x = SignOrderClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOrderClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOrderClaimRequest) ProtoMessage() {}

func (x *SignOrderClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_outway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOrderClaimRequest.ProtoReflect.Descriptor instead.
func (*SignOrderClaimRequest) Descriptor() ([]byte, []int) {
	return file_outway_proto_rawDescGZIP(), []int{0}
}

func (x *SignOrderClaimRequest) GetDelegatee() string {
	if x != nil {
		return x.Delegatee
	}
	return ""
}

func (x *SignOrderClaimRequest) GetDelegateePublicKeyFingerprint() string {
	if x != nil {
		return x.DelegateePublicKeyFingerprint
	}
	return ""
}

func (x *SignOrderClaimRequest) GetOrderReference() string {
	if x != nil {
		return x.OrderReference
	}
	return ""
}

func (x *SignOrderClaimRequest) GetAccessProof() *AccessProof {
	if x != nil {
		return x.AccessProof
	}
	return nil
}

func (x *SignOrderClaimRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type SignOrderClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedOrderclaim string `protobuf:"bytes,1,opt,name=signedOrderclaim,proto3" json:"signedOrderclaim,omitempty"`
}

func (x *SignOrderClaimResponse) Reset() {
	*x = SignOrderClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOrderClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOrderClaimResponse) ProtoMessage() {}

func (x *SignOrderClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_outway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOrderClaimResponse.ProtoReflect.Descriptor instead.
func (*SignOrderClaimResponse) Descriptor() ([]byte, []int) {
	return file_outway_proto_rawDescGZIP(), []int{1}
}

func (x *SignOrderClaimResponse) GetSignedOrderclaim() string {
	if x != nil {
		return x.SignedOrderclaim
	}
	return ""
}

type AccessProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName              string `protobuf:"bytes,1,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
	OrganizationSerialNumber string `protobuf:"bytes,2,opt,name=OrganizationSerialNumber,proto3" json:"OrganizationSerialNumber,omitempty"`
	PublicKeyFingerprint     string `protobuf:"bytes,3,opt,name=PublicKeyFingerprint,proto3" json:"PublicKeyFingerprint,omitempty"`
}

func (x *AccessProof) Reset() {
	*x = AccessProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_outway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessProof) ProtoMessage() {}

func (x *AccessProof) ProtoReflect() protoreflect.Message {
	mi := &file_outway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessProof.ProtoReflect.Descriptor instead.
func (*AccessProof) Descriptor() ([]byte, []int) {
	return file_outway_proto_rawDescGZIP(), []int{2}
}

func (x *AccessProof) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *AccessProof) GetOrganizationSerialNumber() string {
	if x != nil {
		return x.OrganizationSerialNumber
	}
	return ""
}

func (x *AccessProof) GetPublicKeyFingerprint() string {
	if x != nil {
		return x.PublicKeyFingerprint
	}
	return ""
}

var File_outway_proto protoreflect.FileDescriptor

var file_outway_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x6e, 0x6c, 0x78, 0x2e, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x15,
	0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x65, 0x12, 0x44, 0x0a, 0x1d, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x6c, 0x78, 0x2e, 0x6f, 0x75, 0x74,
	0x77, 0x61, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x38, 0x0a, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x44, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0x9f, 0x01, 0x0a,
	0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x18, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x32, 0x63,
	0x0a, 0x06, 0x4f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x12, 0x59, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x21, 0x2e, 0x6e, 0x6c, 0x78,
	0x2e, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6e, 0x6c, 0x78, 0x2e, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x6f, 0x2e, 0x6e, 0x6c, 0x78, 0x2e, 0x69, 0x6f,
	0x2f, 0x6e, 0x6c, 0x78, 0x2f, 0x6f, 0x75, 0x74, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_outway_proto_rawDescOnce sync.Once
	file_outway_proto_rawDescData = file_outway_proto_rawDesc
)

func file_outway_proto_rawDescGZIP() []byte {
	file_outway_proto_rawDescOnce.Do(func() {
		file_outway_proto_rawDescData = protoimpl.X.CompressGZIP(file_outway_proto_rawDescData)
	})
	return file_outway_proto_rawDescData
}

var file_outway_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_outway_proto_goTypes = []interface{}{
	(*SignOrderClaimRequest)(nil),  // 0: nlx.outway.SignOrderClaimRequest
	(*SignOrderClaimResponse)(nil), // 1: nlx.outway.SignOrderClaimResponse
	(*AccessProof)(nil),            // 2: nlx.outway.AccessProof
	(*timestamppb.Timestamp)(nil),  // 3: google.protobuf.Timestamp
}
var file_outway_proto_depIdxs = []int32{
	2, // 0: nlx.outway.SignOrderClaimRequest.accessProof:type_name -> nlx.outway.AccessProof
	3, // 1: nlx.outway.SignOrderClaimRequest.expiresAt:type_name -> google.protobuf.Timestamp
	0, // 2: nlx.outway.Outway.SignOrderClaim:input_type -> nlx.outway.SignOrderClaimRequest
	1, // 3: nlx.outway.Outway.SignOrderClaim:output_type -> nlx.outway.SignOrderClaimResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_outway_proto_init() }
func file_outway_proto_init() {
	if File_outway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_outway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOrderClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOrderClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_outway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_outway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_outway_proto_goTypes,
		DependencyIndexes: file_outway_proto_depIdxs,
		MessageInfos:      file_outway_proto_msgTypes,
	}.Build()
	File_outway_proto = out.File
	file_outway_proto_rawDesc = nil
	file_outway_proto_goTypes = nil
	file_outway_proto_depIdxs = nil
}
