@startuml
title: Consume a service offered by a delegate

skinparam sequenceBoxBorderColor #transparent
skinparam boxPadding 50
hide footbox

box "API Consumer"
actor "Client" as clientConsumer
participant "Outway" as outwayConsumer
end box


box "Saas Organization"
participant "Inway" as inwaySaasOrganization
participant "Service" as serviceSaasOrganization
end box

box "Municipality"
participant "Inway" as inwayMunicipality
participant "Management API" as managementAPIMunicipality
end box

inwaySaasOrganization -> inwayMunicipality: get claim for publishing service
inwayMunicipality -> managementAPIMunicipality: get publication-claim
managementAPIMunicipality -> inwayMunicipality: return publication-claim
inwayMunicipality -> inwaySaasOrganization: return publication-claim
inwaySaasOrganization -> inwaySaasOrganization: store publication-claim in memory

clientConsumer -> outwayConsumer: call service
outwayConsumer -> inwaySaasOrganization: get publication-claim stating that the organization is allowed to  publish the service
inwaySaasOrganization -> outwayConsumer: return publication-claim
outwayConsumer -> outwayConsumer: verify publication-claim
outwayConsumer -> inwayMunicipality: get access-claim stating API consumer has access
inwayMunicipality -> managementAPIMunicipality: get access-claim
managementAPIMunicipality -> inwayMunicipality: return access-claim
inwayMunicipality -> outwayConsumer: return access-claim
outwayConsumer -> outwayConsumer: store access-claim in memory
outwayConsumer -> inwaySaasOrganization: call service with access-claim
inwaySaasOrganization -> inwaySaasOrganization: validate access-claim
inwaySaasOrganization -> inwaySaasOrganization: use delegator from access-claim to determine the service to call
inwaySaasOrganization -> serviceSaasOrganization: call service

@enduml
